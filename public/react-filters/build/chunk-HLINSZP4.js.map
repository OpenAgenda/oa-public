{"version":3,"sources":["../src/hooks/useLoadGeoData.js"],"sourcesContent":["import { useCallback } from 'react';\nimport qs from 'qs';\nimport getQuerySeparator from '../utils/getQuerySeparator.js';\n\nexport default function useLoadGeoData(\n  _apiClient,\n  res,\n  queryOrFn,\n  options = {},\n) {\n  const { searchMethod = 'get' } = options;\n\n  return useCallback(\n    async (bounds, zoom) => {\n      const query = typeof queryOrFn === 'function' ? queryOrFn() : queryOrFn;\n      const northEast = bounds.getNorthEast().wrap();\n      const southWest = bounds.getSouthWest().wrap();\n\n      const params = {\n        // oaq: { passed: 1 },\n        size: 0,\n        ...query,\n        aggregations: [\n          {\n            type: 'geohash',\n            size: 2000,\n            zoom: Math.max(zoom, 1),\n            radius: zoom === 0 ? 80 : 40,\n          },\n        ],\n        geo: {\n          northEast,\n          southWest,\n        },\n      };\n\n      const result = await (\n        searchMethod === 'get'\n          ? fetch(\n            `${res}${getQuerySeparator(res)}${qs.stringify(params, {\n              skipNulls: true,\n            })}`,\n          )\n          : fetch(res, {\n            method: 'post',\n            body: JSON.stringify(params),\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n      ).then((r) => {\n        if (r.ok) return r.json();\n        throw new Error(\"Can't load geo data\");\n      });\n\n      return result.aggregations.geohash;\n    },\n    [res, queryOrFn, searchMethod],\n  );\n}\n"],"mappings":";;;;;AAAA,SAAS,mBAAmB;AAC5B,OAAO,QAAQ;AAGA,SAAR,eACL,YACA,KACA,WACA,UAAU,CAAC,GACX;AACA,QAAM,EAAE,eAAe,MAAM,IAAI;AAEjC,SAAO;AAAA,IACL,OAAO,QAAQ,SAAS;AACtB,YAAM,QAAQ,OAAO,cAAc,aAAa,UAAU,IAAI;AAC9D,YAAM,YAAY,OAAO,aAAa,EAAE,KAAK;AAC7C,YAAM,YAAY,OAAO,aAAa,EAAE,KAAK;AAE7C,YAAM,SAAS;AAAA;AAAA,QAEb,MAAM;AAAA,QACN,GAAG;AAAA,QACH,cAAc;AAAA,UACZ;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM,KAAK,IAAI,MAAM,CAAC;AAAA,YACtB,QAAQ,SAAS,IAAI,KAAK;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,KAAK;AAAA,UACH;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,YAAM,SAAS,OACb,iBAAiB,QACb;AAAA,QACA,GAAG,GAAG,GAAG,kBAAkB,GAAG,CAAC,GAAG,GAAG,UAAU,QAAQ;AAAA,UACrD,WAAW;AAAA,QACb,CAAC,CAAC;AAAA,MACJ,IACE,MAAM,KAAK;AAAA,QACX,QAAQ;AAAA,QACR,MAAM,KAAK,UAAU,MAAM;AAAA,QAC3B,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC,GACH,KAAK,CAAC,MAAM;AACZ,YAAI,EAAE,GAAI,QAAO,EAAE,KAAK;AACxB,cAAM,IAAI,MAAM,qBAAqB;AAAA,MACvC,CAAC;AAED,aAAO,OAAO,aAAa;AAAA,IAC7B;AAAA,IACA,CAAC,KAAK,WAAW,YAAY;AAAA,EAC/B;AACF;","names":[]}