{"version":3,"sources":["../src/components/fields/TimelineField.js"],"sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useRef,\n  useEffect,\n  useImperativeHandle,\n  useContext,\n} from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { FreeMode, Navigation } from 'swiper/modules';\nimport {\n  startOfDay,\n  endOfDay,\n  startOfMonth,\n  endOfMonth,\n  lastDayOfMonth,\n  addMonths,\n  isSameDay,\n  compareAsc,\n  format,\n} from 'date-fns';\nimport cn from 'classnames';\nimport dateFnsLocaleEN from 'date-fns/locale/en-US/index.js';\nimport useLoadTimingsData from '../../hooks/useLoadTimingsData.js';\nimport FiltersAndWidgetsContext from '../../contexts/FiltersAndWidgetsContext.js';\n\nconst messages = defineMessages({\n  selectMonth: {\n    id: 'ReactFilters.TimelineField.selectMonth',\n    defaultMessage: 'Select month',\n  },\n  selectDay: {\n    id: 'ReactFilters.TimelineField.selectDay',\n    defaultMessage: 'Select day',\n  },\n});\n\nfunction focusedDateToTimingsQuery(focusedDate) {\n  return {\n    gte: startOfMonth(focusedDate),\n    lte: endOfMonth(focusedDate),\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  };\n}\n\nfunction formatMonthYear(date, dfnLocale) {\n  const localeCode = dfnLocale?.code ?? undefined;\n\n  return new Intl.DateTimeFormat(localeCode, {\n    month: 'long',\n    year: 'numeric',\n  }).format(date);\n}\n\nfunction TimelineField(\n  {\n    input,\n    // meta,\n    // disabled,\n    className,\n    // minDate,\n    // maxDate,\n    // shownDate,\n    getQuery,\n    // ...otherProps\n  },\n  ref,\n) {\n  const intl = useIntl();\n\n  const today = new Date();\n\n  const {\n    filtersOptions: { dateFnsLocale, searchMethod, res },\n  } = useContext(FiltersAndWidgetsContext);\n\n  const monthsList = useMemo(\n    () =>\n      Array.from({ length: 25 }, (_, i) => {\n        const d = addMonths(today, i - 12);\n        return { month: d.getMonth(), year: d.getFullYear() };\n      }),\n    [],\n  );\n\n  const [monthPos, setMonthPos] = useState(() => {\n    if (Array.isArray(input.value) && input.value.length) {\n      const firstDate = new Date(input.value[0].startDate);\n      return monthsList.findIndex(\n        (m) =>\n          m.month === firstDate.getMonth()\n          && m.year === firstDate.getFullYear(),\n      );\n    }\n    return 12;\n  });\n  const { month: monthIndex, year } = monthsList[monthPos];\n\n  const initialDay = useMemo(() => {\n    if (Array.isArray(input.value) && input.value.length) {\n      return new Date(input.value[0].startDate).getDate();\n    }\n    return today.getDate();\n  }, [input.value]);\n  const [focusedDay, setFocusedDay] = useState(initialDay);\n\n  const [data, setData] = useState(() => null);\n\n  const loadTimingsData = useLoadTimingsData(res, getQuery, { searchMethod });\n\n  useEffect(() => {\n    loadTimingsData(\n      {\n        timings: focusedDateToTimingsQuery(new Date(year, monthIndex)),\n      },\n      {\n        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n    )\n      .then((newData) => setData(newData ?? []))\n      .catch((err) => {\n        console.log('Failed to load timings data', err);\n      });\n  }, [year, monthIndex]);\n\n  useImperativeHandle(ref, () => ({\n    onQueryChange: () => {\n      loadTimingsData(\n        {\n          timings: focusedDateToTimingsQuery(new Date(year, monthIndex)),\n        },\n        {\n          timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n        },\n      )\n        .then((newData) => setData(newData ?? []))\n        .catch((err) => {\n          console.log('Failed to load timings data', err);\n        });\n    },\n  }));\n\n  // date composition\n  const getDaysArray = () => {\n    if (monthIndex === null || year === null) return [];\n    const nb = lastDayOfMonth(new Date(year, monthIndex, 1)).getDate();\n    return Array.from({ length: nb }, (_, i) => i + 1);\n  };\n\n  const toggleDay = (day) => {\n    if (monthIndex === null || year === null) return;\n    setFocusedDay(day);\n\n    const dateObj = new Date(year, monthIndex, day);\n    const current = Array.isArray(input.value) ? input.value : [];\n\n    const next = current.some(({ startDate }) =>\n      isSameDay(new Date(startDate), dateObj))\n      ? current.filter(\n        ({ startDate }) => !isSameDay(new Date(startDate), dateObj),\n      )\n      : [\n        ...current,\n        {\n          startDate: startOfDay(dateObj).toISOString(),\n          endDate: endOfDay(dateObj).toISOString(),\n        },\n      ];\n\n    next.sort((a, b) =>\n      compareAsc(new Date(a.startDate), new Date(b.startDate)));\n    if (current[0]?.tz) next[0].tz = current[0].tz;\n\n    input.onChange(next);\n  };\n\n  const dayRefs = useRef([]);\n  const monthRefs = useRef([]);\n\n  const daysSwiper = useRef(null);\n  const monthsSwiper = useRef(null);\n\n  const handleSelectMonth = (pos) => setMonthPos(pos);\n\n  const handleDayKey = (e, day, index) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      // like a click\n      e.preventDefault();\n      toggleDay(day);\n    } else if (e.key === 'ArrowRight') {\n      e.preventDefault();\n      const next = (index + 1) % 31;\n      dayRefs.current[next]?.focus();\n    } else if (e.key === 'ArrowLeft') {\n      e.preventDefault();\n      const prev = (index + 30) % 31;\n      dayRefs.current[prev]?.focus();\n    }\n  };\n\n  const handleMonthKey = (e, pos) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      // like a click\n      e.preventDefault();\n      handleSelectMonth(pos);\n    } else if (e.key === 'ArrowRight') {\n      e.preventDefault();\n      monthRefs.current[(pos + 1) % monthsList.length]?.focus();\n    } else if (e.key === 'ArrowLeft') {\n      e.preventDefault();\n      monthRefs.current[\n        (pos + monthsList.length - 1) % monthsList.length\n      ]?.focus();\n    }\n  };\n\n  // const months = Array.from({ length: 12 }, (_, i) => i);\n  const days = getDaysArray();\n\n  return (\n    <div ref={ref} className={className}>\n      <div\n        role=\"listbox\"\n        aria-label={intl.formatMessage(messages.selectMonth)}\n        style={{ display: 'flex' }}\n      >\n        <div className=\"swiper-button-prev oa-timeline-swiper-months-prev\" />\n        <Swiper\n          slidesPerView=\"auto\"\n          centeredSlides\n          centeredSlidesBounds\n          // loop\n          freeMode\n          navigation={{\n            prevEl: '.oa-timeline-swiper-months-prev',\n            nextEl: '.oa-timeline-swiper-months-next',\n          }}\n          modules={[FreeMode, Navigation]}\n          className=\"oa-timeline-swiper-months\"\n          onSwiper={(sw) => {\n            monthsSwiper.current = sw;\n            sw.slideTo(monthPos, 0, false);\n          }}\n        >\n          {monthsList.map(({ month, year: monthYear }, pos) => {\n            const isSelected = monthPos === pos;\n            const isTabStop = isSelected || (monthPos === null && pos === 0);\n\n            return (\n              <SwiperSlide key={`${monthYear}-${month}`}>\n                <span\n                  role=\"option\"\n                  aria-selected={isSelected}\n                  ref={(el) => {\n                    monthRefs.current[pos] = el;\n                  }}\n                  tabIndex={isTabStop ? 0 : -1}\n                  onClick={() => {\n                    if (\n                      monthsSwiper.current\n                      && !monthsSwiper.current.allowClick\n                    ) return;\n                    handleSelectMonth(pos);\n                  }}\n                  onKeyDown={(e) => handleMonthKey(e, pos)}\n                >\n                  {monthYear !== today.getFullYear()\n                    ? formatMonthYear(\n                      new Date(monthYear, month, 15),\n                      dateFnsLocale,\n                    )\n                    : format(new Date(monthYear, month, 15), 'MMMM', {\n                      locale: dateFnsLocale || dateFnsLocaleEN,\n                    })}\n                </span>\n              </SwiperSlide>\n            );\n          })}\n        </Swiper>\n        <div className=\"swiper-button-next oa-timeline-swiper-months-next\" />\n      </div>\n\n      <div\n        role=\"listbox\"\n        aria-label={intl.formatMessage(messages.selectDay)}\n        style={{ display: 'flex' }}\n      >\n        <div className=\"swiper-button-prev oa-timeline-swiper-days-prev\" />\n\n        <Swiper\n          slidesPerView=\"auto\"\n          centeredSlides\n          centeredSlidesBounds\n          // loop\n          freeMode\n          navigation={{\n            prevEl: '.oa-timeline-swiper-days-prev',\n            nextEl: '.oa-timeline-swiper-days-next',\n          }}\n          modules={[FreeMode, Navigation]}\n          className=\"oa-timeline-swiper-days\"\n          onSwiper={(sw) => {\n            daysSwiper.current = sw;\n            sw.slideTo(initialDay - 1, 0);\n          }}\n        >\n          {days.map((day, idx) => {\n            const dateObj = year !== null ? new Date(year, monthIndex, day) : null;\n            const isChecked = dateObj\n              ? input.value?.some((d) => isSameDay(d.startDate, dateObj))\n              : false;\n            const isTabStop = focusedDay === day;\n\n            const isActive = data?.find(\n              (d) => isSameDay(new Date(d.key), dateObj) && d.timingCount > 0,\n            );\n\n            return (\n              <SwiperSlide key={day}>\n                <span\n                  role=\"option\"\n                  aria-selected={isChecked}\n                  ref={(el) => {\n                    dayRefs.current[idx] = el;\n                  }}\n                  tabIndex={isTabStop ? 0 : -1}\n                  onClick={() => {\n                    if (daysSwiper.current && !daysSwiper.current.allowClick) return;\n                    toggleDay(day);\n                  }}\n                  onKeyDown={(e) => handleDayKey(e, day, idx)}\n                  className={cn('oa-timeline-swiper-days-day', {\n                    'oa-timeline-swiper-days-day-with-timings':\n                      data && isActive,\n                    'oa-timeline-swiper-days-day-without-timings':\n                      data && !isActive,\n                  })}\n                >\n                  {day}\n                </span>\n              </SwiperSlide>\n            );\n          })}\n        </Swiper>\n\n        <div className=\"swiper-button-next oa-timeline-swiper-days-next\" />\n      </div>\n    </div>\n  );\n}\n\nexport default React.forwardRef(TimelineField);\n"],"mappings":"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","names":[]}