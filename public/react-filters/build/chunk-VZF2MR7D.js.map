{"version":3,"sources":["../src/components/filters/MapFilter.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Field, useField } from 'react-final-form';\nimport { defineMessages, useIntl } from 'react-intl';\nimport MapField from '../fields/MapField/index.js';\nimport Title from '../Title.js';\nimport Panel from '../Panel.js';\nimport FilterPreviewer from '../FilterPreviewer.js';\n\nconst subscription = { value: true };\n\nconst messages = defineMessages({\n  previewLabel: {\n    id: 'ReactFilters.filters.MapFilter.previewLabel',\n    defaultMessage: 'Map',\n  },\n});\n\nfunction Preview({\n  name,\n  filter,\n  component = FilterPreviewer,\n  disabled,\n  ...rest\n}) {\n  const intl = useIntl();\n  const { input } = useField(name, { subscription });\n\n  const onRemove = useCallback(\n    (e) => {\n      e.stopPropagation();\n\n      if (disabled) {\n        return;\n      }\n\n      input.onChange(undefined);\n    },\n    [input, disabled],\n  );\n\n  if (!input.value || input.value === '') {\n    return null;\n  }\n\n  return React.createElement(component, {\n    name,\n    filter,\n    label: intl.formatMessage(messages.previewLabel),\n    onRemove,\n    disabled,\n    ...rest,\n  });\n}\n\nfunction MapFilter(\n  {\n    name,\n    filter,\n    disabled,\n    collapsed,\n    className,\n    component = MapField,\n    ...rest\n  },\n  ref,\n) {\n  return (\n    <Field\n      collapsed={collapsed}\n      ref={ref}\n      name={name}\n      subscription={subscription}\n      component={component}\n      filter={filter}\n      disabled={disabled}\n      className={className}\n      {...rest}\n    />\n  );\n\n  // return <LoadableMapField ref={ref} {...props} />;\n}\n\nconst Collapsable = React.forwardRef(function Collapsable(\n  { name, filter, disabled, ...rest },\n  ref,\n) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  return (\n    <Panel\n      header={(\n        <Title\n          name={name}\n          filter={filter}\n          component={Preview}\n          disabled={disabled}\n        />\n      )}\n      collapsed={collapsed}\n      setCollapsed={setCollapsed}\n    >\n      <MapFilter\n        ref={ref}\n        name={name}\n        filter={filter}\n        disabled={disabled}\n        collapsed={collapsed}\n        {...rest}\n      />\n    </Panel>\n  );\n});\n\nconst exported = React.memo(React.forwardRef(MapFilter));\n\n// React.memo lose statics\nexported.Preview = Preview;\nexported.Collapsable = Collapsable;\n\nexport default exported;\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,SAAS,aAAa,gBAAgB;AAC7C,SAAS,OAAO,gBAAgB;AAChC,SAAS,gBAAgB,eAAe;AAiEpC;AA3DJ,IAAM,eAAe,EAAE,OAAO,KAAK;AAEnC,IAAM,WAAW,eAAe;AAAA,EAC9B,cAAc;AAAA,IACZ,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB;AACF,CAAC;AAED,SAAS,QAAQ;AAAA,EACf;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA,GAAG;AACL,GAAG;AACD,QAAM,OAAO,QAAQ;AACrB,QAAM,EAAE,MAAM,IAAI,SAAS,MAAM,EAAE,aAAa,CAAC;AAEjD,QAAM,WAAW;AAAA,IACf,CAAC,MAAM;AACL,QAAE,gBAAgB;AAElB,UAAI,UAAU;AACZ;AAAA,MACF;AAEA,YAAM,SAAS,MAAS;AAAA,IAC1B;AAAA,IACA,CAAC,OAAO,QAAQ;AAAA,EAClB;AAEA,MAAI,CAAC,MAAM,SAAS,MAAM,UAAU,IAAI;AACtC,WAAO;AAAA,EACT;AAEA,SAAO,MAAM,cAAc,WAAW;AAAA,IACpC;AAAA,IACA;AAAA,IACA,OAAO,KAAK,cAAc,SAAS,YAAY;AAAA,IAC/C;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACH;AAEA,SAAS,UACP;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,GAAG;AACL,GACA,KACA;AACA,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACC,GAAG;AAAA;AAAA,EACN;AAIJ;AAEA,IAAM,cAAc,MAAM,WAAW,SAASA,aAC5C,EAAE,MAAM,QAAQ,UAAU,GAAG,KAAK,GAClC,KACA;AACA,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,IAAI;AAE/C,SACE;AAAA,IAAC;AAAA;AAAA,MACC,QACE;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA,WAAW;AAAA,UACX;AAAA;AAAA,MACF;AAAA,MAEF;AAAA,MACA;AAAA,MAEA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACC,GAAG;AAAA;AAAA,MACN;AAAA;AAAA,EACF;AAEJ,CAAC;AAED,IAAM,WAAW,MAAM,KAAK,MAAM,WAAW,SAAS,CAAC;AAGvD,SAAS,UAAU;AACnB,SAAS,cAAc;AAEvB,IAAO,oBAAQ;","names":["Collapsable"]}