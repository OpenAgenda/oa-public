{"version":3,"sources":["../src/components/filters/FavoritesFilter.js"],"sourcesContent":["import React, { useMemo, useCallback, useEffect, useRef } from 'react';\nimport { useForm, FormSpy } from 'react-final-form';\nimport useLatestModule from 'react-use/lib/useLatest.js';\nimport a11yButtonActionHandler from '@openagenda/react-shared/dist/utils/a11yButtonActionHandler.js';\nimport matchQuery from '../../utils/matchQuery.js';\nimport updateFormValues from '../../utils/updateFormValues.js';\nimport updateCustomFilter from '../../utils/updateCustomFilter.js';\nimport { useFavoriteState } from '../../hooks/index.js';\nimport FilterPreviewer from '../FilterPreviewer.js';\nimport useFavoritesOnChange from '../../hooks/useFavoritesOnChange.js';\n\nconst useLatest = useLatestModule.default || useLatestModule;\n\nconst subscription = { values: true };\n\nfunction Preview({\n  name = 'favorites',\n  filter,\n  component = FilterPreviewer,\n  disabled,\n  activeFilterLabel,\n  agendaUid,\n  ...rest\n}) {\n  const form = useForm();\n  const [value] = useFavoriteState(filter.agendaUid || agendaUid);\n\n  const onRemove = useCallback(\n    (e) => {\n      e.stopPropagation();\n\n      if (disabled) {\n        return;\n      }\n\n      updateFormValues(\n        form,\n        {\n          uid: undefined,\n          favorites: undefined,\n        },\n        false,\n      );\n\n      const handlerElem = filter.handlerElem || filter.elem;\n      const innerCheckboxes = handlerElem.querySelectorAll(\n        'input[type=\"checkbox\"]',\n      );\n\n      if (innerCheckboxes.length === 1 && !filter.handlerElem) {\n        innerCheckboxes[0].checked = false;\n      }\n    },\n    [disabled, form, filter],\n  );\n\n  return (\n    <FormSpy subscription={subscription}>\n      {({ values }) => {\n        const query = {\n          uid: value,\n          favorites: '1',\n        };\n\n        if (!matchQuery(values, query) || !activeFilterLabel) {\n          return null;\n        }\n\n        return React.createElement(component, {\n          name,\n          label: activeFilterLabel,\n          onRemove,\n          disabled,\n          filter,\n          ...rest,\n        });\n      }}\n    </FormSpy>\n  );\n}\n\n// Favorite + uid\nconst FavoritesFilter = React.forwardRef(function FavoritesFilter(\n  { agendaUid, filter },\n  _ref,\n) {\n  const form = useForm();\n  const firstRender = useRef(true);\n  const [value] = useFavoriteState(filter.agendaUid || agendaUid);\n\n  const latestValue = useLatest(value);\n\n  const updateForm = useFavoritesOnChange(value, {\n    isExclusive: filter.exclusive,\n  });\n\n  const onChange = useMemo(\n    () => a11yButtonActionHandler(updateForm),\n    [updateForm],\n  );\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n\n      const query = form.getState().values;\n      const registeredFields = form.getRegisteredFields();\n\n      if (!registeredFields.includes('uid')) {\n        form.registerField(\n          'uid',\n          () => {},\n          { value: true },\n          {\n            initialValue: query.uid,\n          },\n        );\n      }\n\n      if (!registeredFields.includes('favorites')) {\n        form.registerField(\n          'favorites',\n          () => {},\n          { value: true },\n          {\n            initialValue: query.favorites,\n          },\n        );\n      }\n    }\n\n    const handlerElem = filter.handlerElem || filter.elem;\n    const innerCheckboxes = handlerElem.querySelectorAll(\n      'input[type=\"checkbox\"]',\n    );\n\n    const handlerIsLabelWithCheckbox = innerCheckboxes.length === 1\n      && handlerElem.tagName === 'LABEL'\n      && handlerElem.contains(innerCheckboxes[0]);\n\n    if (\n      innerCheckboxes.length === 1\n      && (!filter.handlerElem || handlerIsLabelWithCheckbox)\n    ) {\n      innerCheckboxes[0].addEventListener('change', updateForm, false);\n    } else {\n      handlerElem.addEventListener('click', onChange, false);\n    }\n\n    handlerElem.addEventListener('keydown', onChange, false);\n\n    const unsubscribe = form.subscribe(\n      ({ values }) =>\n        updateCustomFilter(\n          filter,\n          matchQuery(values, {\n            uid: latestValue.current || ['-1'],\n            favorites: '1',\n          }),\n        ),\n      { values: true },\n    );\n\n    return () => {\n      if (\n        innerCheckboxes.length === 1\n        && (!filter.handlerElem || handlerIsLabelWithCheckbox)\n      ) {\n        innerCheckboxes[0].removeEventListener('change', updateForm, false);\n      } else {\n        handlerElem.removeEventListener('click', onChange, false);\n      }\n\n      handlerElem.removeEventListener('keydown', onChange, false);\n\n      unsubscribe();\n    };\n  }, [filter, form, latestValue, onChange, updateForm]);\n\n  return null;\n});\n\nconst exported = React.memo(FavoritesFilter);\n\n// React.memo lose statics\nexported.Preview = Preview;\n\nexport default exported;\n"],"mappings":"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","names":["FavoritesFilter"]}