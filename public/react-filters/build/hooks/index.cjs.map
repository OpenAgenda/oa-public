{"version":3,"sources":["../../src/hooks/index.js","../../src/hooks/useActiveFilters.js","../../src/utils/staticRangesFirst.js","../../src/utils/customFirst.js","../../src/components/filters/DateRangeFilter.js","../../src/components/fields/DateRangePicker.js","../../src/contexts/FiltersAndWidgetsContext.js","../../src/utils/convertPhpDateFormatToDateFns.js","../../src/hooks/useLoadTimingsData.js","../../src/utils/getQuerySeparator.js","../../src/components/Title.js","../../src/hooks/useFilterTitle.js","../../src/utils/dateRanges.js","../../src/utils/withDefaultFilterConfig.js","../../src/messages/relative.js","../../src/messages/attendanceMode.js","../../src/messages/provenance.js","../../src/messages/featured.js","../../src/messages/state.js","../../src/messages/status.js","../../src/messages/boolean.js","../../src/messages/accessibilities.js","../../src/utils/getAdditionalFilters.js","../../src/utils/getFilters.js","../../src/utils/getFilterTitle.js","../../src/messages/filterTitles.js","../../src/components/Panel.js","../../src/components/ValueBadge.js","../../src/components/FilterPreviewer.js","../../src/utils/matchQuery.js","../../src/utils/matchFilter.js","../../src/hooks/useChoiceState.js","../../src/hooks/useFavoritesOnChange.js","../../src/utils/updateFormValues.js","../../src/hooks/useFavoriteState.js","../../src/hooks/useFilters.js","../../src/hooks/useGetFilterOptions.js","../../src/hooks/useGetTotal.js","../../src/hooks/useLoadGeoData.js"],"sourcesContent":["export { default as useActiveFilters } from './useActiveFilters.js';\nexport { default as useChoiceState } from './useChoiceState.js';\nexport { default as useFavoritesOnChange } from './useFavoritesOnChange.js';\nexport { default as useFavoriteState } from './useFavoriteState.js';\nexport { default as useFilters } from './useFilters.js';\nexport { default as useFilterTitle } from './useFilterTitle.js';\nexport { default as useGetFilterOptions } from './useGetFilterOptions.js';\nexport { default as useGetTotal } from './useGetTotal.js';\nexport { default as useLoadGeoData } from './useLoadGeoData.js';\nexport { default as useLoadTimingsData } from './useLoadTimingsData.js';\n\nexport { useField, useForm } from 'react-final-form';\n","import { useFormState } from 'react-final-form';\nimport { useMemo } from 'react';\nimport staticRangesFirst from '../utils/staticRangesFirst.js';\nimport customFirst from '../utils/customFirst.js';\nimport matchFilter from '../utils/matchFilter.js';\n\nexport default function useActiveFilters(filters) {\n  const { values } = useFormState({ subscription: { values: true } });\n\n  const sortedFilters = useMemo(\n    () =>\n      filters\n        .map(({ destSelector, ...filter }) => filter)\n        .sort(staticRangesFirst)\n        .sort(customFirst),\n    [filters],\n  );\n\n  return useMemo(\n    () =>\n      Object.entries(values).reduce((accu, entry) => {\n        const matchingFilter = sortedFilters.find((filter) =>\n          matchFilter(filter, values, entry));\n\n        if (matchingFilter && !accu.includes(matchingFilter)) {\n          accu.push(matchingFilter);\n        }\n\n        return accu;\n      }, []),\n    [sortedFilters, values],\n  );\n}\n","export default function staticRangesFirst(a, b) {\n  if (a.staticRanges && !b.staticRanges) {\n    return -1;\n  }\n  if (!a.staticRanges && b.staticRanges) {\n    return 1;\n  }\n\n  return 0;\n}\n","export default function customFirst(a, b) {\n  if (a.type === 'custom' && b.type !== 'custom') {\n    return -1;\n  }\n  if (a.type !== 'custom' && b.type === 'custom') {\n    return 1;\n  }\n\n  return 0;\n}\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Field, useField } from 'react-final-form';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { parseISO, endOfDay, isSameDay } from 'date-fns';\nimport { utcToZonedTime, getTimezoneOffset } from 'date-fns-tz';\nimport DateRangePicker from '../fields/DateRangePicker.js';\nimport Title from '../Title.js';\nimport Panel from '../Panel.js';\nimport FilterPreviewer from '../FilterPreviewer.js';\n\nconst messages = defineMessages({\n  dateRange: {\n    id: 'ReactFilters.DateRangeFilter.dateRange',\n    defaultMessage: 'From {startDate} to {endDate}',\n  },\n  startDate: {\n    id: 'ReactFilters.DateRangeFilter.startDate',\n    defaultMessage: 'Start',\n  },\n  endDate: {\n    id: 'ReactFilters.DateRangeFilter.endDate',\n    defaultMessage: 'End',\n  },\n  until: {\n    id: 'ReactFilters.DateRangeFilter.until',\n    defaultMessage: 'Until {date}',\n  },\n  from: {\n    id: 'ReactFilters.DateRangeFilter.from',\n    defaultMessage: 'From {date}',\n  },\n});\n\nconst subscription = { value: true };\n\nfunction formatDateValue(value) {\n  if (!value || value === '') {\n    return null;\n  }\n\n  return typeof value === 'string' ? parseISO(value) : value;\n}\n\n// For display (store -> form)\nexport function formatValue(value) {\n  if (value === undefined) {\n    return [\n      {\n        startDate: null,\n        endDate: null,\n        key: 'selection',\n      },\n    ];\n  }\n\n  const currentTz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const tzDiff = getTimezoneOffset(value.tz, value.gte)\n    - getTimezoneOffset(currentTz, value.gte);\n\n  if (Array.isArray(value)) {\n    return value.map((v) => {\n      const startDate = formatDateValue(v.gte);\n      const endDate = formatDateValue(v.lte);\n\n      return {\n        ...v,\n        startDate:\n          tzDiff && startDate ? utcToZonedTime(startDate, v.tz) : startDate,\n        endDate: tzDiff && endDate ? utcToZonedTime(endDate, v.tz) : endDate,\n      };\n    });\n  }\n\n  if (typeof value === 'object') {\n    const startDate = formatDateValue(value.gte);\n    const endDate = formatDateValue(value.lte);\n\n    return [\n      {\n        startDate:\n          tzDiff && startDate ? utcToZonedTime(startDate, value.tz) : startDate,\n        endDate:\n          tzDiff && endDate ? utcToZonedTime(endDate, value.tz) : endDate,\n        key: 'selection',\n      },\n    ];\n  }\n\n  return value;\n}\n\n// For save (form -> store)\nfunction parseValue(value) {\n  if (!value) {\n    return value;\n  }\n\n  const [selection] = value;\n\n  if (selection.startDate === null && selection.endDate === null) {\n    return undefined;\n  }\n\n  const gte = selection.startDate?.toISOString() ?? null;\n  const lte = (\n    selection.endDate ? endOfDay(selection.endDate) : selection.endDate\n  ).toISOString();\n\n  const result = {};\n  if (gte) result.gte = gte;\n  if (lte) result.lte = lte;\n\n  result.tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  return result;\n}\n\nexport function Preview({\n  name,\n  staticRanges = [],\n  component = FilterPreviewer,\n  disabled,\n  ...rest\n}) {\n  const intl = useIntl();\n  const { input } = useField(name, { subscription });\n  const { tz } = input.value;\n  const value = formatValue(input.value)[0];\n\n  const selectedStaticRange = useMemo(\n    () => value && staticRanges.find((v) => v.isSelected(value, tz)),\n    [value, staticRanges, tz],\n  );\n\n  const singleDay = useMemo(\n    () =>\n      value?.startDate\n      && value?.endDate\n      && isSameDay(value.startDate, value.endDate),\n    [value],\n  );\n\n  const onRemove = useCallback(\n    (e) => {\n      e.stopPropagation();\n\n      if (disabled) {\n        return;\n      }\n\n      input.onChange(undefined);\n    },\n    [input, disabled],\n  );\n\n  let label;\n\n  if (!value?.startDate && !value?.endDate) {\n    return null;\n  }\n\n  const formatDate = (v) => intl.formatDate(v /* , { timeZone: tz } */);\n\n  if (selectedStaticRange) {\n    label = selectedStaticRange.label;\n  } else if (value.startDate === null) {\n    label = intl.formatMessage(messages.until, {\n      date: formatDate(value.endDate),\n    });\n  } else if (value.endDate === null) {\n    label = intl.formatMessage(messages.from, {\n      date: formatDate(value.startDate),\n    });\n  } else {\n    label = singleDay\n      ? formatDate(value.startDate)\n      : intl.formatMessage(messages.dateRange, {\n        startDate: formatDate(value.startDate),\n        endDate: formatDate(value.endDate),\n      });\n  }\n\n  return React.createElement(component, {\n    name,\n    staticRanges,\n    label,\n    onRemove,\n    disabled,\n    ...rest,\n  });\n}\n\nconst DateRangeFilter = React.forwardRef(function DateRangeFilter(\n  {\n    name,\n    staticRanges,\n    inputRanges,\n    rangeColor,\n    className,\n    dateFormatStyle,\n    dateFormat,\n    minDate,\n    maxDate,\n    shownDate,\n    getQuery,\n  },\n  ref,\n) {\n  const intl = useIntl();\n\n  return (\n    <Field\n      ref={ref}\n      name={name}\n      subscription={subscription}\n      parse={parseValue}\n      format={formatValue}\n      component={DateRangePicker}\n      staticRanges={staticRanges}\n      inputRanges={inputRanges}\n      startDatePlaceholder={intl.formatMessage(messages.startDate)}\n      endDatePlaceholder={intl.formatMessage(messages.endDate)}\n      rangeColor={rangeColor}\n      className={className}\n      dateFormatStyle={dateFormatStyle}\n      dateFormat={dateFormat}\n      minDate={minDate}\n      maxDate={maxDate}\n      shownDate={shownDate}\n      getQuery={getQuery}\n    />\n  );\n});\n\nconst Collapsable = React.forwardRef(function Collapsable(\n  { name, filter, component, disabled, staticRanges, inputRanges, ...rest },\n  ref,\n) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  return (\n    <Panel\n      header={(\n        <Title\n          name={name}\n          filter={filter}\n          component={Preview}\n          staticRanges={staticRanges}\n          disabled={disabled}\n        />\n      )}\n      collapsed={collapsed}\n      setCollapsed={setCollapsed}\n    >\n      <DateRangeFilter\n        ref={ref}\n        name={name}\n        filter={filter}\n        component={component}\n        staticRanges={staticRanges}\n        inputRanges={inputRanges}\n        disabled={disabled}\n        collapsed={collapsed}\n        {...rest}\n      />\n    </Panel>\n  );\n});\n\nconst exported = React.memo(DateRangeFilter);\n\n// React.memo lose statics\nexported.Preview = Preview;\nexported.Collapsable = Collapsable;\n\nexport default exported;\n","import isEqual from 'lodash/isEqual.js';\nimport isDate from 'lodash/isDate.js';\nimport React, {\n  useCallback,\n  useMemo,\n  useState,\n  useContext,\n  useEffect,\n  useRef,\n  useImperativeHandle,\n} from 'react';\nimport { useIntl } from 'react-intl';\nimport useIsomorphicLayoutEffectModule from 'react-use/lib/useIsomorphicLayoutEffect.js';\nimport useLatestModule from 'react-use/lib/useLatest.js';\nimport usePreviousModule from 'react-use/lib/usePrevious.js';\nimport cn from 'classnames';\nimport { startOfMonth, endOfMonth, isSameDay, format } from 'date-fns';\nimport dateFnsLocaleEN from 'date-fns/locale/en-US/index.js';\nimport { DateRange, DefinedRange } from '@openagenda/react-date-range';\nimport { getFallbackChain } from '@openagenda/intl';\nimport FiltersAndWidgetsContext from '../../contexts/FiltersAndWidgetsContext.js';\nimport convertPhpDateFormatToDateFns from '../../utils/convertPhpDateFormatToDateFns.js';\nimport useLoadTimingsData from '../../hooks/useLoadTimingsData.js';\n\nconst useIsomorphicLayoutEffect = useIsomorphicLayoutEffectModule.default || useIsomorphicLayoutEffectModule;\nconst useLatest = useLatestModule.default || useLatestModule;\nconst usePrevious = usePreviousModule.default || usePreviousModule;\n\nconst dateDisplayFormats = {\n  en: 'MMM d, yyyy', // Jan 1, 2024\n  fr: 'd MMM yyyy', // 1 janv. 2024\n  de: 'd. MMM yyyy', // 1. Jan. 2024\n  it: 'd MMM yyyy', // 1 gen 2024\n  es: 'd MMM yyyy', // 1 ene 2024\n};\n\nconst defaultGetInitialValue = () => [\n  {\n    startDate: null,\n    endDate: -1,\n    key: 'selection',\n  },\n];\n\nfunction normalizeValue(value) {\n  if (!value?.length) {\n    return value;\n  }\n\n  return value.map((v) => ({\n    startDate: isDate(v.startDate) ? v.startDate.getTime() : v.startDate,\n    endDate: isDate(v.endDate) ? v.endDate.getTime() : v.endDate,\n    key: v.key,\n  }));\n}\n\nfunction getDateDisplayFormat(dateFormatStyle, dateFormat, locale) {\n  if (dateFormat) {\n    return dateFormatStyle === 'php'\n      ? convertPhpDateFormatToDateFns(dateFormat)\n      : dateFormat;\n  }\n\n  const fallbackChain = getFallbackChain(locale);\n\n  for (const fallback of fallbackChain) {\n    if (dateDisplayFormats[fallback]) {\n      return dateDisplayFormats[fallback];\n    }\n  }\n\n  return dateDisplayFormats[Object.keys(dateDisplayFormats).shift()];\n}\n\nfunction focusedDateToTimingsQuery(focusedDate) {\n  return {\n    gte: startOfMonth(focusedDate),\n    lte: endOfMonth(focusedDate),\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  };\n}\n\nfunction DateRangePicker(\n  {\n    input,\n    meta,\n    staticRanges = [],\n    inputRanges = [],\n    rangeColor = '#41acdd',\n    disabled,\n    className,\n    dateFormatStyle,\n    dateFormat,\n    minDate,\n    maxDate,\n    shownDate,\n    getQuery,\n    ...otherProps\n  },\n  ref,\n) {\n  const intl = useIntl();\n\n  const dateRangeRef = useRef(null);\n\n  const [data, setData] = useState(() => []);\n\n  const {\n    filtersOptions: { dateFnsLocale, searchMethod, res },\n  } = useContext(FiltersAndWidgetsContext);\n\n  const [ranges, setRanges] = useState(\n    () => input.value ?? defaultGetInitialValue(),\n  );\n  const [dragStatus, setDragStatus] = useState(false);\n  const [focusedRange, setFocusedRange] = useState([0, 0]);\n\n  const latestRanges = useLatest(ranges);\n  const latestFocusedRange = useLatest(focusedRange);\n  const previousValue = usePrevious(input.value);\n\n  const { onChange } = input;\n\n  // Update state for re-calculate rdrNoSelection\n  const onSelectPreviewChange = useCallback(\n    (value) => {\n      const dateRange = dateRangeRef.current;\n\n      setDragStatus(dateRangeRef.current?.calendar.state.drag.status);\n      dateRange.updatePreview(value ? dateRange.calcNewSelection(value) : null);\n    },\n    [dateRangeRef],\n  );\n\n  const onDefinedPreviewChange = useCallback(\n    (value) => {\n      const dateRange = dateRangeRef.current;\n\n      return dateRange.updatePreview(\n        value\n          ? dateRange.calcNewSelection(value, typeof value === 'string')\n          : null,\n      );\n    },\n    [dateRangeRef],\n  );\n\n  const onTemporaryChange = useCallback(\n    (item) => {\n      const value = [item?.selection ? item.selection : item.range1];\n\n      setRanges(value);\n\n      if (\n        latestFocusedRange.current[0] === 0\n        && latestFocusedRange.current[1] === 0\n        && value[0].startDate.getTime() !== value[0].endDate.getTime()\n      ) {\n        onChange(value);\n      }\n\n      if (\n        latestFocusedRange.current[0] === 0\n        && latestFocusedRange.current[1] === 1\n      ) {\n        onChange(value);\n      }\n    },\n    [latestFocusedRange, onChange],\n  );\n\n  const onDefinedRangeChange = useCallback(\n    (item) => {\n      const value = [item?.selection ? item.selection : item.range1];\n\n      setRanges(value);\n      onChange(value);\n    },\n    [onChange],\n  );\n\n  const disabledDay = useCallback(() => disabled, [disabled]);\n\n  const rdrNoSelection = useMemo(() => {\n    const range = ranges?.[0];\n    const hasRange = range && range.endDate !== null;\n\n    return !hasRange && !dragStatus;\n  }, [ranges, dragStatus]);\n\n  const [focusedDate, setFocusedDate] = useState(null);\n\n  const loadTimingsData = useLoadTimingsData(res, getQuery, { searchMethod });\n\n  // If value change then update internal ranges\n  useIsomorphicLayoutEffect(() => {\n    if (\n      previousValue\n      && !isEqual(normalizeValue(input.value), normalizeValue(previousValue))\n      && !isEqual(\n        normalizeValue(input.value),\n        normalizeValue(latestRanges.current),\n      )\n    ) {\n      setRanges(input.value);\n    }\n  }, [input.value, previousValue, latestRanges, dateRangeRef, shownDate]);\n\n  const onShownDateChange = async (newFocusedDate) => {\n    if (input.name !== 'timings') {\n      return;\n    }\n\n    setFocusedDate(newFocusedDate);\n  };\n\n  // set focusedDate from calendar state\n  useIsomorphicLayoutEffect(() => {\n    if (input.name !== 'timings' || !dateRangeRef.current) {\n      return;\n    }\n\n    const newFocused = dateRangeRef.current.calendar?.state?.focusedDate;\n\n    if (focusedDate !== newFocused) {\n      setFocusedDate(newFocused);\n    }\n  }, [dateRangeRef, focusedDate, input.name]);\n\n  useEffect(() => {\n    if (!focusedDate) {\n      return;\n    }\n\n    loadTimingsData(\n      {\n        timings: focusedDateToTimingsQuery(focusedDate),\n      },\n      {\n        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n    )\n      .then((newData) => setData(newData ?? []))\n      .catch((err) => {\n        console.log('Failed to load timings data', err);\n      });\n  }, [focusedDate]);\n\n  useImperativeHandle(ref, () => ({\n    onQueryChange: () => {\n      if (focusedDate !== dateRangeRef.current.calendar?.state?.focusedDate) {\n        // will trigger the effect with loadTimingsData\n        setFocusedDate(dateRangeRef.current.calendar?.state?.focusedDate);\n      } else {\n        // same date but query can be changed\n        loadTimingsData(\n          {\n            timings: focusedDateToTimingsQuery(\n              dateRangeRef.current.calendar?.state?.focusedDate,\n            ),\n          },\n          {\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n          },\n        )\n          .then((newData) => setData(newData ?? []))\n          .catch((err) => {\n            console.log('Failed to load timings data', err);\n          });\n      }\n    },\n  }));\n\n  const dayContentRenderer = useCallback(\n    (day) => {\n      const isActive = data.find(\n        (d) => isSameDay(new Date(d.key), day) && d.timingCount > 0,\n      );\n      return (\n        <span\n          className={isActive ? 'rdrDayWithTimings' : 'rdrDayWithoutTimings'}\n        >\n          {format(day, 'd')}\n        </span>\n      );\n    },\n    [data],\n  );\n\n  const dateRangePickerProps = {\n    showSelectionPreview: true,\n    showMonthName: false,\n    moveRangeOnFirstSelection: false,\n    months: 1,\n    ranges,\n    direction: 'horizontal',\n    locale: dateFnsLocale || dateFnsLocaleEN,\n    staticRanges,\n    inputRanges,\n    focusedRange,\n    onRangeFocusChange: setFocusedRange,\n    rangeColors: [rangeColor],\n    minDate: minDate ? new Date(minDate) : undefined,\n    maxDate: maxDate ? new Date(maxDate) : undefined,\n    shownDate: shownDate ? new Date(shownDate) : undefined,\n    onShownDateChange,\n    dayContentRenderer,\n    ...otherProps,\n  };\n\n  return (\n    <div\n      className={cn('rdrDateRangePickerWrapper', className, { rdrNoSelection })}\n    >\n      <DateRange\n        onPreviewChange={onSelectPreviewChange}\n        onRangeFocusChange={setFocusedRange}\n        {...dateRangePickerProps}\n        onChange={onTemporaryChange}\n        ref={dateRangeRef}\n        className={undefined}\n        disabledDay={disabledDay}\n        dateDisplayFormat={getDateDisplayFormat(\n          dateFormatStyle,\n          dateFormat,\n          intl.locale,\n        )}\n      />\n      {staticRanges.length ? (\n        <DefinedRange\n          onPreviewChange={onDefinedPreviewChange}\n          {...dateRangePickerProps}\n          range={ranges[focusedRange[0]]}\n          onChange={onDefinedRangeChange}\n          className={undefined}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default React.forwardRef(DateRangePicker);\n","import { createContext } from 'react';\n\nconst FiltersAndWidgetsContext = createContext({\n  filters: [],\n  widgets: [],\n  setFilters: () => {},\n  setWidgets: () => {},\n  filtersOptions: {},\n});\n\nexport default FiltersAndWidgetsContext;\n","export default function convertPhpDateFormatToDateFns(phpFormat) {\n  const formatMapping = {\n    // Days\n    d: 'dd', // Day of the month, 2 digits with leading zeros (01 to 31)\n    D: 'EEE', // A textual representation of a day (Mon through Sun)\n    j: 'd', // Day of the month without leading zeros (1 to 31)\n    l: 'EEEE', // A full textual representation of the day of the week (Sunday through Saturday)\n    N: 'i', // ISO-8601 numeric representation of the day of the week (1 for Monday through 7 for Sunday)\n    S: 'o', // English ordinal suffix for the day of the month, 2 characters (st, nd, rd or th)\n    w: 'e', // Numeric representation of the day of the week (0 for Sunday through 6 for Saturday)\n    z: 'D', // The day of the year (starting from 0) (0 through 365)\n\n    // Weeks\n    W: 'I', // ISO-8601 week number of year, weeks starting on Monday\n\n    // Months\n    F: 'MMMM', // A full textual representation of a month (January through December)\n    m: 'MM', // Numeric representation of a month, with leading zeros (01 to 12)\n    M: 'MMM', // A short textual representation of a month (Jan through Dec)\n    n: 'M', // Numeric representation of a month, without leading zeros (1 to 12)\n    t: '', // Number of days in the given month (28 through 31) (no direct equivalent in date-fns)\n\n    // Years\n    L: '', // Whether it's a leap year (1 if it is a leap year, 0 otherwise) (no direct equivalent in date-fns)\n    o: 'RRRR', // ISO-8601 week-numbering year (4 digits)\n    Y: 'yyyy', // A full numeric representation of a year, 4 digits\n    y: 'yy', // A two digit representation of a year\n\n    // Time\n    a: 'aaa', // Lowercase Ante meridiem and Post meridiem (am or pm)\n    A: 'a', // Uppercase Ante meridiem and Post meridiem (AM or PM)\n    B: '', // Swatch Internet time (000 through 999) (no direct equivalent in date-fns)\n    g: 'h', // 12-hour format of an hour without leading zeros (1 through 12)\n    G: 'H', // 24-hour format of an hour without leading zeros (0 through 23)\n    h: 'hh', // 12-hour format of an hour with leading zeros (01 through 12)\n    H: 'HH', // 24-hour format of an hour with leading zeros (00 through 23)\n    i: 'mm', // Minutes with leading zeros (00 to 59)\n    s: 'ss', // Seconds with leading zeros (00 through 59)\n    u: 'SSS', // Microseconds (added as milliseconds in date-fns)\n\n    // Timezone\n    e: 'zzz', // Timezone identifier (e.g., America/Los_Angeles) (not directly supported, use zzz for generic support)\n    T: 'zz', // Timezone abbreviation (e.g., MST)\n    Z: 'X', // Timezone offset in seconds (e.g., -43200 to 43200)\n  };\n\n  let dateFnsFormat = '';\n  let inLiteral = false;\n\n  for (let i = 0; i < phpFormat.length; i++) {\n    const char = phpFormat[i];\n\n    if (char === '\\\\') {\n      if (!inLiteral) {\n        dateFnsFormat += \"'\";\n        inLiteral = true;\n      }\n      i += 1; // Skip the backslash\n      dateFnsFormat += phpFormat[i] || '';\n      continue;\n    }\n\n    if (inLiteral) {\n      dateFnsFormat += \"'\";\n      inLiteral = false;\n    }\n\n    if (formatMapping[char] !== undefined) {\n      dateFnsFormat += formatMapping[char];\n    } else {\n      dateFnsFormat += char;\n    }\n  }\n\n  if (inLiteral) {\n    dateFnsFormat += \"'\";\n  }\n\n  return dateFnsFormat;\n}\n","import { useCallback } from 'react';\nimport qs from 'qs';\nimport getQuerySeparator from '../utils/getQuerySeparator.js';\n\nexport default function useLoadTimingsData(res, queryOrFn, options = {}) {\n  const { searchMethod = 'get' } = options;\n\n  return useCallback(\n    async (additionalQuery = {}, { interval, timezone } = {}) => {\n      const query = typeof queryOrFn === 'function' ? queryOrFn() : queryOrFn;\n\n      const params = {\n        // oaq: { passed: 1 },\n        size: 0,\n        ...query,\n        ...additionalQuery,\n        aggregations: [\n          {\n            type: 'timings',\n            // size: 2000,\n            interval,\n            timezone,\n          },\n        ],\n      };\n\n      const result = await (\n        searchMethod === 'get'\n          ? fetch(\n            `${res}${getQuerySeparator(res)}${qs.stringify(params, {\n              skipNulls: true,\n            })}`,\n          )\n          : fetch(res, {\n            method: 'post',\n            body: JSON.stringify(params),\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n      ).then((r) => {\n        if (r.ok) return r.json();\n        throw new Error(\"Can't load timings data\");\n      });\n\n      return result.aggregations.timings;\n    },\n    [res, queryOrFn, searchMethod],\n  );\n}\n","export default function getQuerySeparator(url) {\n  try {\n    const urlObj = new URL(url, 'http://n');\n    return urlObj.search ? '&' : '?';\n  } catch (error) {\n    console.error('Invalid URL:', error);\n    return '?';\n  }\n}\n","import React from 'react';\nimport { useField } from 'react-final-form';\nimport useFilterTitle from '../hooks/useFilterTitle.js';\n\nconst subscription = { value: true };\n\nexport default function Title({ name, filter, component, ...rest }) {\n  const title = useFilterTitle(name, filter.fieldSchema);\n  const field = useField(name, { subscription });\n\n  const { input } = field;\n\n  if (\n    !input.value?.length\n    && !(typeof input.value === 'object' && input.value !== null)\n  ) {\n    return <div>{title}</div>;\n  }\n\n  if (!component) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex-auto\">\n      <span className=\"padding-right-xs\">{title}</span>\n      {React.createElement(component, {\n        name,\n        filter,\n        className: 'oa-filter-value-preview',\n        withTitle: false,\n        ...rest,\n      })}\n    </div>\n  );\n}\n","import { useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { getFilterTitle } from '../utils/index.js';\n\nexport default function useFilterTitle(messageKey, fieldSchema, messages) {\n  const intl = useIntl();\n\n  return useMemo(\n    () => getFilterTitle(intl, messages, messageKey, fieldSchema),\n    [intl, messages, messageKey, fieldSchema],\n  );\n}\n","import {\n  addDays,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay,\n  isSameDay,\n  getISODay,\n} from 'date-fns';\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  today: {\n    id: 'ReactFilters.dateRanges.today',\n    defaultMessage: 'Today',\n  },\n  tomorrow: {\n    id: 'ReactFilters.dateRanges.tomorrow',\n    defaultMessage: 'Tomorrow',\n  },\n  thisWeekend: {\n    id: 'ReactFilters.dateRanges.thisWeekend',\n    defaultMessage: 'This week-end',\n  },\n  currentWeek: {\n    id: 'ReactFilters.dateRanges.currentWeek',\n    defaultMessage: 'Current week',\n  },\n  currentMonth: {\n    id: 'ReactFilters.dateRanges.currentMonth',\n    defaultMessage: 'Current month',\n  },\n});\n\nfunction getClosestDayAfter(dayOfWeek, fromDate = new Date()) {\n  const dayOfWeekMap = {\n    Mon: 1,\n    Tue: 2,\n    Wed: 3,\n    Thur: 4,\n    Fri: 5,\n    Sat: 6,\n    Sun: 7,\n  };\n  const offsetDays = dayOfWeekMap[dayOfWeek] - getISODay(fromDate);\n  return addDays(fromDate, offsetDays);\n}\n\nfunction isSelected(range, _timeZone) {\n  const definedRange = this.range();\n\n  return (\n    range\n    && (isSameDay(range.startDate, definedRange.startDate)\n      || range.startDate === definedRange.startDate)\n    && (isSameDay(range.endDate, definedRange.endDate)\n      || range.endDate === definedRange.endDate)\n  );\n}\n\nexport function createStaticRanges(ranges) {\n  return ranges.map((range) => ({ isSelected, ...range }));\n}\n\nexport default function dateRanges(intl, opts = {}) {\n  const { dateFnsLocale } = opts;\n\n  const nextSaturday = getClosestDayAfter('Sat');\n\n  const startOfWeekend = startOfDay(nextSaturday);\n  const endOfWeekend = endOfDay(addDays(nextSaturday, 1));\n  const now = new Date();\n\n  const defineds = {\n    startOfToday: startOfDay(now, { locale: dateFnsLocale }),\n    endOfToday: endOfDay(now, { locale: dateFnsLocale }),\n    startOfTomorrow: startOfDay(addDays(now, 1), { locale: dateFnsLocale }),\n    endOfTomorrow: endOfDay(addDays(now, 1), { locale: dateFnsLocale }),\n    startOfWeek: startOfWeek(now, { locale: dateFnsLocale }),\n    endOfWeek: endOfWeek(now, { locale: dateFnsLocale }),\n    startOfMonth: startOfMonth(now, { locale: dateFnsLocale }),\n    endOfMonth: endOfMonth(now, { locale: dateFnsLocale }),\n    startOfWeekend,\n    endOfWeekend,\n  };\n\n  const defaults = {\n    staticRanges: createStaticRanges([\n      {\n        id: 'today',\n        label: intl.formatMessage(messages.today),\n        range: () => ({\n          startDate: defineds.startOfToday,\n          endDate: defineds.endOfToday,\n        }),\n      },\n      {\n        id: 'tomorrow',\n        label: intl.formatMessage(messages.tomorrow),\n        range: () => ({\n          startDate: defineds.startOfTomorrow,\n          endDate: defineds.endOfTomorrow,\n        }),\n      },\n      {\n        id: 'thisWeekend',\n        label: intl.formatMessage(messages.thisWeekend),\n        range: () => ({\n          startDate: defineds.startOfWeekend,\n          endDate: defineds.endOfWeekend,\n        }),\n      },\n      {\n        id: 'currentWeek',\n        label: intl.formatMessage(messages.currentWeek),\n        range: () => ({\n          startDate: defineds.startOfWeek,\n          endDate: defineds.endOfWeek,\n        }),\n      },\n      {\n        id: 'currentMonth',\n        label: intl.formatMessage(messages.currentMonth),\n        range: () => ({\n          startDate: defineds.startOfMonth,\n          endDate: defineds.endOfMonth,\n        }),\n      },\n    ]),\n    inputRanges: [],\n  };\n\n  return {\n    staticRanges: opts.staticRanges\n      ? opts.staticRanges.reduce((accu, next) => {\n        if (typeof next === 'string') {\n          const result = defaults.staticRanges.find((w) => w.id === next);\n          if (result) accu.push(result);\n          else console.log(`Cannot found static range \"${next}\"`);\n        } else {\n          accu.push(next);\n        }\n        return accu;\n      }, [])\n      : defaults.staticRanges,\n    inputRanges: opts.inputRanges || defaults.inputRanges,\n  };\n}\n","import defaults from 'lodash/defaults.js';\nimport { getLocaleValue } from '@openagenda/intl';\nimport relativeOptions from '../messages/relative.js';\nimport attendanceModeOptions from '../messages/attendanceMode.js';\nimport provenanceMessages from '../messages/provenance.js';\nimport featuredMessages from '../messages/featured.js';\nimport stateMessages from '../messages/state.js';\nimport statusMessages from '../messages/status.js';\nimport booleanMessages from '../messages/boolean.js';\nimport accessibilitiesMessages from '../messages/accessibilities.js';\nimport dateRanges from './dateRanges.js';\n\nfunction assignDateRanges(filter, intl, dataFnsLocale) {\n  if (filter.type === 'definedRange') {\n    Object.assign(\n      filter,\n      dateRanges(intl, {\n        dataFnsLocale,\n        staticRanges: filter.staticRanges,\n        inputRanges: filter.inputRanges,\n      }),\n    );\n  }\n}\n\nexport default function withDefaultFilterConfig(filter, intl, opts = {}) {\n  const { missingValue, dataFnsLocale } = opts;\n\n  switch (filter.name) {\n    case 'viewport':\n      defaults(filter, {\n        type: 'none',\n      });\n      break;\n    case 'geo':\n      defaults(filter, {\n        type: 'map',\n        aggregation: null,\n        // props for MapFilter\n        tileAttribution:\n          '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors',\n        tileUrl:\n          opts.mapTiles ?? 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      });\n      break;\n    case 'addMethod':\n      defaults(filter, {\n        type: 'choice',\n        options: [\n          {\n            label: intl.formatMessage(provenanceMessages.contribution),\n            value: 'contribution',\n          },\n          {\n            label: intl.formatMessage(provenanceMessages.aggregation),\n            value: 'aggregation',\n          },\n          {\n            label: intl.formatMessage(provenanceMessages.share),\n            value: 'share',\n          },\n        ],\n        aggregation: {\n          type: 'addMethods',\n        },\n      });\n      break;\n    case 'accessibility':\n      defaults(filter, {\n        type: 'choice',\n        options: [\n          {\n            label: intl.formatMessage(accessibilitiesMessages.hi),\n            value: 'hi',\n          },\n          {\n            label: intl.formatMessage(accessibilitiesMessages.vi),\n            value: 'vi',\n          },\n          {\n            label: intl.formatMessage(accessibilitiesMessages.pi),\n            value: 'pi',\n          },\n          {\n            label: intl.formatMessage(accessibilitiesMessages.mi),\n            value: 'mi',\n          },\n          {\n            label: intl.formatMessage(accessibilitiesMessages.ii),\n            value: 'ii',\n          },\n        ],\n        aggregation: {\n          type: 'accessibilities',\n        },\n      });\n      break;\n    case 'languages':\n      defaults(filter, {\n        type: 'choice',\n        options: null,\n      });\n      break;\n    case 'memberUid':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        labelKey: 'member.name',\n        aggregation: {\n          type: 'members',\n        },\n      });\n      break;\n    case 'timings':\n      defaults(filter, {\n        type: 'dateRange',\n        aggregation: null,\n      });\n      assignDateRanges(filter, intl, dataFnsLocale);\n      break;\n    case 'createdAt':\n      defaults(filter, {\n        type: 'dateRange',\n        aggregation: null,\n      });\n      assignDateRanges(filter, intl, dataFnsLocale);\n      break;\n    case 'updatedAt':\n      defaults(filter, {\n        type: 'dateRange',\n        aggregation: null,\n      });\n      assignDateRanges(filter, intl, dataFnsLocale);\n      break;\n    case 'state':\n      defaults(filter, {\n        type: 'choice',\n        options: [\n          {\n            label: intl.formatMessage(stateMessages.refused),\n            value: '-1',\n          },\n          {\n            label: intl.formatMessage(stateMessages.toModerate),\n            value: '0',\n          },\n          {\n            label: intl.formatMessage(stateMessages.controlled),\n            value: '1',\n          },\n          {\n            label: intl.formatMessage(stateMessages.published),\n            value: '2',\n          },\n        ],\n        aggregation: {\n          type: 'states',\n        },\n      });\n      break;\n    case 'search':\n      defaults(filter, {\n        type: 'search',\n        aggregation: null,\n      });\n      break;\n    case 'locationUid':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        labelKey: 'location.name',\n        aggregation: {\n          type: 'locations',\n        },\n      });\n      break;\n    case 'sourceAgendaUid':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        labelKey: 'agenda.title',\n        aggregation: {\n          type: 'sourceAgendas',\n        },\n      });\n      break;\n    case 'originAgendaUid':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        labelKey: 'agenda.title',\n        aggregation: {\n          type: 'originAgendas',\n        },\n      });\n      break;\n    case 'featured':\n      defaults(filter, {\n        type: 'choice',\n        options: [\n          {\n            label: intl.formatMessage(featuredMessages.featured),\n            value: 'true',\n          },\n        ],\n        aggregation: null,\n      });\n      break;\n    case 'relative':\n      defaults(filter, {\n        type: 'choice',\n        options: [\n          {\n            label: intl.formatMessage(relativeOptions.passed),\n            value: 'passed',\n          },\n          {\n            label: intl.formatMessage(relativeOptions.current),\n            value: 'current',\n          },\n          {\n            label: intl.formatMessage(relativeOptions.upcoming),\n            value: 'upcoming',\n          },\n        ],\n      });\n      break;\n    case 'attendanceMode':\n      defaults(filter, {\n        type: 'choice',\n        aggregation: {\n          type: 'attendanceModes',\n        },\n        options: [\n          {\n            label: intl.formatMessage(attendanceModeOptions.offline),\n            value: '1',\n          },\n          {\n            label: intl.formatMessage(attendanceModeOptions.online),\n            value: '2',\n          },\n          {\n            label: intl.formatMessage(attendanceModeOptions.mixed),\n            value: '3',\n          },\n        ],\n      });\n      break;\n    case 'region':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        missingValue,\n        aggregation: {\n          type: 'regions',\n        },\n      });\n      break;\n    case 'department':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        missingValue,\n        aggregation: {\n          type: 'departments',\n        },\n      });\n      break;\n    case 'city':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        missingValue,\n        aggregation: {\n          type: 'cities',\n        },\n      });\n      break;\n    case 'countryCode':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        missingValue,\n        aggregation: {\n          type: 'countryCodes',\n        },\n      });\n      break;\n    case 'adminLevel3':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        missingValue,\n        aggregation: {\n          type: 'adminLevels3',\n        },\n      });\n      break;\n    case 'district':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        missingValue,\n        aggregation: {\n          type: 'districts',\n        },\n      });\n      break;\n    case 'keyword':\n      defaults(filter, {\n        type: 'choice',\n        options: null, // from the aggregation\n        aggregation: {\n          type: 'keywords',\n        },\n      });\n      break;\n    case 'status':\n      defaults(filter, {\n        type: 'choice',\n        options: [\n          {\n            label: intl.formatMessage(statusMessages.programmed),\n            value: '1',\n          },\n          {\n            label: intl.formatMessage(statusMessages.rescheduled),\n            value: '2',\n          },\n          {\n            label: intl.formatMessage(statusMessages.movedOnline),\n            value: '3',\n          },\n          {\n            label: intl.formatMessage(statusMessages.postponed),\n            value: '4',\n          },\n          {\n            label: intl.formatMessage(statusMessages.full),\n            value: '5',\n          },\n          {\n            label: intl.formatMessage(statusMessages.cancelled),\n            value: '6',\n          },\n        ],\n        aggregation: {\n          type: 'status',\n        },\n      });\n      break;\n    case 'favorites':\n      defaults(filter, {\n        type: 'favorites',\n        aggregation: null,\n      });\n      break;\n    default:\n      break;\n  }\n\n  const { fieldSchema } = filter;\n\n  // additional boolean field\n  if (fieldSchema?.fieldType === 'boolean') {\n    defaults(filter, {\n      name: fieldSchema.field,\n      type: 'choice',\n      fieldSchema,\n      options: [\n        {\n          label: intl.formatMessage(booleanMessages.selected),\n          value: 'true',\n        },\n        {\n          label: intl.formatMessage(booleanMessages.notSelected),\n          value: 'false',\n        },\n      ],\n      missingValue,\n      aggregation: {\n        type: 'additionalFields',\n        field: fieldSchema.field,\n      },\n    });\n\n    // additional number field\n  } else if (['number', 'integer'].includes(fieldSchema?.fieldType)) {\n    defaults(filter, {\n      type: 'numberRange',\n      name: fieldSchema.field,\n      fieldSchema,\n      aggregation: null,\n    });\n\n    // additional optioned field\n  } else if (fieldSchema) {\n    defaults(filter, {\n      name: fieldSchema.field,\n      type: 'choice',\n      fieldSchema,\n      options: !filter.aggregationOnly\n        ? fieldSchema.options.map((option) => ({\n          ...option,\n          label: getLocaleValue(option.label, intl.locale),\n          value: String(option.id),\n        }))\n        : null,\n      missingValue,\n      aggregation: {\n        type: 'additionalFields',\n        field: fieldSchema.field,\n      },\n      labelKey: 'label',\n    });\n  }\n\n  return filter;\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  passed: {\n    id: 'ReactFilters.messages.relative.passed',\n    defaultMessage: 'Passed',\n  },\n  current: {\n    id: 'ReactFilters.messages.relative.current',\n    defaultMessage: 'Current',\n  },\n  upcoming: {\n    id: 'ReactFilters.messages.relative.upcoming',\n    defaultMessage: 'Upcoming',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  offline: {\n    id: 'ReactFilters.messages.attendanceMode.offline',\n    defaultMessage: 'In situ',\n  },\n  online: {\n    id: 'ReactFilters.messages.attendanceMode.online',\n    defaultMessage: 'Online',\n  },\n  mixed: {\n    id: 'ReactFilters.messages.attendanceMode.mixed',\n    defaultMessage: 'Mixed',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  contribution: {\n    id: 'ReactFilters.messages.provenance.contribution',\n    defaultMessage: 'Contribution',\n  },\n  aggregation: {\n    id: 'ReactFilters.messages.provenance.aggregation',\n    defaultMessage: 'Aggregation',\n  },\n  share: {\n    id: 'ReactFilters.messages.provenance.share',\n    defaultMessage: 'Share',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  featured: {\n    id: 'ReactFilters.messages.featured.featured',\n    defaultMessage: 'Featured',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  refused: {\n    id: 'ReactFilters.messages.state.refused',\n    defaultMessage: 'Refused',\n  },\n  toModerate: {\n    id: 'ReactFilters.messages.state.toModerate',\n    defaultMessage: 'To moderate',\n  },\n  controlled: {\n    id: 'ReactFilters.messages.state.controlled',\n    defaultMessage: 'Controlled',\n  },\n  published: {\n    id: 'ReactFilters.messages.state.published',\n    defaultMessage: 'Published',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  programmed: {\n    id: 'ReactFilters.messages.status.programmed', // 1\n    defaultMessage: 'Programmed',\n  },\n  rescheduled: {\n    id: 'ReactFilters.messages.status.rescheduled', // 2\n    defaultMessage: 'Rescheduled',\n  },\n  movedOnline: {\n    id: 'ReactFilters.messages.status.movedOnline', // 3\n    defaultMessage: 'Moved online',\n  },\n  postponed: {\n    id: 'ReactFilters.messages.status.postponed', // 4\n    defaultMessage: 'Postponed',\n  },\n  full: {\n    id: 'ReactFilters.messages.status.full', // 5\n    defaultMessage: 'Fully booked',\n  },\n  cancelled: {\n    id: 'ReactFilters.messages.status.cancelled', // 6\n    defaultMessage: 'Cancelled',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  selected: {\n    id: 'ReactFilters.messages.boolean.selected',\n    defaultMessage: 'Selected',\n  },\n  notSelected: {\n    id: 'ReactFilters.messages.boolean.notSelected',\n    defaultMessage: 'Not selected',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  hi: {\n    id: 'ReactFilters.messages.accessiblities.hi',\n    defaultMessage: 'Hearing impairment',\n  },\n  vi: {\n    id: 'ReactFilters.messages.accessiblities.vi',\n    defaultMessage: 'Visual impairment',\n  },\n  pi: {\n    id: 'ReactFilters.messages.accessiblities.pi',\n    defaultMessage: 'Psychic impairment',\n  },\n  mi: {\n    id: 'ReactFilters.messages.accessiblities.mi',\n    defaultMessage: 'Motor impairment',\n  },\n  ii: {\n    id: 'ReactFilters.messages.accessiblities.ii',\n    defaultMessage: 'Intellectual impairment',\n  },\n});\n","const isAdditionalField = (field) =>\n  field.schemaId\n  && [\n    'checkbox',\n    'radio',\n    'multiselect',\n    'boolean',\n    'select',\n    'number',\n    'integer',\n  ].includes(field.fieldType);\nconst getFieldPath = (field, path = '') =>\n  (path.length\n    ? `${path}:${field.slug ?? field.field}`\n    : field.slug ?? field.field);\n\nexport default function getAdditionalFilters(fields, path = '') {\n  return fields.reduce((additionalFilters, field) => {\n    const fieldPath = getFieldPath(field, path);\n\n    if (field.schema) {\n      return additionalFilters.concat(\n        getAdditionalFilters(field.schema.fields, fieldPath),\n      );\n    }\n    if (!isAdditionalField(field)) {\n      return additionalFilters;\n    }\n    additionalFilters.push({\n      name: fieldPath,\n      fieldSchema: {\n        ...field,\n        field: fieldPath,\n      },\n    });\n    return additionalFilters;\n  }, []);\n}\n","import dateRanges from './dateRanges.js';\nimport withDefaultFilterConfig from './withDefaultFilterConfig.js';\nimport getAdditionalFilters from './getAdditionalFilters.js';\n\nconst isNameMatching = (name1, name2) =>\n  name1.replace('.', ':') === name2.replace('.', ':');\n\nexport default function getFilters(intl, fields, opts = {}) {\n  const { staticRanges, inputRanges } = dateRanges(intl, opts);\n\n  const { include, sort, exclude } = opts;\n\n  const standardFilters = [\n    { name: 'viewport' },\n    { name: 'geo' },\n    { name: 'search' },\n    { name: 'addMethod' },\n    { name: 'memberUid' },\n    { name: 'languages' },\n    { name: 'locationUid' },\n    { name: 'sourceAgendaUid' },\n    { name: 'originAgendaUid' },\n    { name: 'featured' },\n    { name: 'relative' },\n    { name: 'timings', staticRanges, inputRanges },\n    { name: 'createdAt', staticRanges, inputRanges },\n    { name: 'updatedAt', staticRanges, inputRanges },\n    { name: 'state' },\n    { name: 'attendanceMode' },\n    { name: 'countryCode' },\n    { name: 'region' },\n    { name: 'department' },\n    { name: 'adminLevel3' },\n    { name: 'city' },\n    { name: 'district' },\n    { name: 'keyword' },\n    { name: 'status' },\n    { name: 'accessibility' },\n  ];\n\n  const defaultSortFilters = standardFilters\n    .concat(getAdditionalFilters(fields))\n    .filter(\n      (filter) =>\n        !exclude || !exclude.find((f) => isNameMatching(f, filter.name)),\n    )\n    .filter(\n      (filter) =>\n        !include || !!include.find((f) => isNameMatching(f, filter.name)),\n    );\n\n  const finalCompleteSort = sort ?? include ?? [];\n\n  defaultSortFilters.forEach((filter) => {\n    if (finalCompleteSort.includes(filter.name)) {\n      return;\n    }\n    finalCompleteSort.push(filter.name);\n  });\n\n  return finalCompleteSort\n    .map((filterName) => {\n      const match = defaultSortFilters.find((filter) =>\n        isNameMatching(filter.name, filterName));\n\n      if (!match) {\n        console.warn(\n          'filter %s did not match any known field or filter',\n          filterName,\n        );\n      }\n\n      return match;\n    })\n    .filter((f) => !!f)\n    .map((filter) =>\n      withDefaultFilterConfig(filter, intl, {\n        dateFnsLocale: opts.dateFnsLocale,\n        mapTiles: opts.mapTiles,\n        missingValue: opts.missingValue,\n      }));\n}\n","import { getLocaleValue } from '@openagenda/intl';\nimport defaultMessages from '../messages/filterTitles.js';\n\nexport default function getFilterTitle(\n  intl,\n  providedMessages,\n  messageKey,\n  fieldSchema,\n) {\n  const messages = providedMessages ?? defaultMessages;\n\n  if (fieldSchema?.label) {\n    return getLocaleValue(fieldSchema.label, intl.locale);\n  }\n\n  if (messages[messageKey]) {\n    return intl.formatMessage(messages[messageKey]);\n  }\n\n  return messageKey;\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  geo: {\n    id: 'ReactFilters.messages.filterTitles.geo',\n    defaultMessage: 'Map',\n  },\n  search: {\n    id: 'ReactFilters.messages.filterTitles.search',\n    defaultMessage: 'Search',\n  },\n  addMethod: {\n    id: 'ReactFilters.messages.filterTitles.addMethod',\n    defaultMessage: 'Provenance',\n  },\n  memberUid: {\n    id: 'ReactFilters.messages.filterTitles.memberUid',\n    defaultMessage: 'Member',\n  },\n  locationUid: {\n    id: 'ReactFilters.messages.filterTitles.locationUid',\n    defaultMessage: 'Location',\n  },\n  sourceAgendaUid: {\n    id: 'ReactFilters.messages.filterTitles.sourceAgendaUid',\n    defaultMessage: 'Source agenda',\n  },\n  originAgendaUid: {\n    id: 'ReactFilters.messages.filterTitles.originAgendaUid',\n    defaultMessage: 'Origin agenda',\n  },\n  featured: {\n    id: 'ReactFilters.messages.filterTitles.featured',\n    defaultMessage: 'Featured',\n  },\n  relative: {\n    id: 'ReactFilters.messages.filterTitles.relative',\n    defaultMessage: 'Passed / current / upcoming',\n  },\n  region: {\n    id: 'ReactFilters.messages.filterTitles.region',\n    defaultMessage: 'Region',\n  },\n  department: {\n    id: 'ReactFilters.messages.filterTitles.department',\n    defaultMessage: 'Department',\n  },\n  countryCode: {\n    id: 'ReactFilters.messages.filterTitles.countryCode',\n    defaultMessage: 'Country',\n  },\n  city: {\n    id: 'ReactFilters.messages.filterTitles.city',\n    defaultMessage: 'City',\n  },\n  adminLevel3: {\n    id: 'ReactFilters.messages.filterTitles.adminLevel3',\n    defaultMessage: 'Administrative level 3',\n  },\n  timings: {\n    id: 'ReactFilters.messages.filterTitles.timings',\n    defaultMessage: 'Date',\n  },\n  createdAt: {\n    id: 'ReactFilters.messages.filterTitles.createdAt',\n    defaultMessage: 'Creation date',\n  },\n  updatedAt: {\n    id: 'ReactFilters.messages.filterTitles.updatedAt',\n    defaultMessage: 'Date of update',\n  },\n  keyword: {\n    id: 'ReactFilters.messages.filterTitles.keyword',\n    defaultMessage: 'Keywords',\n  },\n  state: {\n    id: 'ReactFilters.messages.filterTitles.state',\n    defaultMessage: 'State',\n  },\n  attendanceMode: {\n    id: 'ReactFilters.messages.filterTitles.attendanceMode',\n    defaultMessage: 'Attendance mode',\n  },\n  status: {\n    id: 'ReactFilters.messages.filterTitles.status',\n    defaultMessage: 'Status',\n  },\n  district: {\n    id: 'ReactFilters.messages.filterTitles.district',\n    defaultMessage: 'District',\n  },\n  accessibility: {\n    id: 'ReactFilters.messages.filterTitles.accessibility',\n    defaultMessage: 'Accessibility',\n  },\n  languages: {\n    id: 'ReactFilters.messages.filterTitles.languages',\n    defaultMessage: 'Languages',\n  },\n});\n","import { useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport a11yButtonActionHandler from '@openagenda/react-shared/dist/utils/a11yButtonActionHandler.js';\n\nexport default function Panel({\n  collapsed = true,\n  setCollapsed,\n  header,\n  children,\n}) {\n  // default state when used without setCollapsed\n  const internalState = useState(collapsed);\n\n  const value = typeof setCollapsed === 'function' ? collapsed : internalState[0];\n  const updater = typeof setCollapsed === 'function' ? setCollapsed : internalState[1];\n\n  const toggleCollapsed = useMemo(\n    () =>\n      a11yButtonActionHandler((e) => {\n        e.preventDefault();\n\n        updater((v) => !v);\n      }),\n    [updater],\n  );\n\n  return (\n    <div\n      className={cn('oa-collapse-item', { 'oa-collapse-item-active': !value })}\n    >\n      <div\n        className=\"oa-collapse-header\"\n        role=\"tab\"\n        tabIndex=\"0\"\n        aria-expanded={!value}\n        onClick={toggleCollapsed}\n        onKeyPress={toggleCollapsed}\n      >\n        {header}\n        <span className=\"oa-collapse-arrow\">\n          <i\n            className={cn('fa fa-lg', {\n              'fa-angle-up': !value,\n              'fa-angle-down': value,\n            })}\n            aria-hidden=\"true\"\n          />\n        </span>\n      </div>\n      <div\n        className={cn('oa-collapse-content', {\n          'oa-collapse-content-active': !value,\n          'oa-collapse-content-inactive': value,\n        })}\n        role=\"tabpanel\"\n      >\n        <div className=\"oa-collapse-content-box\">{children}</div>\n      </div>\n    </div>\n  );\n}\n","import classNames from 'classnames';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { css } from '@emotion/react';\nimport { getLocaleValue } from '@openagenda/intl';\n\nconst messages = defineMessages({\n  removeFilter: {\n    id: 'ReactFilters.ValueBadge.removeFilter',\n    defaultMessage: 'Remove filter',\n  },\n  removeFilterWithTitle: {\n    id: 'ReactFilters.ValueBadge.removeFilterWithTitle',\n    defaultMessage: 'Remove filter ({title})',\n  },\n});\n\nexport default function ValueBadge({ label, title, onRemove, disabled }) {\n  const intl = useIntl();\n\n  const titleLabel = title?.length\n    ? intl.formatMessage(messages.removeFilterWithTitle, { title })\n    : intl.formatMessage(messages.removeFilter);\n\n  return (\n    <button\n      type=\"button\"\n      title={titleLabel}\n      className={classNames('btn badge badge-pill badge-info margin-right-xs', {\n        disabled,\n      })}\n      css={css`\n        line-height: 18px;\n        padding-top: 0;\n        padding-bottom: 0;\n\n        :hover {\n          color: #da4453;\n          border-color: #d43f3a;\n        }\n      `}\n      // disabled={disabled}\n      onClick={onRemove}\n    >\n      {getLocaleValue(label, intl.locale)}\n      &nbsp;\n      <i className=\"fa fa-times\" aria-hidden=\"true\" />\n    </button>\n  );\n}\n","import useFilterTitle from '../hooks/useFilterTitle.js';\nimport ValueBadge from './ValueBadge.js';\n\nexport default function FilterPreviewer({\n  withTitle = true,\n  name,\n  filter,\n  label,\n  valueOptions,\n  onRemove,\n  disabled,\n  className,\n}) {\n  const title = useFilterTitle(name, filter.fieldSchema);\n\n  // multi\n  if (valueOptions?.length) {\n    return (\n      <>\n        {valueOptions.map((option) => (\n          <span key={option.value} className={className}>\n            <ValueBadge\n              label={option.label}\n              onRemove={onRemove(option)}\n              disabled={disabled}\n              title={withTitle ? title : null}\n            />\n          </span>\n        ))}\n      </>\n    );\n  }\n\n  // single\n  if (label) {\n    return (\n      <span className={className}>\n        <ValueBadge\n          label={label}\n          onRemove={onRemove}\n          disabled={disabled}\n          title={withTitle ? title : null}\n        />\n      </span>\n    );\n  }\n\n  return null;\n}\n","import isMatch from 'lodash/isMatch.js';\nimport omitBy from 'lodash/omitBy.js';\nimport isEmpty from 'lodash/isEmpty.js';\n\nexport default function matchQuery(a, b) {\n  return isMatch(omitBy(a, isEmpty), omitBy(b, isEmpty));\n}\n","import { formatValue as formatDateRangeValue } from '../components/filters/DateRangeFilter.js';\nimport matchQuery from './matchQuery.js';\n\nexport default function matchFilter(filter, values, entry) {\n  const [key, value] = entry;\n\n  // Matching custom\n  if (filter.type === 'custom' && filter.activeFilterLabel) {\n    return key in filter.query && matchQuery(values, filter.query);\n  }\n\n  // Matching favorites\n  if (filter.type === 'favorites' && filter.activeFilterLabel) {\n    return !!values.favorites;\n  }\n\n  // Matching staticRanges\n  if (filter.type === 'definedRange' && filter.name === key) {\n    const formattedValue = formatDateRangeValue(value)[0];\n    return !!filter.staticRanges.find((v) => v.isSelected(formattedValue));\n  }\n\n  // Same name\n  return filter.name === key;\n}\n","import { useCallback, useMemo, useState } from 'react';\nimport useIsomorphicLayoutEffectModule from 'react-use/lib/useIsomorphicLayoutEffect.js';\nimport usePreviousModule from 'react-use/lib/usePrevious.js';\nimport { useIntl } from 'react-intl';\nimport Fuse from 'fuse.js';\nimport useConstant from '@openagenda/react-shared/dist/hooks/useConstant.js';\n\nconst useIsomorphicLayoutEffect = useIsomorphicLayoutEffectModule.default || useIsomorphicLayoutEffectModule;\nconst usePrevious = usePreviousModule.default || usePreviousModule;\n\nfunction getCollator(locale, defaultLocale) {\n  try {\n    return new Intl.Collator(locale, {\n      sensitivity: 'base',\n      usage: 'sort',\n    });\n  } catch {\n    return new Intl.Collator(defaultLocale, {\n      sensitivity: 'base',\n      usage: 'sort',\n    });\n  }\n}\n\nfunction filterOptions({ options, fuse, searchValue, sort, collator }) {\n  if (searchValue === '') {\n    if (sort === 'alphabetical') {\n      return [...options].sort((a, b) => collator.compare(a.label, b.label));\n    }\n\n    return options;\n  }\n\n  return fuse.search(searchValue).map((v) => v.item);\n}\n\nexport default function useChoiceState({\n  filter,\n  getOptions,\n  pageSize,\n  collapsed = false,\n  sort = null,\n}) {\n  const intl = useIntl();\n  const [countOptions, setCountOptions] = useState(pageSize);\n  const options = useMemo(() => getOptions(filter), [filter, getOptions]);\n\n  const fuse = useConstant(\n    () =>\n      new Fuse(options, {\n        threshold: 0.3,\n        ignoreLocation: true,\n        keys: ['label'],\n      }),\n  );\n\n  const collator = useMemo(\n    () => getCollator(intl.locale, intl.defaultLocale),\n    [intl.defaultLocale, intl.locale],\n  );\n\n  const [searchValue, setSearchValue] = useState('');\n  const previousSearchValue = usePrevious(searchValue);\n  const [foundOptions, setFoundOptions] = useState(\n    filterOptions({\n      options,\n      fuse,\n      searchValue,\n      sort,\n      collator,\n    }),\n  );\n\n  const moreOptions = useCallback(\n    () => setCountOptions((v) => v + pageSize),\n    [pageSize],\n  );\n  const lessOptions = useCallback(() => setCountOptions(pageSize), [pageSize]);\n\n  const previousCollpased = usePrevious(collapsed);\n\n  useIsomorphicLayoutEffect(() => {\n    if (previousCollpased && !collapsed) {\n      lessOptions();\n    }\n  }, [collapsed, lessOptions, previousCollpased]);\n\n  const hasMoreOptions = countOptions < foundOptions.length;\n\n  const onSearchChange = useCallback((e) => setSearchValue(e.target.value), []);\n\n  // Update fuse docs if options change\n  useIsomorphicLayoutEffect(() => {\n    if (options !== fuse._docs) {\n      fuse.setCollection(options);\n\n      const newOptions = filterOptions({\n        options,\n        fuse,\n        searchValue,\n        sort,\n        collator,\n      });\n\n      setFoundOptions(newOptions);\n    }\n  }, [fuse, searchValue, options, sort, collator]);\n\n  // Update search results if search change\n  useIsomorphicLayoutEffect(() => {\n    if (\n      previousSearchValue !== undefined\n      && searchValue !== previousSearchValue\n    ) {\n      const newOptions = filterOptions({\n        options,\n        fuse,\n        searchValue,\n        sort,\n        collator,\n      });\n\n      // if (newOptions.length <= pageSize || searchValue === '') {\n      //   lessOptions();\n      // }\n\n      setFoundOptions(newOptions);\n    }\n  }, [fuse, searchValue, options, previousSearchValue, sort, collator]);\n\n  return {\n    options,\n    searchValue,\n    onSearchChange,\n    foundOptions,\n    countOptions,\n    hasMoreOptions,\n    moreOptions,\n    lessOptions,\n  };\n}\n","import { useCallback } from 'react';\nimport { useForm } from 'react-final-form';\nimport matchQuery from '../utils/matchQuery.js';\nimport updateFormValues from '../utils/updateFormValues.js';\n\nexport default function useFavoritesOnChange(eventUids, { isExclusive } = {}) {\n  const form = useForm();\n\n  return useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const query = form.getState().values;\n\n      const matchingQuery = {\n        uid: eventUids?.length ? eventUids.map(String) : ['-1'],\n        favorites: '1',\n      };\n\n      const isMatchQuery = matchQuery(query, matchingQuery);\n\n      const newQuery = isExclusive && !isMatchQuery\n        ? form.getRegisteredFields().reduce((accu, next) => {\n          if (next in matchingQuery) {\n            accu[next] = matchingQuery[next];\n            return accu;\n          }\n\n          accu[next] = undefined;\n\n          return accu;\n        }, {})\n        : matchingQuery;\n\n      // Without favorites in store\n      if (!newQuery.uid?.length) {\n        newQuery.uid = ['-1'];\n      }\n\n      updateFormValues(form, newQuery, !isMatchQuery);\n    },\n    [isExclusive, form, eventUids],\n  );\n}\n","export default function updateFormValues(form, query, active = true) {\n  form.batch(() => {\n    for (const key in query) {\n      if (Object.prototype.hasOwnProperty.call(query, key)) {\n        if (active) {\n          form.change(key, query[key]);\n        } else {\n          form.change(key, undefined);\n        }\n      }\n    }\n  });\n}\n","import { useCallback } from 'react';\nimport { createLocalStorageStateHook } from 'use-local-storage-state';\n\nconst useFavoriteLocalStorageState = createLocalStorageStateHook('favorite-events');\n\nexport default function useFavoriteState(agendaUid) {\n  const [value, setValue] = useFavoriteLocalStorageState();\n\n  const setAgendaValue = useCallback(\n    (fnOrValue) => {\n      if (typeof fnOrValue === 'function') {\n        setValue((prev) => ({\n          ...prev,\n          [agendaUid]: fnOrValue(prev?.[agendaUid]),\n        }));\n      } else {\n        setValue((prev) => ({\n          ...prev,\n          [agendaUid]: fnOrValue,\n        }));\n      }\n    },\n    [setValue, agendaUid],\n  );\n\n  return [value?.[agendaUid], setAgendaValue];\n}\n","import { createRef, useMemo } from 'react';\nimport { useUIDSeed } from 'react-uid';\nimport { getFilters } from '../utils/index.js';\n\nexport default function useFilters(intl, fields, opts = {}) {\n  const seed = useUIDSeed();\n\n  // linter is not happy but entire opts should not directly be a dependency of useMemo\n  return useMemo(\n    () =>\n      getFilters(intl, fields, opts).map((filter) => ({\n        ...filter,\n        id: seed(filter),\n        elemRef: createRef(),\n      })),\n    [\n      intl,\n      fields,\n      seed,\n      opts.dateFnsLocale,\n      opts.staticRanges,\n      opts.inputRanges,\n      opts.missingValue,\n      opts.mapTiles,\n      opts.exclude,\n      opts.include,\n    ],\n  );\n}\n","import get from 'lodash/get.js';\nimport { useCallback } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { getLocaleValue } from '@openagenda/intl';\n\nconst messages = defineMessages({\n  emptyOption: {\n    id: 'ReactFilters.useGetFilterOptions.emptyOption',\n    defaultMessage: '(Without value)',\n  },\n});\n\nexport default function useGetFilterOptions(intl, filtersBase, aggregations) {\n  return useCallback(\n    (filter) => {\n      const missingLabel = intl.formatMessage(messages.emptyOption);\n\n      if (filter.options) {\n        const missingOption = filter.missingValue\n          ? filtersBase?.[filter.name]?.find((v) => {\n            const dataKey = 'id' in v ? 'id' : 'key';\n            return v[dataKey] === filter.missingValue;\n          })\n          : null;\n\n        return missingOption\n          ? [\n            {\n              label: missingLabel,\n              key: filter.missingValue,\n              value: filter.missingValue,\n            },\n          ].concat(filter.options)\n          : filter.options;\n      }\n\n      if (!filtersBase?.[filter.name]) return [];\n\n      const baseAgg = [...filtersBase[filter.name]];\n\n      const aggregation = aggregations[filter.name];\n\n      if (aggregation) {\n        aggregation.forEach((entry) => {\n          const dataKey = 'id' in entry ? 'id' : 'key';\n          const found = baseAgg.find((v) => v[dataKey] === entry[dataKey]);\n          if (!found) baseAgg.push(entry);\n        });\n      }\n\n      const labelKey = filter.labelKey || 'key';\n\n      return baseAgg.map((entry) => {\n        const dataKey = 'id' in entry ? 'id' : 'key';\n        const labelValue = get(entry, labelKey);\n\n        return {\n          ...entry,\n          label:\n            labelValue === filter.missingValue\n              ? missingLabel\n              : getLocaleValue(labelValue, intl.locale),\n          value: String(entry[dataKey]),\n        };\n      });\n    },\n    [intl, aggregations, filtersBase],\n  );\n}\n","import { useCallback } from 'react';\n\nexport default function useGetTotal(aggregations) {\n  return useCallback(\n    (filter, option) => {\n      const aggregation = aggregations[filter.name];\n\n      if (!aggregation) return null;\n\n      const dataKey = 'id' in option ? 'id' : 'key';\n      const optionKey = 'id' in option ? 'id' : 'value';\n\n      const optionValue = aggregation.find(\n        (v) => String(v[dataKey]) === String(option[optionKey]),\n      );\n\n      if (optionValue) {\n        return optionValue.eventCount || 0;\n      }\n\n      return 0;\n    },\n    [aggregations],\n  );\n}\n","import { useCallback } from 'react';\nimport qs from 'qs';\nimport getQuerySeparator from '../utils/getQuerySeparator.js';\n\nexport default function useLoadGeoData(\n  _apiClient,\n  res,\n  queryOrFn,\n  options = {},\n) {\n  const { searchMethod = 'get' } = options;\n\n  return useCallback(\n    async (bounds, zoom) => {\n      const query = typeof queryOrFn === 'function' ? queryOrFn() : queryOrFn;\n      const northEast = bounds.getNorthEast().wrap();\n      const southWest = bounds.getSouthWest().wrap();\n\n      const params = {\n        // oaq: { passed: 1 },\n        size: 0,\n        ...query,\n        aggregations: [\n          {\n            type: 'geohash',\n            size: 2000,\n            zoom: Math.max(zoom, 1),\n            radius: zoom === 0 ? 80 : 40,\n          },\n        ],\n        geo: {\n          northEast,\n          southWest,\n        },\n      };\n\n      const result = await (\n        searchMethod === 'get'\n          ? fetch(\n            `${res}${getQuerySeparator(res)}${qs.stringify(params, {\n              skipNulls: true,\n            })}`,\n          )\n          : fetch(res, {\n            method: 'post',\n            body: JSON.stringify(params),\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n      ).then((r) => {\n        if (r.ok) return r.json();\n        throw new Error(\"Can't load geo data\");\n      });\n\n      return result.aggregations.geohash;\n    },\n    [res, queryOrFn, searchMethod],\n  );\n}\n"],"mappings":"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","names":["import_react_final_form","import_react","import_react","import_react_final_form","import_react_intl","import_date_fns","import_react","import_react","qs","useIsomorphicLayoutEffectModule","useLatestModule","usePreviousModule","isDate","isEqual","dateFnsLocaleEN","cn","React","import_react","import_react","import_react_intl","import_date_fns","import_react_intl","defaults","import_intl","import_react_intl","import_react_intl","import_react_intl","import_react_intl","import_react_intl","import_react_intl","import_react_intl","import_react_intl","defaults","import_intl","import_react_intl","messages","messages","import_jsx_runtime","React","import_react","import_classnames","import_jsx_runtime","a11yButtonActionHandler","cn","import_classnames","import_react_intl","import_react","import_intl","import_jsx_runtime","messages","classNames","import_jsx_runtime","import_jsx_runtime","messages","subscription","React","DateRangeFilter","Collapsable","isMatch","omitBy","isEmpty","import_react","import_useIsomorphicLayoutEffect","import_usePrevious","import_react_intl","useIsomorphicLayoutEffect","useIsomorphicLayoutEffectModule","usePrevious","usePreviousModule","useConstant","Fuse","import_react","import_react_final_form","import_react","import_react","import_react","import_react_intl","import_intl","messages","get","import_react","import_react","import_qs","qs","import_react_final_form"]}