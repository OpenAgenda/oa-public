{"version":3,"sources":["../../src/hooks/useFavoritesOnChange.js","../../src/utils/matchQuery.js","../../src/utils/updateFormValues.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useForm } from 'react-final-form';\nimport matchQuery from '../utils/matchQuery.js';\nimport updateFormValues from '../utils/updateFormValues.js';\n\nexport default function useFavoritesOnChange(eventUids, { isExclusive } = {}) {\n  const form = useForm();\n\n  return useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const query = form.getState().values;\n\n      const matchingQuery = {\n        uid: eventUids?.length ? eventUids.map(String) : ['-1'],\n        favorites: '1',\n      };\n\n      const isMatchQuery = matchQuery(query, matchingQuery);\n\n      const newQuery = isExclusive && !isMatchQuery\n        ? form.getRegisteredFields().reduce((accu, next) => {\n          if (next in matchingQuery) {\n            accu[next] = matchingQuery[next];\n            return accu;\n          }\n\n          accu[next] = undefined;\n\n          return accu;\n        }, {})\n        : matchingQuery;\n\n      // Without favorites in store\n      if (!newQuery.uid?.length) {\n        newQuery.uid = ['-1'];\n      }\n\n      updateFormValues(form, newQuery, !isMatchQuery);\n    },\n    [isExclusive, form, eventUids],\n  );\n}\n","import isMatch from 'lodash/isMatch.js';\nimport omitBy from 'lodash/omitBy.js';\nimport isEmpty from 'lodash/isEmpty.js';\n\nexport default function matchQuery(a, b) {\n  return isMatch(omitBy(a, isEmpty), omitBy(b, isEmpty));\n}\n","export default function updateFormValues(form, query, active = true) {\n  form.batch(() => {\n    for (const key in query) {\n      if (Object.prototype.hasOwnProperty.call(query, key)) {\n        if (active) {\n          form.change(key, query[key]);\n        } else {\n          form.change(key, undefined);\n        }\n      }\n    }\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4B;AAC5B,8BAAwB;;;ACDxB,qBAAoB;AACpB,oBAAmB;AACnB,qBAAoB;AAEL,SAAR,WAA4B,GAAG,GAAG;AACvC,aAAO,eAAAA,aAAQ,cAAAC,SAAO,GAAG,eAAAC,OAAO,OAAG,cAAAD,SAAO,GAAG,eAAAC,OAAO,CAAC;AACvD;;;ACNe,SAAR,iBAAkC,MAAM,OAAO,SAAS,MAAM;AACnE,OAAK,MAAM,MAAM;AACf,eAAW,OAAO,OAAO;AACvB,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO,GAAG,GAAG;AACpD,YAAI,QAAQ;AACV,eAAK,OAAO,KAAK,MAAM,GAAG,CAAC;AAAA,QAC7B,OAAO;AACL,eAAK,OAAO,KAAK,MAAS;AAAA,QAC5B;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACH;;;AFPe,SAAR,qBAAsC,WAAW,EAAE,YAAY,IAAI,CAAC,GAAG;AAC5E,QAAM,WAAO,iCAAQ;AAErB,aAAO;AAAA,IACL,CAAC,MAAM;AATX;AAUM,QAAE,eAAe;AACjB,QAAE,gBAAgB;AAElB,YAAM,QAAQ,KAAK,SAAS,EAAE;AAE9B,YAAM,gBAAgB;AAAA,QACpB,MAAK,uCAAW,UAAS,UAAU,IAAI,MAAM,IAAI,CAAC,IAAI;AAAA,QACtD,WAAW;AAAA,MACb;AAEA,YAAM,eAAe,WAAW,OAAO,aAAa;AAEpD,YAAM,WAAW,eAAe,CAAC,eAC7B,KAAK,oBAAoB,EAAE,OAAO,CAAC,MAAM,SAAS;AAClD,YAAI,QAAQ,eAAe;AACzB,eAAK,IAAI,IAAI,cAAc,IAAI;AAC/B,iBAAO;AAAA,QACT;AAEA,aAAK,IAAI,IAAI;AAEb,eAAO;AAAA,MACT,GAAG,CAAC,CAAC,IACH;AAGJ,UAAI,GAAC,cAAS,QAAT,mBAAc,SAAQ;AACzB,iBAAS,MAAM,CAAC,IAAI;AAAA,MACtB;AAEA,uBAAiB,MAAM,UAAU,CAAC,YAAY;AAAA,IAChD;AAAA,IACA,CAAC,aAAa,MAAM,SAAS;AAAA,EAC/B;AACF;","names":["isMatch","omitBy","isEmpty"]}