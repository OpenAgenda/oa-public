{"version":3,"sources":["../../src/hooks/useLoadTimingsData.js","../../src/utils/getQuerySeparator.js"],"sourcesContent":["import { useCallback } from 'react';\nimport qs from 'qs';\nimport getQuerySeparator from '../utils/getQuerySeparator.js';\n\nexport default function useLoadTimingsData(res, queryOrFn, options = {}) {\n  const { searchMethod = 'get' } = options;\n\n  return useCallback(\n    async (additionalQuery = {}, { interval, timezone } = {}) => {\n      const query = typeof queryOrFn === 'function' ? queryOrFn() : queryOrFn;\n\n      const params = {\n        // oaq: { passed: 1 },\n        size: 0,\n        ...query,\n        ...additionalQuery,\n        aggregations: [\n          {\n            type: 'timings',\n            // size: 2000,\n            interval,\n            timezone,\n          },\n        ],\n      };\n\n      const result = await (\n        searchMethod === 'get'\n          ? fetch(\n            `${res}${getQuerySeparator(res)}${qs.stringify(params, {\n              skipNulls: true,\n            })}`,\n          )\n          : fetch(res, {\n            method: 'post',\n            body: JSON.stringify(params),\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n      ).then((r) => {\n        if (r.ok) return r.json();\n        throw new Error(\"Can't load timings data\");\n      });\n\n      return result.aggregations.timings;\n    },\n    [res, queryOrFn, searchMethod],\n  );\n}\n","export default function getQuerySeparator(url) {\n  try {\n    const urlObj = new URL(url, 'http://n');\n    return urlObj.search ? '&' : '?';\n  } catch (error) {\n    console.error('Invalid URL:', error);\n    return '?';\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4B;AAC5B,gBAAe;;;ACDA,SAAR,kBAAmC,KAAK;AAC7C,MAAI;AACF,UAAM,SAAS,IAAI,IAAI,KAAK,UAAU;AACtC,WAAO,OAAO,SAAS,MAAM;AAAA,EAC/B,SAAS,OAAO;AACd,YAAQ,MAAM,gBAAgB,KAAK;AACnC,WAAO;AAAA,EACT;AACF;;;ADJe,SAAR,mBAAoC,KAAK,WAAW,UAAU,CAAC,GAAG;AACvE,QAAM,EAAE,eAAe,MAAM,IAAI;AAEjC,aAAO;AAAA,IACL,OAAO,kBAAkB,CAAC,GAAG,EAAE,UAAU,SAAS,IAAI,CAAC,MAAM;AAC3D,YAAM,QAAQ,OAAO,cAAc,aAAa,UAAU,IAAI;AAE9D,YAAM,SAAS;AAAA;AAAA,QAEb,MAAM;AAAA,QACN,GAAG;AAAA,QACH,GAAG;AAAA,QACH,cAAc;AAAA,UACZ;AAAA,YACE,MAAM;AAAA;AAAA,YAEN;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,YAAM,SAAS,OACb,iBAAiB,QACb;AAAA,QACA,GAAG,GAAG,GAAG,kBAAkB,GAAG,CAAC,GAAG,UAAAA,QAAG,UAAU,QAAQ;AAAA,UACrD,WAAW;AAAA,QACb,CAAC,CAAC;AAAA,MACJ,IACE,MAAM,KAAK;AAAA,QACX,QAAQ;AAAA,QACR,MAAM,KAAK,UAAU,MAAM;AAAA,QAC3B,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC,GACH,KAAK,CAAC,MAAM;AACZ,YAAI,EAAE,GAAI,QAAO,EAAE,KAAK;AACxB,cAAM,IAAI,MAAM,yBAAyB;AAAA,MAC3C,CAAC;AAED,aAAO,OAAO,aAAa;AAAA,IAC7B;AAAA,IACA,CAAC,KAAK,WAAW,YAAY;AAAA,EAC/B;AACF;","names":["qs"]}