{"version":3,"sources":["../../src/hooks/useChoiceState.js"],"sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nimport useIsomorphicLayoutEffectModule from 'react-use/lib/useIsomorphicLayoutEffect.js';\nimport usePreviousModule from 'react-use/lib/usePrevious.js';\nimport { useIntl } from 'react-intl';\nimport Fuse from 'fuse.js';\nimport useConstant from '@openagenda/react-shared/dist/hooks/useConstant.js';\n\nconst useIsomorphicLayoutEffect = useIsomorphicLayoutEffectModule.default || useIsomorphicLayoutEffectModule;\nconst usePrevious = usePreviousModule.default || usePreviousModule;\n\nfunction getCollator(locale, defaultLocale) {\n  try {\n    return new Intl.Collator(locale, {\n      sensitivity: 'base',\n      usage: 'sort',\n    });\n  } catch {\n    return new Intl.Collator(defaultLocale, {\n      sensitivity: 'base',\n      usage: 'sort',\n    });\n  }\n}\n\nfunction filterOptions({ options, fuse, searchValue, sort, collator }) {\n  if (searchValue === '') {\n    if (sort === 'alphabetical') {\n      return [...options].sort((a, b) => collator.compare(a.label, b.label));\n    }\n\n    return options;\n  }\n\n  return fuse.search(searchValue).map((v) => v.item);\n}\n\nexport default function useChoiceState({\n  filter,\n  getOptions,\n  pageSize,\n  collapsed = false,\n  sort = null,\n}) {\n  const intl = useIntl();\n  const [countOptions, setCountOptions] = useState(pageSize);\n  const options = useMemo(() => getOptions(filter), [filter, getOptions]);\n\n  const fuse = useConstant(\n    () =>\n      new Fuse(options, {\n        threshold: 0.3,\n        ignoreLocation: true,\n        keys: ['label'],\n      }),\n  );\n\n  const collator = useMemo(\n    () => getCollator(intl.locale, intl.defaultLocale),\n    [intl.defaultLocale, intl.locale],\n  );\n\n  const [searchValue, setSearchValue] = useState('');\n  const previousSearchValue = usePrevious(searchValue);\n  const [foundOptions, setFoundOptions] = useState(\n    filterOptions({\n      options,\n      fuse,\n      searchValue,\n      sort,\n      collator,\n    }),\n  );\n\n  const moreOptions = useCallback(\n    () => setCountOptions((v) => v + pageSize),\n    [pageSize],\n  );\n  const lessOptions = useCallback(() => setCountOptions(pageSize), [pageSize]);\n\n  const previousCollpased = usePrevious(collapsed);\n\n  useIsomorphicLayoutEffect(() => {\n    if (previousCollpased && !collapsed) {\n      lessOptions();\n    }\n  }, [collapsed, lessOptions, previousCollpased]);\n\n  const hasMoreOptions = countOptions < foundOptions.length;\n\n  const onSearchChange = useCallback((e) => setSearchValue(e.target.value), []);\n\n  // Update fuse docs if options change\n  useIsomorphicLayoutEffect(() => {\n    if (options !== fuse._docs) {\n      fuse.setCollection(options);\n\n      const newOptions = filterOptions({\n        options,\n        fuse,\n        searchValue,\n        sort,\n        collator,\n      });\n\n      setFoundOptions(newOptions);\n    }\n  }, [fuse, searchValue, options, sort, collator]);\n\n  // Update search results if search change\n  useIsomorphicLayoutEffect(() => {\n    if (\n      previousSearchValue !== undefined\n      && searchValue !== previousSearchValue\n    ) {\n      const newOptions = filterOptions({\n        options,\n        fuse,\n        searchValue,\n        sort,\n        collator,\n      });\n\n      // if (newOptions.length <= pageSize || searchValue === '') {\n      //   lessOptions();\n      // }\n\n      setFoundOptions(newOptions);\n    }\n  }, [fuse, searchValue, options, previousSearchValue, sort, collator]);\n\n  return {\n    options,\n    searchValue,\n    onSearchChange,\n    foundOptions,\n    countOptions,\n    hasMoreOptions,\n    moreOptions,\n    lessOptions,\n  };\n}\n"],"mappings":"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","names":["useIsomorphicLayoutEffectModule","usePreviousModule","useConstant","Fuse"]}