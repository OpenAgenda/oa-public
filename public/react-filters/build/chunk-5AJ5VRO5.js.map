{"version":3,"sources":["../src/components/fields/DefinedRangeField.js"],"sourcesContent":["import isEqual from 'lodash/isEqual.js';\nimport isDate from 'lodash/isDate.js';\nimport React, { useCallback, useState } from 'react';\nimport { DefinedRange } from '@openagenda/react-date-range';\nimport useIsomorphicLayoutEffectModule from 'react-use/lib/useIsomorphicLayoutEffect.js';\nimport useLatestModule from 'react-use/lib/useLatest.js';\nimport usePreviousModule from 'react-use/lib/usePrevious.js';\n\nconst useIsomorphicLayoutEffect = useIsomorphicLayoutEffectModule.default || useIsomorphicLayoutEffectModule;\nconst useLatest = useLatestModule.default || useLatestModule;\nconst usePrevious = usePreviousModule.default || usePreviousModule;\n\nconst defaultGetInitialValue = () => [\n  {\n    startDate: null,\n    endDate: -1,\n    key: 'selection',\n  },\n];\n\nfunction normalizeValue(value) {\n  if (!value?.length) {\n    return value;\n  }\n\n  return value.map((v) => ({\n    startDate: isDate(v.startDate) ? v.startDate.getTime() : v.startDate,\n    endDate: isDate(v.endDate) ? v.endDate.getTime() : v.endDate,\n    key: v.key,\n  }));\n}\n\nfunction DefinedRangeField(\n  {\n    input,\n    meta,\n    staticRanges = [],\n    inputRanges = [],\n    rangeColor = '#41acdd',\n    disabled,\n    ...otherProps\n  },\n  _ref,\n) {\n  const [ranges, setRanges] = useState(\n    () => input.value ?? defaultGetInitialValue(),\n  );\n\n  const latestRanges = useLatest(ranges);\n  const previousValue = usePrevious(input.value);\n\n  const { onChange } = input;\n\n  const onDefinedRangeChange = useCallback(\n    (item) => {\n      const value = [item?.selection ? item.selection : item.range1];\n\n      setRanges(value);\n      onChange(value);\n    },\n    [onChange],\n  );\n\n  // If value change then update internal ranges\n  useIsomorphicLayoutEffect(() => {\n    if (\n      previousValue\n      && !isEqual(normalizeValue(input.value), normalizeValue(previousValue))\n      && !isEqual(\n        normalizeValue(input.value),\n        normalizeValue(latestRanges.current),\n      )\n    ) {\n      setRanges(input.value);\n    }\n  }, [input.value, previousValue, latestRanges]);\n\n  const definedRangePickerProps = {\n    ranges,\n    staticRanges,\n    inputRanges,\n    rangeColors: [rangeColor],\n    ...otherProps,\n  };\n\n  return (\n    <div className=\"rdrDateRangePickerWrapper\">\n      <DefinedRange\n        {...definedRangePickerProps}\n        onChange={onDefinedRangeChange}\n        className={undefined}\n      />\n    </div>\n  );\n}\n\nexport default React.forwardRef(DefinedRangeField);\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAO,YAAY;AACnB,OAAO,SAAS,aAAa,gBAAgB;AAC7C,SAAS,oBAAoB;AAC7B,OAAO,qCAAqC;AAC5C,OAAO,qBAAqB;AAC5B,OAAO,uBAAuB;AAiFxB;AA/EN,IAAM,4BAA4B,gCAAgC,WAAW;AAC7E,IAAM,YAAY,gBAAgB,WAAW;AAC7C,IAAM,cAAc,kBAAkB,WAAW;AAEjD,IAAM,yBAAyB,MAAM;AAAA,EACnC;AAAA,IACE,WAAW;AAAA,IACX,SAAS;AAAA,IACT,KAAK;AAAA,EACP;AACF;AAEA,SAAS,eAAe,OAAO;AAC7B,MAAI,EAAC,+BAAO,SAAQ;AAClB,WAAO;AAAA,EACT;AAEA,SAAO,MAAM,IAAI,CAAC,OAAO;AAAA,IACvB,WAAW,OAAO,EAAE,SAAS,IAAI,EAAE,UAAU,QAAQ,IAAI,EAAE;AAAA,IAC3D,SAAS,OAAO,EAAE,OAAO,IAAI,EAAE,QAAQ,QAAQ,IAAI,EAAE;AAAA,IACrD,KAAK,EAAE;AAAA,EACT,EAAE;AACJ;AAEA,SAAS,kBACP;AAAA,EACE;AAAA,EACA;AAAA,EACA,eAAe,CAAC;AAAA,EAChB,cAAc,CAAC;AAAA,EACf,aAAa;AAAA,EACb;AAAA,EACA,GAAG;AACL,GACA,MACA;AACA,QAAM,CAAC,QAAQ,SAAS,IAAI;AAAA,IAC1B,MAAM,MAAM,SAAS,uBAAuB;AAAA,EAC9C;AAEA,QAAM,eAAe,UAAU,MAAM;AACrC,QAAM,gBAAgB,YAAY,MAAM,KAAK;AAE7C,QAAM,EAAE,SAAS,IAAI;AAErB,QAAM,uBAAuB;AAAA,IAC3B,CAAC,SAAS;AACR,YAAM,QAAQ,EAAC,6BAAM,aAAY,KAAK,YAAY,KAAK,MAAM;AAE7D,gBAAU,KAAK;AACf,eAAS,KAAK;AAAA,IAChB;AAAA,IACA,CAAC,QAAQ;AAAA,EACX;AAGA,4BAA0B,MAAM;AAC9B,QACE,iBACG,CAAC,QAAQ,eAAe,MAAM,KAAK,GAAG,eAAe,aAAa,CAAC,KACnE,CAAC;AAAA,MACF,eAAe,MAAM,KAAK;AAAA,MAC1B,eAAe,aAAa,OAAO;AAAA,IACrC,GACA;AACA,gBAAU,MAAM,KAAK;AAAA,IACvB;AAAA,EACF,GAAG,CAAC,MAAM,OAAO,eAAe,YAAY,CAAC;AAE7C,QAAM,0BAA0B;AAAA,IAC9B;AAAA,IACA;AAAA,IACA;AAAA,IACA,aAAa,CAAC,UAAU;AAAA,IACxB,GAAG;AAAA,EACL;AAEA,SACE,oBAAC,SAAI,WAAU,6BACb;AAAA,IAAC;AAAA;AAAA,MACE,GAAG;AAAA,MACJ,UAAU;AAAA,MACV,WAAW;AAAA;AAAA,EACb,GACF;AAEJ;AAEA,IAAO,4BAAQ,MAAM,WAAW,iBAAiB;","names":[]}