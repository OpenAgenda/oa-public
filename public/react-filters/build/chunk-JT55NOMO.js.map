{"version":3,"sources":["../src/components/FiltersProvider.js"],"sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useImperativeHandle,\n  useMemo,\n  useState,\n  useRef,\n} from 'react';\nimport { Form, FormSpy } from 'react-final-form';\nimport useConstant from '@openagenda/react-shared/dist/hooks/useConstant.js';\nimport { createForm } from 'final-form';\nimport { RawIntlProvider, useIntl } from 'react-intl';\nimport filtersToAggregations from '../utils/filtersToAggregations.js';\nimport FiltersAndWidgetsContext from '../contexts/FiltersAndWidgetsContext.js';\nimport { withDefaultFilterConfig } from '../utils/index.js';\n\nconst defaultSubscription = {};\nconst spySubscription = { dirty: true, values: true };\n\nconst FiltersForm = React.forwardRef(\n  ({ onSubmit, initialValues, manualSubmit, subscription, children }, ref) => {\n    const { filters } = useContext(FiltersAndWidgetsContext);\n\n    const submittedValuesRef = useRef();\n\n    const handleSubmit = useCallback(\n      (values, form) => {\n        const aggregations = filtersToAggregations(filters);\n\n        submittedValuesRef.current = values;\n\n        return onSubmit(values, aggregations, form);\n      },\n      [filters, onSubmit],\n    );\n\n    const form = useConstant(() => {\n      const finalForm = createForm({ onSubmit: handleSubmit, initialValues });\n      finalForm.getSubmittedValues = () => submittedValuesRef.current;\n      return finalForm;\n    });\n\n    useImperativeHandle(ref, () => form);\n\n    const onValueChange = useCallback(\n      ({ dirty, values }) => {\n        if (manualSubmit) {\n          return;\n        }\n        if (dirty) {\n          form.submit();\n          form.reset(values);\n        }\n      },\n      [form, manualSubmit],\n    );\n\n    return (\n      <Form form={form} subscription={subscription}>\n        {() => (\n          <>\n            {children}\n\n            <FormSpy subscription={spySubscription} onChange={onValueChange} />\n          </>\n        )}\n      </Form>\n    );\n  },\n);\n\nconst IntlProvided = React.forwardRef(\n  (\n    {\n      filters: rawFilters,\n      widgets: rawWidgets,\n      missingValue,\n      mapTiles,\n      dateFnsLocale,\n      initialValues,\n      onSubmit,\n      subscription,\n      searchMethod,\n      manualSubmit,\n      res,\n      children,\n    },\n    ref,\n  ) => {\n    const intl = useIntl();\n\n    const filtersOptions = useMemo(\n      () => ({\n        missingValue,\n        mapTiles,\n        dateFnsLocale,\n        manualSubmit,\n        searchMethod,\n        res,\n      }),\n      [missingValue, mapTiles, dateFnsLocale, manualSubmit, searchMethod, res],\n    );\n    const [filters, setFilters] = useState(() =>\n      (rawFilters ?? []).map((rawFilter) =>\n        withDefaultFilterConfig(rawFilter, intl, filtersOptions)));\n    const [widgets, setWidgets] = useState(() => rawWidgets);\n\n    const updateFilters = useCallback(\n      (newFilters) => {\n        setFilters(\n          newFilters.map((rawFilter) =>\n            withDefaultFilterConfig(rawFilter, intl, filtersOptions)),\n        );\n      },\n      [filtersOptions, intl],\n    );\n\n    const filtersAndWidgets = useMemo(\n      () => ({\n        filters,\n        widgets,\n        setFilters: updateFilters,\n        setWidgets,\n        filtersOptions,\n      }),\n      [filters, updateFilters, widgets, filtersOptions],\n    );\n\n    return (\n      <FiltersAndWidgetsContext.Provider value={filtersAndWidgets}>\n        <FiltersForm\n          ref={ref}\n          onSubmit={onSubmit}\n          initialValues={initialValues}\n          subscription={subscription}\n          searchMethod={searchMethod}\n          manualSubmit={manualSubmit}\n        >\n          {children}\n        </FiltersForm>\n      </FiltersAndWidgetsContext.Provider>\n    );\n  },\n);\n\nfunction FiltersProvider(\n  {\n    children = undefined,\n    intl = null,\n    filters = null,\n    widgets = [],\n    // filters config\n    missingValue = null,\n    mapTiles = null,\n    dateFnsLocale = undefined,\n    // for test\n    apiClient = null,\n    // form config\n    onSubmit = null,\n    initialValues = null,\n    subscription = defaultSubscription,\n    searchMethod = 'get',\n    manualSubmit = false,\n    // to load on-demand aggregations (geo, timings)\n    res = null,\n  },\n  ref,\n) {\n  const child = (\n    <IntlProvided\n      ref={ref}\n      filters={filters}\n      widgets={widgets}\n      missingValue={missingValue}\n      mapTiles={mapTiles}\n      dateFnsLocale={dateFnsLocale}\n      apiClient={apiClient}\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      subscription={subscription}\n      searchMethod={searchMethod}\n      manualSubmit={manualSubmit}\n      res={res}\n    >\n      {children}\n    </IntlProvided>\n  );\n\n  if (intl) {\n    return <RawIntlProvider value={intl}>{child}</RawIntlProvider>;\n  }\n\n  return child;\n}\n\nexport default React.forwardRef(FiltersProvider);\n"],"mappings":"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","names":["form"]}