{"version":3,"sources":["../../src/utils/dateRanges.js"],"sourcesContent":["import {\n  addDays,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay,\n  isSameDay,\n  getISODay,\n} from 'date-fns';\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  today: {\n    id: 'ReactFilters.dateRanges.today',\n    defaultMessage: 'Today',\n  },\n  tomorrow: {\n    id: 'ReactFilters.dateRanges.tomorrow',\n    defaultMessage: 'Tomorrow',\n  },\n  thisWeekend: {\n    id: 'ReactFilters.dateRanges.thisWeekend',\n    defaultMessage: 'This week-end',\n  },\n  currentWeek: {\n    id: 'ReactFilters.dateRanges.currentWeek',\n    defaultMessage: 'Current week',\n  },\n  currentMonth: {\n    id: 'ReactFilters.dateRanges.currentMonth',\n    defaultMessage: 'Current month',\n  },\n});\n\nfunction getClosestDayAfter(dayOfWeek, fromDate = new Date()) {\n  const dayOfWeekMap = {\n    Mon: 1,\n    Tue: 2,\n    Wed: 3,\n    Thur: 4,\n    Fri: 5,\n    Sat: 6,\n    Sun: 7,\n  };\n  const offsetDays = dayOfWeekMap[dayOfWeek] - getISODay(fromDate);\n  return addDays(fromDate, offsetDays);\n}\n\nfunction isSelected(range, _timeZone) {\n  const definedRange = this.range();\n\n  return (\n    range\n    && (isSameDay(range.startDate, definedRange.startDate)\n      || range.startDate === definedRange.startDate)\n    && (isSameDay(range.endDate, definedRange.endDate)\n      || range.endDate === definedRange.endDate)\n  );\n}\n\nexport function createStaticRanges(ranges) {\n  return ranges.map((range) => ({ isSelected, ...range }));\n}\n\nexport default function dateRanges(intl, opts = {}) {\n  const { dateFnsLocale } = opts;\n\n  const nextSaturday = getClosestDayAfter('Sat');\n\n  const startOfWeekend = startOfDay(nextSaturday);\n  const endOfWeekend = endOfDay(addDays(nextSaturday, 1));\n  const now = new Date();\n\n  const defineds = {\n    startOfToday: startOfDay(now, { locale: dateFnsLocale }),\n    endOfToday: endOfDay(now, { locale: dateFnsLocale }),\n    startOfTomorrow: startOfDay(addDays(now, 1), { locale: dateFnsLocale }),\n    endOfTomorrow: endOfDay(addDays(now, 1), { locale: dateFnsLocale }),\n    startOfWeek: startOfWeek(now, { locale: dateFnsLocale }),\n    endOfWeek: endOfWeek(now, { locale: dateFnsLocale }),\n    startOfMonth: startOfMonth(now, { locale: dateFnsLocale }),\n    endOfMonth: endOfMonth(now, { locale: dateFnsLocale }),\n    startOfWeekend,\n    endOfWeekend,\n  };\n\n  const defaults = {\n    staticRanges: createStaticRanges([\n      {\n        id: 'today',\n        label: intl.formatMessage(messages.today),\n        range: () => ({\n          startDate: defineds.startOfToday,\n          endDate: defineds.endOfToday,\n        }),\n      },\n      {\n        id: 'tomorrow',\n        label: intl.formatMessage(messages.tomorrow),\n        range: () => ({\n          startDate: defineds.startOfTomorrow,\n          endDate: defineds.endOfTomorrow,\n        }),\n      },\n      {\n        id: 'thisWeekend',\n        label: intl.formatMessage(messages.thisWeekend),\n        range: () => ({\n          startDate: defineds.startOfWeekend,\n          endDate: defineds.endOfWeekend,\n        }),\n      },\n      {\n        id: 'currentWeek',\n        label: intl.formatMessage(messages.currentWeek),\n        range: () => ({\n          startDate: defineds.startOfWeek,\n          endDate: defineds.endOfWeek,\n        }),\n      },\n      {\n        id: 'currentMonth',\n        label: intl.formatMessage(messages.currentMonth),\n        range: () => ({\n          startDate: defineds.startOfMonth,\n          endDate: defineds.endOfMonth,\n        }),\n      },\n    ]),\n    inputRanges: [],\n  };\n\n  return {\n    staticRanges: opts.staticRanges\n      ? opts.staticRanges.reduce((accu, next) => {\n        if (typeof next === 'string') {\n          const result = defaults.staticRanges.find((w) => w.id === next);\n          if (result) accu.push(result);\n          else console.log(`Cannot found static range \"${next}\"`);\n        } else {\n          accu.push(next);\n        }\n        return accu;\n      }, [])\n      : defaults.staticRanges,\n    inputRanges: opts.inputRanges || defaults.inputRanges,\n  };\n}\n"],"mappings":"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","names":[]}