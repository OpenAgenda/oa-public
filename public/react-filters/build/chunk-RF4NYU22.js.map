{"version":3,"sources":["../src/components/filters/SimpleDateRangeFilter.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Field } from 'react-final-form';\nimport { endOfDay, startOfDay, format } from 'date-fns';\nimport { getTimezoneOffset, utcToZonedTime } from 'date-fns-tz';\n// import NumberRangeField from '../fields/NumberRangeField';\nimport Panel from '../Panel.js';\nimport Title from '../Title.js';\nimport SimpleDateRangeField from '../fields/SimpleDateRangeField.js';\nimport { Preview } from './DateRangeFilter.js';\n\nconst subscription = { value: true };\n\nfunction formatDateValue(value, tz) {\n  if (!value) return value;\n\n  const currentTz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const tzDiff = getTimezoneOffset(tz, value) - getTimezoneOffset(currentTz, value);\n\n  let date = new Date(value);\n\n  if (tzDiff) {\n    date = utcToZonedTime(date, tz);\n  }\n\n  return date;\n}\n\n// For display (store -> form)\nfunction formatValue(value) {\n  if (!value) {\n    return undefined;\n  }\n\n  const gte = formatDateValue(value.gte, value.tz);\n  const lte = formatDateValue(value.lte, value.tz);\n\n  return {\n    gte: gte ? format(gte, 'yyyy-MM-dd') : null,\n    lte: lte ? format(lte, 'yyyy-MM-dd') : null,\n  };\n}\n\n// For save (form -> store)\nfunction parseValue(value) {\n  if (!value) {\n    return value;\n  }\n\n  const gte = value.gte ? startOfDay(new Date(value.gte)).toISOString() : null;\n  const lte = value.lte ? endOfDay(new Date(value.lte)).toISOString() : null;\n\n  const result = {};\n  if (gte) result.gte = gte;\n  if (lte) result.lte = lte;\n\n  if (gte || lte) result.tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  return result;\n}\n\nconst SimpleDateRangeFilter = React.forwardRef(function SimpleDateRangeFilter(\n  { name },\n  ref,\n) {\n  return (\n    <Field\n      ref={ref}\n      name={name}\n      subscription={subscription}\n      format={formatValue}\n      parse={parseValue}\n      component={SimpleDateRangeField}\n    />\n  );\n});\n\nconst Collapsable = React.forwardRef(function Collapsable(\n  { name, filter, component, disabled, staticRanges, inputRanges, ...rest },\n  ref,\n) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  return (\n    <Panel\n      header={(\n        <Title\n          name={name}\n          filter={filter}\n          component={Preview}\n          disabled={disabled}\n        />\n      )}\n      collapsed={collapsed}\n      setCollapsed={setCollapsed}\n    >\n      <SimpleDateRangeFilter\n        ref={ref}\n        name={name}\n        filter={filter}\n        component={component}\n        disabled={disabled}\n        collapsed={collapsed}\n        {...rest}\n      />\n    </Panel>\n  );\n});\n\nconst exported = React.memo(SimpleDateRangeFilter);\n\nexported.Preview = Preview;\nexported.Collapsable = Collapsable;\n\nexport default exported;\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,SAAS,gBAAgB;AAChC,SAAS,aAAa;AACtB,SAAS,UAAU,YAAY,cAAc;AAC7C,SAAS,mBAAmB,sBAAsB;AA8D9C;AAvDJ,IAAM,eAAe,EAAE,OAAO,KAAK;AAEnC,SAAS,gBAAgB,OAAO,IAAI;AAClC,MAAI,CAAC,MAAO,QAAO;AAEnB,QAAM,YAAY,KAAK,eAAe,EAAE,gBAAgB,EAAE;AAC1D,QAAM,SAAS,kBAAkB,IAAI,KAAK,IAAI,kBAAkB,WAAW,KAAK;AAEhF,MAAI,OAAO,IAAI,KAAK,KAAK;AAEzB,MAAI,QAAQ;AACV,WAAO,eAAe,MAAM,EAAE;AAAA,EAChC;AAEA,SAAO;AACT;AAGA,SAAS,YAAY,OAAO;AAC1B,MAAI,CAAC,OAAO;AACV,WAAO;AAAA,EACT;AAEA,QAAM,MAAM,gBAAgB,MAAM,KAAK,MAAM,EAAE;AAC/C,QAAM,MAAM,gBAAgB,MAAM,KAAK,MAAM,EAAE;AAE/C,SAAO;AAAA,IACL,KAAK,MAAM,OAAO,KAAK,YAAY,IAAI;AAAA,IACvC,KAAK,MAAM,OAAO,KAAK,YAAY,IAAI;AAAA,EACzC;AACF;AAGA,SAAS,WAAW,OAAO;AACzB,MAAI,CAAC,OAAO;AACV,WAAO;AAAA,EACT;AAEA,QAAM,MAAM,MAAM,MAAM,WAAW,IAAI,KAAK,MAAM,GAAG,CAAC,EAAE,YAAY,IAAI;AACxE,QAAM,MAAM,MAAM,MAAM,SAAS,IAAI,KAAK,MAAM,GAAG,CAAC,EAAE,YAAY,IAAI;AAEtE,QAAM,SAAS,CAAC;AAChB,MAAI,IAAK,QAAO,MAAM;AACtB,MAAI,IAAK,QAAO,MAAM;AAEtB,MAAI,OAAO,IAAK,QAAO,KAAK,KAAK,eAAe,EAAE,gBAAgB,EAAE;AAEpE,SAAO;AACT;AAEA,IAAM,wBAAwB,MAAM,WAAW,SAASA,uBACtD,EAAE,KAAK,GACP,KACA;AACA,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA;AAAA,EACb;AAEJ,CAAC;AAED,IAAM,cAAc,MAAM,WAAW,SAASC,aAC5C,EAAE,MAAM,QAAQ,WAAW,UAAU,cAAc,aAAa,GAAG,KAAK,GACxE,KACA;AACA,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,IAAI;AAE/C,SACE;AAAA,IAAC;AAAA;AAAA,MACC,QACE;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA,WAAW;AAAA,UACX;AAAA;AAAA,MACF;AAAA,MAEF;AAAA,MACA;AAAA,MAEA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACC,GAAG;AAAA;AAAA,MACN;AAAA;AAAA,EACF;AAEJ,CAAC;AAED,IAAM,WAAW,MAAM,KAAK,qBAAqB;AAEjD,SAAS,UAAU;AACnB,SAAS,cAAc;AAEvB,IAAO,gCAAQ;","names":["SimpleDateRangeFilter","Collapsable"]}