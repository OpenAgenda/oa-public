{"version":3,"sources":["../src/components/filters/DefinedRangeFilter.js"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport { Field, useField } from 'react-final-form';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { parseISO, endOfDay, isSameDay } from 'date-fns';\nimport DefinedRangePicker from '../fields/DefinedRangeField.js';\nimport Title from '../Title.js';\nimport Panel from '../Panel.js';\nimport FilterPreviewer from '../FilterPreviewer.js';\n\nconst messages = defineMessages({\n  singleDate: {\n    id: 'ReactFilters.DefinedRangeFilter.singleDate',\n    defaultMessage: '{date}',\n  },\n  dateRange: {\n    id: 'ReactFilters.DefinedRangeFilter.dateRange',\n    defaultMessage: 'From {startDate} to {endDate}',\n  },\n  startDate: {\n    id: 'ReactFilters.DefinedRangeFilter.startDate',\n    defaultMessage: 'Start',\n  },\n  endDate: {\n    id: 'ReactFilters.DefinedRangeFilter.endDate',\n    defaultMessage: 'End',\n  },\n  until: {\n    id: 'ReactFilters.DefinedRangeFilter.until',\n    defaultMessage: 'Until {date}',\n  },\n  from: {\n    id: 'ReactFilters.DefinedRangeFilter.from',\n    defaultMessage: 'From {date}',\n  },\n});\n\nconst subscription = { value: true };\n\n// For display (store -> form)\nfunction formatValue(value) {\n  if (value === undefined) {\n    return [\n      {\n        startDate: null,\n        endDate: null,\n        key: 'selection',\n      },\n    ];\n  }\n\n  if (Array.isArray(value)) {\n    return value.map((v) => ({\n      ...v,\n      startDate: typeof v.gte === 'string' ? parseISO(v.gte) : v.gte,\n      endDate: typeof v.lte === 'string' ? parseISO(v.lte) : v.lte,\n    }));\n  }\n\n  if (typeof value === 'object') {\n    return [\n      {\n        startDate:\n          typeof value.gte === 'string' ? parseISO(value.gte) : value.gte,\n        endDate:\n          typeof value.lte === 'string' ? parseISO(value.lte) : value.lte,\n        key: 'selection',\n      },\n    ];\n  }\n\n  return value;\n}\n\n// For save (form -> store)\nfunction parseValue(value) {\n  if (!value) {\n    return value;\n  }\n\n  const [selection] = value;\n\n  if (selection.startDate === null && selection.endDate === null) {\n    return undefined;\n  }\n\n  return {\n    gte: selection.startDate.toISOString(),\n    lte: (selection.endDate\n      ? endOfDay(selection.endDate)\n      : selection.endDate\n    ).toISOString(),\n    tz: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  };\n}\n\nfunction Preview({\n  name,\n  staticRanges = [],\n  component = FilterPreviewer,\n  disabled,\n  ...rest\n}) {\n  const intl = useIntl();\n  const { input } = useField(name, {\n    subscription,\n    parse: parseValue,\n    format: formatValue,\n  });\n  const value = input.value?.[0];\n\n  const selectedStaticRange = useMemo(\n    () => value && staticRanges.find((v) => v.isSelected(value)),\n    [value, staticRanges],\n  );\n\n  const singleDay = useMemo(\n    () =>\n      value?.startDate\n      && value?.endDate\n      && isSameDay(value.startDate, value.endDate),\n    [value],\n  );\n\n  const onRemove = useCallback(\n    (e) => {\n      e.stopPropagation();\n\n      if (disabled) {\n        return;\n      }\n\n      input.onChange(undefined);\n    },\n    [input, disabled],\n  );\n\n  let label;\n\n  if (!value?.startDate && !value?.endDate) {\n    return null;\n  }\n\n  if (selectedStaticRange) {\n    label = selectedStaticRange.label;\n  } else if (value.startDate === null) {\n    label = intl.formatMessage(messages.until, { date: value.endDate });\n  } else if (value.endDate === null) {\n    label = intl.formatMessage(messages.from, { date: value.startDate });\n  } else {\n    label = singleDay\n      ? intl.formatMessage(messages.singleDate, { date: value.startDate })\n      : intl.formatMessage(messages.dateRange, {\n        startDate: value.startDate,\n        endDate: value.endDate,\n      });\n  }\n\n  return React.createElement(component, {\n    name,\n    staticRanges,\n    label,\n    onRemove,\n    disabled,\n    ...rest,\n  });\n}\n\nconst DefinedRangeFilter = React.forwardRef(function DefinedRangeFilter(\n  { name, staticRanges, inputRanges },\n  ref,\n) {\n  return (\n    <Field\n      ref={ref}\n      name={name}\n      subscription={subscription}\n      parse={parseValue}\n      format={formatValue}\n      component={DefinedRangePicker}\n      staticRanges={staticRanges}\n      inputRanges={inputRanges}\n    />\n  );\n});\n\nconst Collapsable = React.forwardRef(function Collapsable(\n  { name, filter, component, disabled, staticRanges, inputRanges, ...rest },\n  ref,\n) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  return (\n    <Panel\n      header={(\n        <Title\n          name={name}\n          filter={filter}\n          component={Preview}\n          staticRanges={staticRanges}\n          disabled={disabled}\n        />\n      )}\n      collapsed={collapsed}\n      setCollapsed={setCollapsed}\n    >\n      <DefinedRangeFilter\n        ref={ref}\n        name={name}\n        filter={filter}\n        component={component}\n        staticRanges={staticRanges}\n        inputRanges={inputRanges}\n        disabled={disabled}\n        collapsed={collapsed}\n        {...rest}\n      />\n    </Panel>\n  );\n});\n\nconst exported = React.memo(DefinedRangeFilter);\n\n// React.memo lose statics\nexported.Preview = Preview;\nexported.Collapsable = Collapsable;\n\nexport default exported;\n"],"mappings":"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","names":["DefinedRangeFilter","Collapsable"]}