{"version":3,"sources":["../../../src/components/filters/FavoritesFilter.js","../../../src/utils/matchQuery.js","../../../src/utils/updateFormValues.js","../../../src/utils/updateCustomFilter.js","../../../src/hooks/useFilterTitle.js","../../../src/utils/getFilterTitle.js","../../../src/messages/filterTitles.js","../../../src/components/ValueBadge.js","../../../src/components/FilterPreviewer.js","../../../src/hooks/useFavoritesOnChange.js","../../../src/hooks/useFavoriteState.js","../../../src/hooks/index.js"],"sourcesContent":["import React, { useMemo, useCallback, useEffect, useRef } from 'react';\nimport { useForm, FormSpy } from 'react-final-form';\nimport useLatestModule from 'react-use/lib/useLatest.js';\nimport a11yButtonActionHandler from '@openagenda/react-shared/dist/utils/a11yButtonActionHandler.js';\nimport matchQuery from '../../utils/matchQuery.js';\nimport updateFormValues from '../../utils/updateFormValues.js';\nimport updateCustomFilter from '../../utils/updateCustomFilter.js';\nimport { useFavoriteState } from '../../hooks/index.js';\nimport FilterPreviewer from '../FilterPreviewer.js';\nimport useFavoritesOnChange from '../../hooks/useFavoritesOnChange.js';\n\nconst useLatest = useLatestModule.default || useLatestModule;\n\nconst subscription = { values: true };\n\nfunction Preview({\n  name = 'favorites',\n  filter,\n  component = FilterPreviewer,\n  disabled,\n  activeFilterLabel,\n  agendaUid,\n  ...rest\n}) {\n  const form = useForm();\n  const [value] = useFavoriteState(filter.agendaUid || agendaUid);\n\n  const onRemove = useCallback(\n    (e) => {\n      e.stopPropagation();\n\n      if (disabled) {\n        return;\n      }\n\n      updateFormValues(\n        form,\n        {\n          uid: undefined,\n          favorites: undefined,\n        },\n        false,\n      );\n\n      const handlerElem = filter.handlerElem || filter.elem;\n      const innerCheckboxes = handlerElem.querySelectorAll(\n        'input[type=\"checkbox\"]',\n      );\n\n      if (innerCheckboxes.length === 1 && !filter.handlerElem) {\n        innerCheckboxes[0].checked = false;\n      }\n    },\n    [disabled, form, filter],\n  );\n\n  return (\n    <FormSpy subscription={subscription}>\n      {({ values }) => {\n        const query = {\n          uid: value,\n          favorites: '1',\n        };\n\n        if (!matchQuery(values, query) || !activeFilterLabel) {\n          return null;\n        }\n\n        return React.createElement(component, {\n          name,\n          label: activeFilterLabel,\n          onRemove,\n          disabled,\n          filter,\n          ...rest,\n        });\n      }}\n    </FormSpy>\n  );\n}\n\n// Favorite + uid\nconst FavoritesFilter = React.forwardRef(function FavoritesFilter(\n  { agendaUid, filter },\n  _ref,\n) {\n  const form = useForm();\n  const firstRender = useRef(true);\n  const [value] = useFavoriteState(filter.agendaUid || agendaUid);\n\n  const latestValue = useLatest(value);\n\n  const updateForm = useFavoritesOnChange(value, {\n    isExclusive: filter.exclusive,\n  });\n\n  const onChange = useMemo(\n    () => a11yButtonActionHandler(updateForm),\n    [updateForm],\n  );\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n\n      const query = form.getState().values;\n      const registeredFields = form.getRegisteredFields();\n\n      if (!registeredFields.includes('uid')) {\n        form.registerField(\n          'uid',\n          () => {},\n          { value: true },\n          {\n            initialValue: query.uid,\n          },\n        );\n      }\n\n      if (!registeredFields.includes('favorites')) {\n        form.registerField(\n          'favorites',\n          () => {},\n          { value: true },\n          {\n            initialValue: query.favorites,\n          },\n        );\n      }\n    }\n\n    const handlerElem = filter.handlerElem || filter.elem;\n    const innerCheckboxes = handlerElem.querySelectorAll(\n      'input[type=\"checkbox\"]',\n    );\n\n    const handlerIsLabelWithCheckbox = innerCheckboxes.length === 1\n      && handlerElem.tagName === 'LABEL'\n      && handlerElem.contains(innerCheckboxes[0]);\n\n    if (\n      innerCheckboxes.length === 1\n      && (!filter.handlerElem || handlerIsLabelWithCheckbox)\n    ) {\n      innerCheckboxes[0].addEventListener('change', updateForm, false);\n    } else {\n      handlerElem.addEventListener('click', onChange, false);\n    }\n\n    handlerElem.addEventListener('keydown', onChange, false);\n\n    const unsubscribe = form.subscribe(\n      ({ values }) =>\n        updateCustomFilter(\n          filter,\n          matchQuery(values, {\n            uid: latestValue.current || ['-1'],\n            favorites: '1',\n          }),\n        ),\n      { values: true },\n    );\n\n    return () => {\n      if (\n        innerCheckboxes.length === 1\n        && (!filter.handlerElem || handlerIsLabelWithCheckbox)\n      ) {\n        innerCheckboxes[0].removeEventListener('change', updateForm, false);\n      } else {\n        handlerElem.removeEventListener('click', onChange, false);\n      }\n\n      handlerElem.removeEventListener('keydown', onChange, false);\n\n      unsubscribe();\n    };\n  }, [filter, form, latestValue, onChange, updateForm]);\n\n  return null;\n});\n\nconst exported = React.memo(FavoritesFilter);\n\n// React.memo lose statics\nexported.Preview = Preview;\n\nexport default exported;\n","import isMatch from 'lodash/isMatch.js';\nimport omitBy from 'lodash/omitBy.js';\nimport isEmpty from 'lodash/isEmpty.js';\n\nexport default function matchQuery(a, b) {\n  return isMatch(omitBy(a, isEmpty), omitBy(b, isEmpty));\n}\n","export default function updateFormValues(form, query, active = true) {\n  form.batch(() => {\n    for (const key in query) {\n      if (Object.prototype.hasOwnProperty.call(query, key)) {\n        if (active) {\n          form.change(key, query[key]);\n        } else {\n          form.change(key, undefined);\n        }\n      }\n    }\n  });\n}\n","export default function updateCustomFilter(filter, active) {\n  const activeClass = filter.activeClass || 'active';\n  const inactiveClass = filter.inactiveClass || 'inactive';\n  const { classList } = filter.activeTargetElem || filter.elem;\n\n  const handlerElem = filter.handlerElem || filter.elem;\n  const innerCheckboxes = handlerElem.querySelectorAll(\n    'input[type=\"checkbox\"]',\n  );\n  const checkbox = innerCheckboxes.length === 1 ? innerCheckboxes[0] : null;\n\n  if (active) {\n    if (classList.contains(inactiveClass)) classList.remove(inactiveClass);\n    if (!classList.contains(activeClass)) classList.add(activeClass);\n    if (checkbox && !checkbox.checked) checkbox.checked = true;\n  } else {\n    if (classList.contains(activeClass)) classList.remove(activeClass);\n    if (!classList.contains(inactiveClass)) classList.add(inactiveClass);\n    if (checkbox && checkbox.checked) checkbox.checked = false;\n  }\n}\n","import { useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { getFilterTitle } from '../utils/index.js';\n\nexport default function useFilterTitle(messageKey, fieldSchema, messages) {\n  const intl = useIntl();\n\n  return useMemo(\n    () => getFilterTitle(intl, messages, messageKey, fieldSchema),\n    [intl, messages, messageKey, fieldSchema],\n  );\n}\n","import { getLocaleValue } from '@openagenda/intl';\nimport defaultMessages from '../messages/filterTitles.js';\n\nexport default function getFilterTitle(\n  intl,\n  providedMessages,\n  messageKey,\n  fieldSchema,\n) {\n  const messages = providedMessages ?? defaultMessages;\n\n  if (fieldSchema?.label) {\n    return getLocaleValue(fieldSchema.label, intl.locale);\n  }\n\n  if (messages[messageKey]) {\n    return intl.formatMessage(messages[messageKey]);\n  }\n\n  return messageKey;\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  geo: {\n    id: 'ReactFilters.messages.filterTitles.geo',\n    defaultMessage: 'Map',\n  },\n  search: {\n    id: 'ReactFilters.messages.filterTitles.search',\n    defaultMessage: 'Search',\n  },\n  addMethod: {\n    id: 'ReactFilters.messages.filterTitles.addMethod',\n    defaultMessage: 'Provenance',\n  },\n  memberUid: {\n    id: 'ReactFilters.messages.filterTitles.memberUid',\n    defaultMessage: 'Member',\n  },\n  locationUid: {\n    id: 'ReactFilters.messages.filterTitles.locationUid',\n    defaultMessage: 'Location',\n  },\n  sourceAgendaUid: {\n    id: 'ReactFilters.messages.filterTitles.sourceAgendaUid',\n    defaultMessage: 'Source agenda',\n  },\n  originAgendaUid: {\n    id: 'ReactFilters.messages.filterTitles.originAgendaUid',\n    defaultMessage: 'Origin agenda',\n  },\n  featured: {\n    id: 'ReactFilters.messages.filterTitles.featured',\n    defaultMessage: 'Featured',\n  },\n  relative: {\n    id: 'ReactFilters.messages.filterTitles.relative',\n    defaultMessage: 'Passed / current / upcoming',\n  },\n  region: {\n    id: 'ReactFilters.messages.filterTitles.region',\n    defaultMessage: 'Region',\n  },\n  department: {\n    id: 'ReactFilters.messages.filterTitles.department',\n    defaultMessage: 'Department',\n  },\n  countryCode: {\n    id: 'ReactFilters.messages.filterTitles.countryCode',\n    defaultMessage: 'Country',\n  },\n  city: {\n    id: 'ReactFilters.messages.filterTitles.city',\n    defaultMessage: 'City',\n  },\n  adminLevel3: {\n    id: 'ReactFilters.messages.filterTitles.adminLevel3',\n    defaultMessage: 'Administrative level 3',\n  },\n  timings: {\n    id: 'ReactFilters.messages.filterTitles.timings',\n    defaultMessage: 'Date',\n  },\n  createdAt: {\n    id: 'ReactFilters.messages.filterTitles.createdAt',\n    defaultMessage: 'Creation date',\n  },\n  updatedAt: {\n    id: 'ReactFilters.messages.filterTitles.updatedAt',\n    defaultMessage: 'Date of update',\n  },\n  keyword: {\n    id: 'ReactFilters.messages.filterTitles.keyword',\n    defaultMessage: 'Keywords',\n  },\n  state: {\n    id: 'ReactFilters.messages.filterTitles.state',\n    defaultMessage: 'State',\n  },\n  attendanceMode: {\n    id: 'ReactFilters.messages.filterTitles.attendanceMode',\n    defaultMessage: 'Attendance mode',\n  },\n  status: {\n    id: 'ReactFilters.messages.filterTitles.status',\n    defaultMessage: 'Status',\n  },\n  district: {\n    id: 'ReactFilters.messages.filterTitles.district',\n    defaultMessage: 'District',\n  },\n  accessibility: {\n    id: 'ReactFilters.messages.filterTitles.accessibility',\n    defaultMessage: 'Accessibility',\n  },\n  languages: {\n    id: 'ReactFilters.messages.filterTitles.languages',\n    defaultMessage: 'Languages',\n  },\n});\n","import classNames from 'classnames';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { css } from '@emotion/react';\nimport { getLocaleValue } from '@openagenda/intl';\n\nconst messages = defineMessages({\n  removeFilter: {\n    id: 'ReactFilters.ValueBadge.removeFilter',\n    defaultMessage: 'Remove filter',\n  },\n  removeFilterWithTitle: {\n    id: 'ReactFilters.ValueBadge.removeFilterWithTitle',\n    defaultMessage: 'Remove filter ({title})',\n  },\n});\n\nexport default function ValueBadge({ label, title, onRemove, disabled }) {\n  const intl = useIntl();\n\n  const titleLabel = title?.length\n    ? intl.formatMessage(messages.removeFilterWithTitle, { title })\n    : intl.formatMessage(messages.removeFilter);\n\n  return (\n    <button\n      type=\"button\"\n      title={titleLabel}\n      className={classNames('btn badge badge-pill badge-info margin-right-xs', {\n        disabled,\n      })}\n      css={css`\n        line-height: 18px;\n        padding-top: 0;\n        padding-bottom: 0;\n\n        :hover {\n          color: #da4453;\n          border-color: #d43f3a;\n        }\n      `}\n      // disabled={disabled}\n      onClick={onRemove}\n    >\n      {getLocaleValue(label, intl.locale)}\n      &nbsp;\n      <i className=\"fa fa-times\" aria-hidden=\"true\" />\n    </button>\n  );\n}\n","import useFilterTitle from '../hooks/useFilterTitle.js';\nimport ValueBadge from './ValueBadge.js';\n\nexport default function FilterPreviewer({\n  withTitle = true,\n  name,\n  filter,\n  label,\n  valueOptions,\n  onRemove,\n  disabled,\n  className,\n}) {\n  const title = useFilterTitle(name, filter.fieldSchema);\n\n  // multi\n  if (valueOptions?.length) {\n    return (\n      <>\n        {valueOptions.map((option) => (\n          <span key={option.value} className={className}>\n            <ValueBadge\n              label={option.label}\n              onRemove={onRemove(option)}\n              disabled={disabled}\n              title={withTitle ? title : null}\n            />\n          </span>\n        ))}\n      </>\n    );\n  }\n\n  // single\n  if (label) {\n    return (\n      <span className={className}>\n        <ValueBadge\n          label={label}\n          onRemove={onRemove}\n          disabled={disabled}\n          title={withTitle ? title : null}\n        />\n      </span>\n    );\n  }\n\n  return null;\n}\n","import { useCallback } from 'react';\nimport { useForm } from 'react-final-form';\nimport matchQuery from '../utils/matchQuery.js';\nimport updateFormValues from '../utils/updateFormValues.js';\n\nexport default function useFavoritesOnChange(eventUids, { isExclusive } = {}) {\n  const form = useForm();\n\n  return useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const query = form.getState().values;\n\n      const matchingQuery = {\n        uid: eventUids?.length ? eventUids.map(String) : ['-1'],\n        favorites: '1',\n      };\n\n      const isMatchQuery = matchQuery(query, matchingQuery);\n\n      const newQuery = isExclusive && !isMatchQuery\n        ? form.getRegisteredFields().reduce((accu, next) => {\n          if (next in matchingQuery) {\n            accu[next] = matchingQuery[next];\n            return accu;\n          }\n\n          accu[next] = undefined;\n\n          return accu;\n        }, {})\n        : matchingQuery;\n\n      // Without favorites in store\n      if (!newQuery.uid?.length) {\n        newQuery.uid = ['-1'];\n      }\n\n      updateFormValues(form, newQuery, !isMatchQuery);\n    },\n    [isExclusive, form, eventUids],\n  );\n}\n","import { useCallback } from 'react';\nimport { createLocalStorageStateHook } from 'use-local-storage-state';\n\nconst useFavoriteLocalStorageState = createLocalStorageStateHook('favorite-events');\n\nexport default function useFavoriteState(agendaUid) {\n  const [value, setValue] = useFavoriteLocalStorageState();\n\n  const setAgendaValue = useCallback(\n    (fnOrValue) => {\n      if (typeof fnOrValue === 'function') {\n        setValue((prev) => ({\n          ...prev,\n          [agendaUid]: fnOrValue(prev?.[agendaUid]),\n        }));\n      } else {\n        setValue((prev) => ({\n          ...prev,\n          [agendaUid]: fnOrValue,\n        }));\n      }\n    },\n    [setValue, agendaUid],\n  );\n\n  return [value?.[agendaUid], setAgendaValue];\n}\n","export { default as useActiveFilters } from './useActiveFilters.js';\nexport { default as useChoiceState } from './useChoiceState.js';\nexport { default as useFavoritesOnChange } from './useFavoritesOnChange.js';\nexport { default as useFavoriteState } from './useFavoriteState.js';\nexport { default as useFilters } from './useFilters.js';\nexport { default as useFilterTitle } from './useFilterTitle.js';\nexport { default as useGetFilterOptions } from './useGetFilterOptions.js';\nexport { default as useGetTotal } from './useGetTotal.js';\nexport { default as useLoadGeoData } from './useLoadGeoData.js';\nexport { default as useLoadTimingsData } from './useLoadTimingsData.js';\n\nexport { useField, useForm } from 'react-final-form';\n"],"mappings":"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","names":["import_react","import_react_final_form","isMatch","omitBy","isEmpty","import_react_intl","messages","messages","import_react_intl","import_react","import_intl","classNames","import_jsx_runtime","import_react","import_react","import_react_final_form","import_jsx_runtime","useLatestModule","React","FavoritesFilter","a11yButtonActionHandler"]}