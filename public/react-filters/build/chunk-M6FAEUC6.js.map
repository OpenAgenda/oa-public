{"version":3,"sources":["../src/api/getEvents.js"],"sourcesContent":["import qs from 'qs';\nimport filtersToAggregations from '../utils/filtersToAggregations.js';\nimport getQuerySeparator from '../utils/getQuerySeparator.js';\n\nexport default async function getEvents(\n  _apiClient,\n  jsonExportRes,\n  agenda,\n  filters,\n  query,\n  pageParam,\n  filtersBase,\n  pageSize = 20,\n  searchMethod = 'get',\n) {\n  const params = {\n    aggsSizeLimit: 1500,\n    aggs: filtersToAggregations(filters, filtersBase),\n    from: pageParam > 1 ? (pageParam - 1) * pageSize : undefined,\n    ...query,\n  };\n\n  const url = jsonExportRes\n    .replace(':slug', agenda.slug)\n    .replace(':uid', agenda.uid);\n\n  const p = searchMethod === 'get'\n    ? fetch(\n      `${url}${getQuerySeparator(url)}${qs.stringify(params, {\n        skipNulls: true,\n      })}`,\n    )\n    : fetch(url, {\n      method: 'post',\n      body: JSON.stringify(params),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n  return p.then((r) => {\n    if (r.ok) return r.json();\n    throw new Error(\"Can't list events\");\n  });\n}\n"],"mappings":";;;;;;;;AAAA,OAAO,QAAQ;AAIf,eAAO,UACL,YACA,eACA,QACA,SACA,OACA,WACA,aACA,WAAW,IACX,eAAe,OACf;AACA,QAAM,SAAS;AAAA,IACb,eAAe;AAAA,IACf,MAAM,sBAAsB,SAAS,WAAW;AAAA,IAChD,MAAM,YAAY,KAAK,YAAY,KAAK,WAAW;AAAA,IACnD,GAAG;AAAA,EACL;AAEA,QAAM,MAAM,cACT,QAAQ,SAAS,OAAO,IAAI,EAC5B,QAAQ,QAAQ,OAAO,GAAG;AAE7B,QAAM,IAAI,iBAAiB,QACvB;AAAA,IACA,GAAG,GAAG,GAAG,kBAAkB,GAAG,CAAC,GAAG,GAAG,UAAU,QAAQ;AAAA,MACrD,WAAW;AAAA,IACb,CAAC,CAAC;AAAA,EACJ,IACE,MAAM,KAAK;AAAA,IACX,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU,MAAM;AAAA,IAC3B,SAAS;AAAA,MACP,gBAAgB;AAAA,IAClB;AAAA,EACF,CAAC;AAEH,SAAO,EAAE,KAAK,CAAC,MAAM;AACnB,QAAI,EAAE,GAAI,QAAO,EAAE,KAAK;AACxB,UAAM,IAAI,MAAM,mBAAmB;AAAA,EACrC,CAAC;AACH;","names":[]}