{"version":3,"sources":["../src/components/Sort.js"],"sourcesContent":["import { useMemo, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, useForm } from 'react-final-form';\nimport { OnChange } from 'react-final-form-listeners';\nimport ReactSelectField from '@openagenda/react-shared/dist/components/ReactSelectField.js';\n\nconst { defaultStyles: defaultReactSelectStyles } = ReactSelectField;\n\nconst messages = defineMessages({\n  relevance: {\n    id: 'ReactFilters.Sort.relevance',\n    defaultMessage: 'Relevance',\n  },\n  chronological: {\n    id: 'ReactFilters.Sort.chronological',\n    defaultMessage: 'Chronological order',\n  },\n  recentlyUpdated: {\n    id: 'ReactFilters.Sort.recentlyUpdated',\n    defaultMessage: 'Recently updated',\n  },\n  publicView: {\n    id: 'ReactFilters.Sort.publicView',\n    defaultMessage: 'Public view',\n  },\n});\n\nconst stateSelectStyles = {\n  ...defaultReactSelectStyles,\n  container: (provided) => ({\n    ...provided,\n    display: 'inline-block',\n    width: '180px',\n  }),\n  control: (provided, state) => ({\n    ...defaultReactSelectStyles.control(provided, state),\n    cursor: 'pointer',\n  }),\n  valueContainer: (provided, state) => ({\n    ...defaultReactSelectStyles.valueContainer(provided, state),\n    padding: '0 4px',\n  }),\n  option: (provided) => ({\n    ...provided,\n    cursor: 'pointer',\n  }),\n};\n\nconst defaultOptions = ['score', 'timings.asc', 'updatedAt.desc'];\n\nexport default function Sort({ options = defaultOptions }) {\n  const intl = useIntl();\n  const form = useForm();\n\n  const [userSort, setUserSort] = useState(() => form.getState().values.sort);\n\n  const orderOptions = useMemo(\n    () =>\n      [\n        {\n          label: intl.formatMessage(messages.relevance),\n          value: 'score',\n          // isDisabled: true\n        },\n        {\n          label: intl.formatMessage(messages.chronological),\n          value: 'timings.asc',\n        },\n        {\n          label: intl.formatMessage(messages.recentlyUpdated),\n          value: 'updatedAt.desc',\n        },\n        {\n          label: intl.formatMessage(messages.publicView),\n          value: 'lastTimingWithFeatured.asc',\n        },\n      ].filter((option) => options.includes(option.value)),\n    [intl, options],\n  );\n\n  return (\n    <>\n      <ReactSelectField\n        Field={Field}\n        name=\"sort\"\n        options={orderOptions}\n        styles={stateSelectStyles}\n        isSearchable={false}\n        isClearable={false}\n        defaultValue=\"updatedAt.desc\"\n      />\n      <OnChange name=\"sort\">\n        {(value) => {\n          // user change\n          if (form.getState().active === 'sort') {\n            setUserSort(value);\n          }\n        }}\n      </OnChange>\n      <OnChange name=\"search\">\n        {(value, previousValue) => {\n          const { sort } = form.getState().values;\n\n          if (previousValue === '' && value !== '') {\n            // search added\n            setUserSort(sort);\n            form.change('sort', 'score');\n          } else if (sort === 'score' && previousValue !== '' && value === '') {\n            // search removed\n            form.change(\n              'sort',\n              userSort && userSort !== '' ? userSort : undefined,\n            );\n          }\n        }}\n      </OnChange>\n    </>\n  );\n}\n"],"mappings":";AAAA,SAAS,SAAS,gBAAgB;AAClC,SAAS,gBAAgB,eAAe;AACxC,SAAS,OAAO,eAAe;AAC/B,SAAS,gBAAgB;AACzB,OAAO,sBAAsB;AA6EzB,mBACE,KADF;AA3EJ,IAAM,EAAE,eAAe,yBAAyB,IAAI;AAEpD,IAAM,WAAW,eAAe;AAAA,EAC9B,WAAW;AAAA,IACT,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB;AAAA,EACA,eAAe;AAAA,IACb,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB;AAAA,EACA,iBAAiB;AAAA,IACf,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB;AAAA,EACA,YAAY;AAAA,IACV,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB;AACF,CAAC;AAED,IAAM,oBAAoB;AAAA,EACxB,GAAG;AAAA,EACH,WAAW,CAAC,cAAc;AAAA,IACxB,GAAG;AAAA,IACH,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,SAAS,CAAC,UAAU,WAAW;AAAA,IAC7B,GAAG,yBAAyB,QAAQ,UAAU,KAAK;AAAA,IACnD,QAAQ;AAAA,EACV;AAAA,EACA,gBAAgB,CAAC,UAAU,WAAW;AAAA,IACpC,GAAG,yBAAyB,eAAe,UAAU,KAAK;AAAA,IAC1D,SAAS;AAAA,EACX;AAAA,EACA,QAAQ,CAAC,cAAc;AAAA,IACrB,GAAG;AAAA,IACH,QAAQ;AAAA,EACV;AACF;AAEA,IAAM,iBAAiB,CAAC,SAAS,eAAe,gBAAgB;AAEjD,SAAR,KAAsB,EAAE,UAAU,eAAe,GAAG;AACzD,QAAM,OAAO,QAAQ;AACrB,QAAM,OAAO,QAAQ;AAErB,QAAM,CAAC,UAAU,WAAW,IAAI,SAAS,MAAM,KAAK,SAAS,EAAE,OAAO,IAAI;AAE1E,QAAM,eAAe;AAAA,IACnB,MACE;AAAA,MACE;AAAA,QACE,OAAO,KAAK,cAAc,SAAS,SAAS;AAAA,QAC5C,OAAO;AAAA;AAAA,MAET;AAAA,MACA;AAAA,QACE,OAAO,KAAK,cAAc,SAAS,aAAa;AAAA,QAChD,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,OAAO,KAAK,cAAc,SAAS,eAAe;AAAA,QAClD,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,OAAO,KAAK,cAAc,SAAS,UAAU;AAAA,QAC7C,OAAO;AAAA,MACT;AAAA,IACF,EAAE,OAAO,CAAC,WAAW,QAAQ,SAAS,OAAO,KAAK,CAAC;AAAA,IACrD,CAAC,MAAM,OAAO;AAAA,EAChB;AAEA,SACE,iCACE;AAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,MAAK;AAAA,QACL,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,aAAa;AAAA,QACb,cAAa;AAAA;AAAA,IACf;AAAA,IACA,oBAAC,YAAS,MAAK,QACZ,WAAC,UAAU;AAEV,UAAI,KAAK,SAAS,EAAE,WAAW,QAAQ;AACrC,oBAAY,KAAK;AAAA,MACnB;AAAA,IACF,GACF;AAAA,IACA,oBAAC,YAAS,MAAK,UACZ,WAAC,OAAO,kBAAkB;AACzB,YAAM,EAAE,KAAK,IAAI,KAAK,SAAS,EAAE;AAEjC,UAAI,kBAAkB,MAAM,UAAU,IAAI;AAExC,oBAAY,IAAI;AAChB,aAAK,OAAO,QAAQ,OAAO;AAAA,MAC7B,WAAW,SAAS,WAAW,kBAAkB,MAAM,UAAU,IAAI;AAEnE,aAAK;AAAA,UACH;AAAA,UACA,YAAY,aAAa,KAAK,WAAW;AAAA,QAC3C;AAAA,MACF;AAAA,IACF,GACF;AAAA,KACF;AAEJ;","names":[]}