{"version":3,"sources":["../src/components/filters/TimelineFilter.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, useField } from 'react-final-form';\nimport { endOfDay, isSameDay, parseISO } from 'date-fns';\nimport { getTimezoneOffset, utcToZonedTime } from 'date-fns-tz';\nimport FilterPreviewer from '../FilterPreviewer.js';\nimport TimelineField from '../fields/TimelineField.js';\n\nconst messages = defineMessages({\n  dateRange: {\n    id: 'ReactFilters.TimelineFilter.dateRange',\n    defaultMessage: 'From {startDate} to {endDate}',\n  },\n  until: {\n    id: 'ReactFilters.TimelineFilter.until',\n    defaultMessage: 'Until {date}',\n  },\n  from: {\n    id: 'ReactFilters.TimelineFilter.from',\n    defaultMessage: 'From {date}',\n  },\n});\n\nconst subscription = { value: true };\n\nfunction formatDateValue(value) {\n  if (!value || value === '') {\n    return null;\n  }\n\n  return typeof value === 'string' ? parseISO(value) : value;\n}\n\n// For display (store -> form)\nexport function formatValue(value) {\n  if (!value || !Array.isArray(value)) {\n    return [];\n  }\n\n  const currentTz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const tzFromStore = value[0].tz ?? currentTz;\n\n  return value.map(({ gte, lte }) => {\n    const start = formatDateValue(gte);\n    const end = formatDateValue(lte);\n    const tzDiff = getTimezoneOffset(tzFromStore, start ?? end ?? new Date())\n      - getTimezoneOffset(currentTz, start ?? end ?? new Date());\n\n    const convert = (d) => (tzDiff && d ? utcToZonedTime(d, tzFromStore) : d);\n\n    return {\n      startDate: convert(start),\n      endDate: convert(end),\n    };\n  });\n}\n\n// For save (form -> store)\nfunction parseValue(value) {\n  if (!value.length) {\n    return undefined;\n  }\n\n  const toStoreObj = ({ startDate, endDate }) => {\n    const start = formatDateValue(startDate);\n    const end = endDate ? endOfDay(formatDateValue(endDate)) : null;\n    return { gte: start, lte: end };\n  };\n\n  const result = value.map(toStoreObj);\n\n  if (result.length) {\n    result[0].tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  return result.length ? result : undefined;\n}\n\nexport function Preview({\n  name,\n  component = FilterPreviewer,\n  disabled,\n  ...rest\n}) {\n  const intl = useIntl();\n  const { input } = useField(name, { subscription });\n  const ranges = formatValue(input.value);\n\n  const firstRange = ranges[0];\n  const lastRange = ranges[ranges.length - 1];\n\n  const begin = firstRange.startDate;\n  const end = lastRange.endDate;\n\n  const singleDay = begin && end && isSameDay(begin, end);\n\n  const onRemove = useCallback(\n    (e) => {\n      e.stopPropagation();\n      if (!disabled) input.onChange(undefined);\n    },\n    [input, disabled],\n  );\n\n  const fmt = (d) => intl.formatDate(d);\n\n  if (!ranges.length) return null;\n\n  let label;\n  if (!begin && !end) return null;\n  if (begin && !end) {\n    label = intl.formatMessage(messages.from, { date: fmt(begin) });\n  } else if (!begin && end) {\n    label = intl.formatMessage(messages.until, { date: fmt(end) });\n  } else {\n    label = singleDay\n      ? fmt(begin)\n      : intl.formatMessage(messages.dateRange, {\n        startDate: fmt(begin),\n        endDate: fmt(end),\n      });\n  }\n\n  return React.createElement(component, {\n    name,\n    label,\n    onRemove,\n    disabled,\n    ...rest,\n  });\n}\n\nconst TimelineFilter = React.forwardRef(function TimelineFilter(\n  { name, className, minDate, maxDate, shownDate, getQuery },\n  ref,\n) {\n  return (\n    <Field\n      ref={ref}\n      name={name}\n      subscription={subscription}\n      parse={parseValue}\n      format={formatValue}\n      component={TimelineField}\n      className={className}\n      minDate={minDate}\n      maxDate={maxDate}\n      shownDate={shownDate}\n      getQuery={getQuery}\n    />\n  );\n});\n\nconst exported = React.memo(TimelineFilter);\n\n// React.memo lose statics\nexported.Preview = Preview;\n\nexport default exported;\n"],"mappings":"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","names":["TimelineFilter"]}