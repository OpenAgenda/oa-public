{"version":3,"sources":["../src/components/fields/DateRangePicker.js"],"sourcesContent":["import isEqual from 'lodash/isEqual.js';\nimport isDate from 'lodash/isDate.js';\nimport React, {\n  useCallback,\n  useMemo,\n  useState,\n  useContext,\n  useEffect,\n  useRef,\n  useImperativeHandle,\n} from 'react';\nimport { useIntl } from 'react-intl';\nimport useIsomorphicLayoutEffectModule from 'react-use/lib/useIsomorphicLayoutEffect.js';\nimport useLatestModule from 'react-use/lib/useLatest.js';\nimport usePreviousModule from 'react-use/lib/usePrevious.js';\nimport cn from 'classnames';\nimport { startOfMonth, endOfMonth, isSameDay, format } from 'date-fns';\nimport dateFnsLocaleEN from 'date-fns/locale/en-US/index.js';\nimport { DateRange, DefinedRange } from '@openagenda/react-date-range';\nimport { getFallbackChain } from '@openagenda/intl';\nimport FiltersAndWidgetsContext from '../../contexts/FiltersAndWidgetsContext.js';\nimport convertPhpDateFormatToDateFns from '../../utils/convertPhpDateFormatToDateFns.js';\nimport useLoadTimingsData from '../../hooks/useLoadTimingsData.js';\n\nconst useIsomorphicLayoutEffect = useIsomorphicLayoutEffectModule.default || useIsomorphicLayoutEffectModule;\nconst useLatest = useLatestModule.default || useLatestModule;\nconst usePrevious = usePreviousModule.default || usePreviousModule;\n\nconst dateDisplayFormats = {\n  en: 'MMM d, yyyy', // Jan 1, 2024\n  fr: 'd MMM yyyy', // 1 janv. 2024\n  de: 'd. MMM yyyy', // 1. Jan. 2024\n  it: 'd MMM yyyy', // 1 gen 2024\n  es: 'd MMM yyyy', // 1 ene 2024\n};\n\nconst defaultGetInitialValue = () => [\n  {\n    startDate: null,\n    endDate: -1,\n    key: 'selection',\n  },\n];\n\nfunction normalizeValue(value) {\n  if (!value?.length) {\n    return value;\n  }\n\n  return value.map((v) => ({\n    startDate: isDate(v.startDate) ? v.startDate.getTime() : v.startDate,\n    endDate: isDate(v.endDate) ? v.endDate.getTime() : v.endDate,\n    key: v.key,\n  }));\n}\n\nfunction getDateDisplayFormat(dateFormatStyle, dateFormat, locale) {\n  if (dateFormat) {\n    return dateFormatStyle === 'php'\n      ? convertPhpDateFormatToDateFns(dateFormat)\n      : dateFormat;\n  }\n\n  const fallbackChain = getFallbackChain(locale);\n\n  for (const fallback of fallbackChain) {\n    if (dateDisplayFormats[fallback]) {\n      return dateDisplayFormats[fallback];\n    }\n  }\n\n  return dateDisplayFormats[Object.keys(dateDisplayFormats).shift()];\n}\n\nfunction focusedDateToTimingsQuery(focusedDate) {\n  return {\n    gte: startOfMonth(focusedDate),\n    lte: endOfMonth(focusedDate),\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  };\n}\n\nfunction DateRangePicker(\n  {\n    input,\n    meta,\n    staticRanges = [],\n    inputRanges = [],\n    rangeColor = '#41acdd',\n    disabled,\n    className,\n    dateFormatStyle,\n    dateFormat,\n    minDate,\n    maxDate,\n    shownDate,\n    getQuery,\n    ...otherProps\n  },\n  ref,\n) {\n  const intl = useIntl();\n\n  const dateRangeRef = useRef(null);\n\n  const [data, setData] = useState(() => []);\n\n  const {\n    filtersOptions: { dateFnsLocale, searchMethod, res },\n  } = useContext(FiltersAndWidgetsContext);\n\n  const [ranges, setRanges] = useState(\n    () => input.value ?? defaultGetInitialValue(),\n  );\n  const [dragStatus, setDragStatus] = useState(false);\n  const [focusedRange, setFocusedRange] = useState([0, 0]);\n\n  const latestRanges = useLatest(ranges);\n  const latestFocusedRange = useLatest(focusedRange);\n  const previousValue = usePrevious(input.value);\n\n  const { onChange } = input;\n\n  // Update state for re-calculate rdrNoSelection\n  const onSelectPreviewChange = useCallback(\n    (value) => {\n      const dateRange = dateRangeRef.current;\n\n      setDragStatus(dateRangeRef.current?.calendar.state.drag.status);\n      dateRange.updatePreview(value ? dateRange.calcNewSelection(value) : null);\n    },\n    [dateRangeRef],\n  );\n\n  const onDefinedPreviewChange = useCallback(\n    (value) => {\n      const dateRange = dateRangeRef.current;\n\n      return dateRange.updatePreview(\n        value\n          ? dateRange.calcNewSelection(value, typeof value === 'string')\n          : null,\n      );\n    },\n    [dateRangeRef],\n  );\n\n  const onTemporaryChange = useCallback(\n    (item) => {\n      const value = [item?.selection ? item.selection : item.range1];\n\n      setRanges(value);\n\n      if (\n        latestFocusedRange.current[0] === 0\n        && latestFocusedRange.current[1] === 0\n        && value[0].startDate.getTime() !== value[0].endDate.getTime()\n      ) {\n        onChange(value);\n      }\n\n      if (\n        latestFocusedRange.current[0] === 0\n        && latestFocusedRange.current[1] === 1\n      ) {\n        onChange(value);\n      }\n    },\n    [latestFocusedRange, onChange],\n  );\n\n  const onDefinedRangeChange = useCallback(\n    (item) => {\n      const value = [item?.selection ? item.selection : item.range1];\n\n      setRanges(value);\n      onChange(value);\n    },\n    [onChange],\n  );\n\n  const disabledDay = useCallback(() => disabled, [disabled]);\n\n  const rdrNoSelection = useMemo(() => {\n    const range = ranges?.[0];\n    const hasRange = range && range.endDate !== null;\n\n    return !hasRange && !dragStatus;\n  }, [ranges, dragStatus]);\n\n  const [focusedDate, setFocusedDate] = useState(null);\n\n  const loadTimingsData = useLoadTimingsData(res, getQuery, { searchMethod });\n\n  // If value change then update internal ranges\n  useIsomorphicLayoutEffect(() => {\n    if (\n      previousValue\n      && !isEqual(normalizeValue(input.value), normalizeValue(previousValue))\n      && !isEqual(\n        normalizeValue(input.value),\n        normalizeValue(latestRanges.current),\n      )\n    ) {\n      setRanges(input.value);\n    }\n  }, [input.value, previousValue, latestRanges, dateRangeRef, shownDate]);\n\n  const onShownDateChange = async (newFocusedDate) => {\n    if (input.name !== 'timings') {\n      return;\n    }\n\n    setFocusedDate(newFocusedDate);\n  };\n\n  // set focusedDate from calendar state\n  useIsomorphicLayoutEffect(() => {\n    if (input.name !== 'timings' || !dateRangeRef.current) {\n      return;\n    }\n\n    const newFocused = dateRangeRef.current.calendar?.state?.focusedDate;\n\n    if (focusedDate !== newFocused) {\n      setFocusedDate(newFocused);\n    }\n  }, [dateRangeRef, focusedDate, input.name]);\n\n  useEffect(() => {\n    if (!focusedDate) {\n      return;\n    }\n\n    loadTimingsData(\n      {\n        timings: focusedDateToTimingsQuery(focusedDate),\n      },\n      {\n        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n    )\n      .then((newData) => setData(newData ?? []))\n      .catch((err) => {\n        console.log('Failed to load timings data', err);\n      });\n  }, [focusedDate]);\n\n  useImperativeHandle(ref, () => ({\n    onQueryChange: () => {\n      if (focusedDate !== dateRangeRef.current.calendar?.state?.focusedDate) {\n        // will trigger the effect with loadTimingsData\n        setFocusedDate(dateRangeRef.current.calendar?.state?.focusedDate);\n      } else {\n        // same date but query can be changed\n        loadTimingsData(\n          {\n            timings: focusedDateToTimingsQuery(\n              dateRangeRef.current.calendar?.state?.focusedDate,\n            ),\n          },\n          {\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n          },\n        )\n          .then((newData) => setData(newData ?? []))\n          .catch((err) => {\n            console.log('Failed to load timings data', err);\n          });\n      }\n    },\n  }));\n\n  const dayContentRenderer = useCallback(\n    (day) => {\n      const isActive = data.find(\n        (d) => isSameDay(new Date(d.key), day) && d.timingCount > 0,\n      );\n      return (\n        <span\n          className={isActive ? 'rdrDayWithTimings' : 'rdrDayWithoutTimings'}\n        >\n          {format(day, 'd')}\n        </span>\n      );\n    },\n    [data],\n  );\n\n  const dateRangePickerProps = {\n    showSelectionPreview: true,\n    showMonthName: false,\n    moveRangeOnFirstSelection: false,\n    months: 1,\n    ranges,\n    direction: 'horizontal',\n    locale: dateFnsLocale || dateFnsLocaleEN,\n    staticRanges,\n    inputRanges,\n    focusedRange,\n    onRangeFocusChange: setFocusedRange,\n    rangeColors: [rangeColor],\n    minDate: minDate ? new Date(minDate) : undefined,\n    maxDate: maxDate ? new Date(maxDate) : undefined,\n    shownDate: shownDate ? new Date(shownDate) : undefined,\n    onShownDateChange,\n    dayContentRenderer,\n    ...otherProps,\n  };\n\n  return (\n    <div\n      className={cn('rdrDateRangePickerWrapper', className, { rdrNoSelection })}\n    >\n      <DateRange\n        onPreviewChange={onSelectPreviewChange}\n        onRangeFocusChange={setFocusedRange}\n        {...dateRangePickerProps}\n        onChange={onTemporaryChange}\n        ref={dateRangeRef}\n        className={undefined}\n        disabledDay={disabledDay}\n        dateDisplayFormat={getDateDisplayFormat(\n          dateFormatStyle,\n          dateFormat,\n          intl.locale,\n        )}\n      />\n      {staticRanges.length ? (\n        <DefinedRange\n          onPreviewChange={onDefinedPreviewChange}\n          {...dateRangePickerProps}\n          range={ranges[focusedRange[0]]}\n          onChange={onDefinedRangeChange}\n          className={undefined}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default React.forwardRef(DateRangePicker);\n"],"mappings":"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","names":[]}