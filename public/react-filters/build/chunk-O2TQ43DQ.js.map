{"version":3,"sources":["../src/utils/getFilterSelectOptions.js"],"sourcesContent":["import getFilters from './getFilters.js';\nimport getFilterTitle from './getFilterTitle.js';\n\nfunction truncate(label, length) {\n  if (label.length > length) {\n    return `${label.substr(0, length)}â€¦`;\n  }\n  return label;\n}\n\nfunction findMatchingField(schema, name) {\n  const isSubField = name.split(':').length > 1;\n\n  if (isSubField) {\n    const [fieldName, subField] = name.split(':');\n    return findMatchingField(\n      schema.fields.find((f) => f.field === fieldName).schema,\n      subField,\n    );\n  }\n\n  return (schema?.fields ?? []).find((f) => f.field === name);\n}\n\nexport default function getFilterSelectOptions(\n  intl,\n  schema = {},\n  exclude = [],\n) {\n  return getFilters(intl, schema?.fields ?? [])\n    .filter(({ name }) => !exclude.includes(name))\n    .map(({ name }) => ({\n      value: name,\n      label: truncate(\n        getFilterTitle(intl, null, name, findMatchingField(schema, name)),\n        50,\n      ),\n    }));\n}\n"],"mappings":";;;;;;;;AAGA,SAAS,SAAS,OAAO,QAAQ;AAC/B,MAAI,MAAM,SAAS,QAAQ;AACzB,WAAO,GAAG,MAAM,OAAO,GAAG,MAAM,CAAC;AAAA,EACnC;AACA,SAAO;AACT;AAEA,SAAS,kBAAkB,QAAQ,MAAM;AACvC,QAAM,aAAa,KAAK,MAAM,GAAG,EAAE,SAAS;AAE5C,MAAI,YAAY;AACd,UAAM,CAAC,WAAW,QAAQ,IAAI,KAAK,MAAM,GAAG;AAC5C,WAAO;AAAA,MACL,OAAO,OAAO,KAAK,CAAC,MAAM,EAAE,UAAU,SAAS,EAAE;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AAEA,WAAQ,iCAAQ,WAAU,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,UAAU,IAAI;AAC5D;AAEe,SAAR,uBACL,MACA,SAAS,CAAC,GACV,UAAU,CAAC,GACX;AACA,SAAO,WAAW,OAAM,iCAAQ,WAAU,CAAC,CAAC,EACzC,OAAO,CAAC,EAAE,KAAK,MAAM,CAAC,QAAQ,SAAS,IAAI,CAAC,EAC5C,IAAI,CAAC,EAAE,KAAK,OAAO;AAAA,IAClB,OAAO;AAAA,IACP,OAAO;AAAA,MACL,eAAe,MAAM,MAAM,MAAM,kBAAkB,QAAQ,IAAI,CAAC;AAAA,MAChE;AAAA,IACF;AAAA,EACF,EAAE;AACN;","names":[]}