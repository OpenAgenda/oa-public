{"version":3,"sources":["../src/utils/getFilters.js"],"sourcesContent":["import dateRanges from './dateRanges.js';\nimport withDefaultFilterConfig from './withDefaultFilterConfig.js';\nimport getAdditionalFilters from './getAdditionalFilters.js';\n\nconst isNameMatching = (name1, name2) =>\n  name1.replace('.', ':') === name2.replace('.', ':');\n\nexport default function getFilters(intl, fields, opts = {}) {\n  const { staticRanges, inputRanges } = dateRanges(intl, opts);\n\n  const { include, sort, exclude } = opts;\n\n  const standardFilters = [\n    { name: 'viewport' },\n    { name: 'geo' },\n    { name: 'search' },\n    { name: 'addMethod' },\n    { name: 'memberUid' },\n    { name: 'languages' },\n    { name: 'locationUid' },\n    { name: 'sourceAgendaUid' },\n    { name: 'originAgendaUid' },\n    { name: 'featured' },\n    { name: 'relative' },\n    { name: 'timings', staticRanges, inputRanges },\n    { name: 'createdAt', staticRanges, inputRanges },\n    { name: 'updatedAt', staticRanges, inputRanges },\n    { name: 'state' },\n    { name: 'attendanceMode' },\n    { name: 'countryCode' },\n    { name: 'region' },\n    { name: 'department' },\n    { name: 'adminLevel3' },\n    { name: 'city' },\n    { name: 'district' },\n    { name: 'keyword' },\n    { name: 'status' },\n    { name: 'accessibility' },\n  ];\n\n  const defaultSortFilters = standardFilters\n    .concat(getAdditionalFilters(fields))\n    .filter(\n      (filter) =>\n        !exclude || !exclude.find((f) => isNameMatching(f, filter.name)),\n    )\n    .filter(\n      (filter) =>\n        !include || !!include.find((f) => isNameMatching(f, filter.name)),\n    );\n\n  const finalCompleteSort = sort ?? include ?? [];\n\n  defaultSortFilters.forEach((filter) => {\n    if (finalCompleteSort.includes(filter.name)) {\n      return;\n    }\n    finalCompleteSort.push(filter.name);\n  });\n\n  return finalCompleteSort\n    .map((filterName) => {\n      const match = defaultSortFilters.find((filter) =>\n        isNameMatching(filter.name, filterName));\n\n      if (!match) {\n        console.warn(\n          'filter %s did not match any known field or filter',\n          filterName,\n        );\n      }\n\n      return match;\n    })\n    .filter((f) => !!f)\n    .map((filter) =>\n      withDefaultFilterConfig(filter, intl, {\n        dateFnsLocale: opts.dateFnsLocale,\n        mapTiles: opts.mapTiles,\n        missingValue: opts.missingValue,\n      }));\n}\n"],"mappings":";;;;;;;;;;;AAIA,IAAM,iBAAiB,CAAC,OAAO,UAC7B,MAAM,QAAQ,KAAK,GAAG,MAAM,MAAM,QAAQ,KAAK,GAAG;AAErC,SAAR,WAA4B,MAAM,QAAQ,OAAO,CAAC,GAAG;AAC1D,QAAM,EAAE,cAAc,YAAY,IAAI,WAAW,MAAM,IAAI;AAE3D,QAAM,EAAE,SAAS,MAAM,QAAQ,IAAI;AAEnC,QAAM,kBAAkB;AAAA,IACtB,EAAE,MAAM,WAAW;AAAA,IACnB,EAAE,MAAM,MAAM;AAAA,IACd,EAAE,MAAM,SAAS;AAAA,IACjB,EAAE,MAAM,YAAY;AAAA,IACpB,EAAE,MAAM,YAAY;AAAA,IACpB,EAAE,MAAM,YAAY;AAAA,IACpB,EAAE,MAAM,cAAc;AAAA,IACtB,EAAE,MAAM,kBAAkB;AAAA,IAC1B,EAAE,MAAM,kBAAkB;AAAA,IAC1B,EAAE,MAAM,WAAW;AAAA,IACnB,EAAE,MAAM,WAAW;AAAA,IACnB,EAAE,MAAM,WAAW,cAAc,YAAY;AAAA,IAC7C,EAAE,MAAM,aAAa,cAAc,YAAY;AAAA,IAC/C,EAAE,MAAM,aAAa,cAAc,YAAY;AAAA,IAC/C,EAAE,MAAM,QAAQ;AAAA,IAChB,EAAE,MAAM,iBAAiB;AAAA,IACzB,EAAE,MAAM,cAAc;AAAA,IACtB,EAAE,MAAM,SAAS;AAAA,IACjB,EAAE,MAAM,aAAa;AAAA,IACrB,EAAE,MAAM,cAAc;AAAA,IACtB,EAAE,MAAM,OAAO;AAAA,IACf,EAAE,MAAM,WAAW;AAAA,IACnB,EAAE,MAAM,UAAU;AAAA,IAClB,EAAE,MAAM,SAAS;AAAA,IACjB,EAAE,MAAM,gBAAgB;AAAA,EAC1B;AAEA,QAAM,qBAAqB,gBACxB,OAAO,qBAAqB,MAAM,CAAC,EACnC;AAAA,IACC,CAAC,WACC,CAAC,WAAW,CAAC,QAAQ,KAAK,CAAC,MAAM,eAAe,GAAG,OAAO,IAAI,CAAC;AAAA,EACnE,EACC;AAAA,IACC,CAAC,WACC,CAAC,WAAW,CAAC,CAAC,QAAQ,KAAK,CAAC,MAAM,eAAe,GAAG,OAAO,IAAI,CAAC;AAAA,EACpE;AAEF,QAAM,oBAAoB,QAAQ,WAAW,CAAC;AAE9C,qBAAmB,QAAQ,CAAC,WAAW;AACrC,QAAI,kBAAkB,SAAS,OAAO,IAAI,GAAG;AAC3C;AAAA,IACF;AACA,sBAAkB,KAAK,OAAO,IAAI;AAAA,EACpC,CAAC;AAED,SAAO,kBACJ,IAAI,CAAC,eAAe;AACnB,UAAM,QAAQ,mBAAmB,KAAK,CAAC,WACrC,eAAe,OAAO,MAAM,UAAU,CAAC;AAEzC,QAAI,CAAC,OAAO;AACV,cAAQ;AAAA,QACN;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT,CAAC,EACA,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EACjB,IAAI,CAAC,WACJ,wBAAwB,QAAQ,MAAM;AAAA,IACpC,eAAe,KAAK;AAAA,IACpB,UAAU,KAAK;AAAA,IACf,cAAc,KAAK;AAAA,EACrB,CAAC,CAAC;AACR;","names":[]}