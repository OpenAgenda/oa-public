{"version":3,"file":"linkedFieldLabels.js","names":["getLocaleValue","getLabel","getLinkedField","getSummary","_ref","field","lang","schema","linkedField","fieldName","label","getSpecificValue","_ref2","linkType","concat","value","map","matchingOption","options","find","o","id","undefined","filter","l","join","getDetailed","_ref3","optionalWith","linkedFieldName","specificValue"],"sources":["../../../src/FormSchemaBuilder/FieldPreview/linkedFieldLabels.js"],"sourcesContent":["import { getLocaleValue } from '@openagenda/intl';\n\nimport { getLabel, getLinkedField } from './utils.js';\n\nexport function getSummary({ field, lang, schema }) {\n  const linkedField = getLinkedField({ field, schema });\n\n  return getLabel(\n    'linkedTo',\n    {\n      fieldName: getLocaleValue(linkedField.label, lang),\n    },\n    lang,\n  );\n}\n\nexport function getSpecificValue({ field, schema, lang, linkType }) {\n  if (typeof field[linkType] === 'string') {\n    return;\n  }\n\n  const linkedField = getLinkedField({ field, schema, linkType });\n\n  return []\n    .concat(field[linkType].value)\n    .map((value) => {\n      const matchingOption = linkedField.options.find((o) => o.id === value);\n      return matchingOption\n        ? getLocaleValue(matchingOption.label, lang)\n        : undefined;\n    })\n    .filter((l) => !!l)\n    .join(', ');\n}\n\nexport function getDetailed({ field, lang, schema }) {\n  const linkType = field.optionalWith ? 'optionalWith' : 'enableWith';\n  const linkedField = getLinkedField({ field, schema, linkType });\n  const linkedFieldName = getLocaleValue(linkedField.label, lang);\n  const specificValue = getSpecificValue({ field, lang, schema, linkType });\n\n  if (typeof field[linkType] === 'string') {\n    return getLabel(\n      linkType === 'enableWith'\n        ? 'enabledWhenLinkedFieldHasValue'\n        : 'optionalWhenLinkedFieldHasValue',\n      { linkedFieldName },\n      lang,\n    );\n  }\n\n  return getLabel(\n    linkType === 'enableWith'\n      ? 'enabledWhenLinkedFieldHasSpecificValue'\n      : 'optionalWhenLinkedFieldHasSpecificValue',\n    { linkedFieldName, specificValue },\n    lang,\n  );\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,SAASC,QAAQ,EAAEC,cAAc,QAAQ,YAAY;AAErD,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAA0B;EAAA,IAAzB;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAChD,MAAMI,WAAW,GAAGN,cAAc,CAAC;IAAEG,KAAK;IAAEE;EAAO,CAAC,CAAC;EAErD,OAAON,QAAQ,CACb,UAAU,EACV;IACEQ,SAAS,EAAET,cAAc,CAACQ,WAAW,CAACE,KAAK,EAAEJ,IAAI;EACnD,CAAC,EACDA,IACF,CAAC;AACH;AAEA,OAAO,SAASK,gBAAgBA,CAAAC,KAAA,EAAoC;EAAA,IAAnC;IAAEP,KAAK;IAAEE,MAAM;IAAED,IAAI;IAAEO;EAAS,CAAC,GAAAD,KAAA;EAChE,IAAI,OAAOP,KAAK,CAACQ,QAAQ,CAAC,KAAK,QAAQ,EAAE;IACvC;EACF;EAEA,MAAML,WAAW,GAAGN,cAAc,CAAC;IAAEG,KAAK;IAAEE,MAAM;IAAEM;EAAS,CAAC,CAAC;EAE/D,OAAO,EAAE,CACNC,MAAM,CAACT,KAAK,CAACQ,QAAQ,CAAC,CAACE,KAAK,CAAC,CAC7BC,GAAG,CAAED,KAAK,IAAK;IACd,MAAME,cAAc,GAAGT,WAAW,CAACU,OAAO,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,KAAK,CAAC;IACtE,OAAOE,cAAc,GACjBjB,cAAc,CAACiB,cAAc,CAACP,KAAK,EAAEJ,IAAI,CAAC,GAC1CgB,SAAS;EACf,CAAC,CAAC,CACDC,MAAM,CAAEC,CAAC,IAAK,CAAC,CAACA,CAAC,CAAC,CAClBC,IAAI,CAAC,IAAI,CAAC;AACf;AAEA,OAAO,SAASC,WAAWA,CAAAC,KAAA,EAA0B;EAAA,IAAzB;IAAEtB,KAAK;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAoB,KAAA;EACjD,MAAMd,QAAQ,GAAGR,KAAK,CAACuB,YAAY,GAAG,cAAc,GAAG,YAAY;EACnE,MAAMpB,WAAW,GAAGN,cAAc,CAAC;IAAEG,KAAK;IAAEE,MAAM;IAAEM;EAAS,CAAC,CAAC;EAC/D,MAAMgB,eAAe,GAAG7B,cAAc,CAACQ,WAAW,CAACE,KAAK,EAAEJ,IAAI,CAAC;EAC/D,MAAMwB,aAAa,GAAGnB,gBAAgB,CAAC;IAAEN,KAAK;IAAEC,IAAI;IAAEC,MAAM;IAAEM;EAAS,CAAC,CAAC;EAEzE,IAAI,OAAOR,KAAK,CAACQ,QAAQ,CAAC,KAAK,QAAQ,EAAE;IACvC,OAAOZ,QAAQ,CACbY,QAAQ,KAAK,YAAY,GACrB,gCAAgC,GAChC,iCAAiC,EACrC;MAAEgB;IAAgB,CAAC,EACnBvB,IACF,CAAC;EACH;EAEA,OAAOL,QAAQ,CACbY,QAAQ,KAAK,YAAY,GACrB,wCAAwC,GACxC,yCAAyC,EAC7C;IAAEgB,eAAe;IAAEC;EAAc,CAAC,EAClCxB,IACF,CAAC;AACH","ignoreList":[]}