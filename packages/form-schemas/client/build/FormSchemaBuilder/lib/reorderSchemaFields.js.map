{"version":3,"file":"reorderSchemaFields.js","names":["ih","applyOrder","schema","newOrder","fields","$set","map","f","_first","filter","field","_assign","fromIndex","toIndex","$splice"],"sources":["../../../src/FormSchemaBuilder/lib/reorderSchemaFields.js"],"sourcesContent":["import _ from 'lodash';\nimport ih from 'immutability-helper';\n\nfunction applyOrder(schema, newOrder) {\n  return ih(schema, {\n    fields: {\n      $set: newOrder.map((f) =>\n        _.first(schema.fields.filter((field) => field.field === f))),\n    },\n  });\n}\n\n// this act as a swap, it should not be\nexport default _.assign(\n  (schema, fromIndex, toIndex) =>\n    ih(schema, {\n      fields: {\n        $splice: [\n          [\n            toIndex + (toIndex > fromIndex ? 1 : 0),\n            0,\n            schema.fields[fromIndex],\n          ],\n          [fromIndex + (toIndex < fromIndex ? 1 : 0), 1],\n        ],\n      },\n    }),\n  {\n    applyOrder,\n  },\n);\n"],"mappings":";;AACA,OAAOA,EAAE,MAAM,qBAAqB;AAEpC,SAASC,UAAUA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EACpC,OAAOH,EAAE,CAACE,MAAM,EAAE;IAChBE,MAAM,EAAE;MACNC,IAAI,EAAEF,QAAQ,CAACG,GAAG,CAAEC,CAAC,IACnBC,MAAA,CAAQN,MAAM,CAACE,MAAM,CAACK,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACA,KAAK,KAAKH,CAAC,CAAC,CAAC;IAC/D;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,eAAeI,OAAA,CACb,CAACT,MAAM,EAAEU,SAAS,EAAEC,OAAO,KACzBb,EAAE,CAACE,MAAM,EAAE;EACTE,MAAM,EAAE;IACNU,OAAO,EAAE,CACP,CACED,OAAO,IAAIA,OAAO,GAAGD,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EACvC,CAAC,EACDV,MAAM,CAACE,MAAM,CAACQ,SAAS,CAAC,CACzB,EACD,CAACA,SAAS,IAAIC,OAAO,GAAGD,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAElD;AACF,CAAC,CAAC,EACJ;EACEX;AACF,CACF,CAAC","ignoreList":[]}