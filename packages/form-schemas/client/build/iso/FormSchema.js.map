{"version":3,"file":"FormSchema.js","names":["ih","isObject","extractNextOptionId","validateFieldAndAssignOptionIds","validateSection","getSchema","isFieldReferencedByField","isNew","data","id","getItemSlug","f","_f$slug","slug","field","getItemType","_f$type","type","validate","options","arguments","length","undefined","client","requireLabels","_objectSpread","errors","dirty","nextOptionId","fields","res","custom","defaultLabelLanguage","clean","_pick","forEach","push","cleanField","updatedNextOptionId","e","Array","isArray","error","message","concat","_omit","FormSchema","constructor","getData","addField","fieldData","isItemSlugAvailable","updateField","splice","_getFieldIndex","fieldIndex","getField","indexOrSlug","index","_checkFieldIndex","getFields","getRelatedFields","fieldOrFieldName","filter","getFileFields","_context","_includesInstanceProperty","call","fieldType","moveField","moves","moveFieldTo","newIndex","_popField","removeField","item","getFieldCount","isEmpty","updateFields","updatedFieldSlugs","map","_get","fieldToRemove","getFieldExists","i","_f$slug2","getValidate","accessType","accessLevel","args","$set","fieldNames","_f$slug3","indexOf","errorMessage"],"sources":["../../src/iso/FormSchema.js"],"sourcesContent":["import _ from 'lodash';\nimport ih from 'immutability-helper';\nimport isObject from './isObject.js';\nimport { extractNextOptionId } from './fieldOptions.js';\nimport validateFieldAndAssignOptionIds from './validateFieldAndAssignOptionIds.js';\nimport validateSection from './validateSection.js';\nimport getSchema from './getSchema.js';\nimport isFieldReferencedByField from './isFieldReferencedByField.js';\n\nconst isNew = (data) => data.id === null;\n\nconst getItemSlug = (f) => f.slug ?? f.field;\nconst getItemType = (f) => f.type ?? 'field';\n\nfunction validate(data, options = {}) {\n  const { client, requireLabels } = {\n    client: false,\n    requireLabels: true,\n    ...typeof options === 'boolean'\n      ? {\n        client: options,\n      }\n      : options,\n  };\n\n  let errors = [];\n\n  const dirty = {\n    id: null,\n    nextOptionId: 1,\n    fields: [],\n    res: null,\n    custom: null,\n    defaultLabelLanguage: null,\n    ...data || {},\n  };\n\n  // these we take as is\n  const clean = _.pick(dirty, ['id', 'res', 'custom', 'defaultLabelLanguage']);\n\n  clean.nextOptionId = extractNextOptionId(data);\n\n  clean.fields = [];\n\n  // clean each field\n  dirty.fields.forEach((f) => {\n    try {\n      if (f.type === 'section') {\n        clean.fields.push(validateSection(f));\n        return;\n      }\n\n      const { field: cleanField, nextOptionId: updatedNextOptionId } = validateFieldAndAssignOptionIds(f, {\n        requireLabels,\n        custom: clean.custom,\n        defaultLabelLanguage: clean.defaultLabelLanguage,\n        nextOptionId: clean.nextOptionId,\n      });\n\n      clean.nextOptionId = updatedNextOptionId;\n\n      clean.fields.push(cleanField);\n    } catch (e) {\n      if (!Array.isArray(e)) {\n        const error = {\n          ...e,\n          message: `Validation of field ${f.field} failed: ${e.message}`,\n        };\n        throw error;\n      }\n\n      errors = errors.concat(e);\n    }\n  });\n\n  if (errors.length) {\n    throw errors;\n  }\n\n  return client ? clean : _.omit(clean, ['res', 'id']);\n}\n\nclass FormSchema {\n  constructor(data, options = {}) {\n    // { fields, nextOptionId, res, id, custom }\n    this.data = validate(data, {\n      client: true,\n      ...typeof options === 'boolean' ? { client: options } : options,\n    });\n  }\n\n  // get clean data\n  getData() {\n    return this.data;\n  }\n\n  addField(fieldData) {\n    if (getItemType(fieldData) === 'section') {\n      this.data.fields.push(validateSection(fieldData));\n      return;\n    }\n\n    const { field: clean, nextOptionId } = validateFieldAndAssignOptionIds(\n      fieldData,\n      _.pick(this.data, ['custom', 'defaultLabelLanguage', 'nextOptionId']),\n    );\n\n    if (!this.isItemSlugAvailable(clean)) {\n      const error = `This slug is taken! : ${clean.field}`;\n      throw error;\n    }\n\n    this.data.nextOptionId = nextOptionId;\n\n    this.data.fields.push(clean);\n  }\n\n  updateField(fieldData) {\n    if (getItemType(fieldData) === 'section') {\n      const clean = validateSection(fieldData);\n\n      this.data.fields.splice(this._getFieldIndex(clean.slug), 1, clean);\n      return;\n    }\n\n    const { field: clean, nextOptionId } = validateFieldAndAssignOptionIds(\n      fieldData,\n      _.pick(this.data, ['custom', 'defaultLabelLanguage', 'nextOptionId']),\n    );\n\n    const fieldIndex = this._getFieldIndex(getItemSlug(clean));\n\n    this.data.nextOptionId = nextOptionId;\n\n    this.data.fields.splice(fieldIndex, 1, clean);\n  }\n\n  getField(indexOrSlug) {\n    const index = this._getFieldIndex(indexOrSlug);\n\n    this._checkFieldIndex(index);\n\n    return this.data.fields[index];\n  }\n\n  getFields() {\n    return this.data.fields;\n  }\n\n  getRelatedFields(fieldOrFieldName) {\n    const field = typeof fieldOrFieldName === 'string'\n      ? this.getField(fieldOrFieldName)\n      : fieldOrFieldName;\n\n    return this.data.fields.filter(\n      (f) =>\n        isFieldReferencedByField(field, f)\n        || isFieldReferencedByField(f, field),\n    );\n  }\n\n  getFileFields() {\n    return this.data.fields.filter((f) =>\n      ['image', 'file'].includes(f.fieldType));\n  }\n\n  moveField(indexOrSlug, moves) {\n    const index = this._getFieldIndex(indexOrSlug);\n\n    this.moveFieldTo(index, index + moves);\n  }\n\n  moveFieldTo(indexOrSlug, newIndex) {\n    const index = this._getFieldIndex(indexOrSlug);\n\n    this._checkFieldIndex(newIndex, 'Move value exceeds possible value');\n\n    const field = this._popField(index);\n\n    this.data.fields.splice(newIndex, 0, field);\n  }\n\n  removeField(indexOrSlug) {\n    const index = this._getFieldIndex(indexOrSlug);\n\n    this._checkFieldIndex(index);\n\n    this._popField(index);\n  }\n\n  isItemSlugAvailable(item) {\n    return !this.data.fields.filter((f) => getItemSlug(f) === getItemSlug(item))\n      .length;\n  }\n\n  getFieldCount() {\n    return this.data.fields.length;\n  }\n\n  isEmpty() {\n    return !this.data.fields.length;\n  }\n\n  isNew() {\n    return isNew(this.data);\n  }\n\n  updateFields(fields) {\n    const updatedFieldSlugs = fields.map((f) => getItemSlug(f));\n\n    // remove\n    _.get(this, 'data.fields')\n      .filter((f) => !updatedFieldSlugs.includes(getItemSlug(f)))\n      .forEach((fieldToRemove) => this.removeField(getItemSlug(fieldToRemove)));\n\n    // add and update\n    fields.forEach((f) => {\n      if (this.getFieldExists(getItemSlug(f))) {\n        try {\n          this.updateField(f);\n        } catch (errors) {\n          throw errors.map((e) => ({ ...e, field: `${f.field}.${e.field}` }));\n        }\n      } else {\n        this.addField(f);\n      }\n    });\n\n    fields.map((f, i) => this.moveFieldTo(f.slug ?? f.field, i));\n\n    return this.data.fields;\n  }\n\n  getValidate(accessType = null, accessLevel = null, options = {}) {\n    const args = isObject(accessType)\n      ? {\n        accessType: null,\n        accessLevel: null,\n        options: accessType,\n      }\n      : {\n        accessType,\n        accessLevel,\n        options,\n      };\n\n    return getSchema(\n      this.data.fields,\n      args.accessType,\n      args.accessLevel,\n      ih(args.options, {\n        custom: {\n          $set: this.data.custom,\n        },\n      }),\n    );\n  }\n\n  getFieldExists(indexOrSlug) {\n    if (typeof indexOrSlug === 'string') {\n      return this._getFieldIndex(indexOrSlug) !== -1;\n    }\n\n    return indexOrSlug < this.data.fields.length;\n  }\n\n  _getFieldIndex(indexOrSlug) {\n    const fieldNames = this.data.fields.map((f) => f.slug ?? f.field);\n\n    return typeof indexOrSlug === 'string'\n      ? fieldNames.indexOf(indexOrSlug)\n      : indexOrSlug;\n  }\n\n  _checkFieldIndex(index, errorMessage = 'Index exceeds schema size') {\n    if (index < 0 || index >= this.getFieldCount()) {\n      throw errorMessage;\n    }\n  }\n\n  _popField(index) {\n    return this.data.fields.splice(index, 1)[0];\n  }\n}\n\nFormSchema.validate = validate;\n\nexport default FormSchema;\nexport { validate };\n"],"mappings":"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","ignoreList":[]}