{"version":3,"file":"fileValidator.js","names":["schema","textValidator","linkValidator","requiredError","field","arguments","length","undefined","code","message","register","text","link","baseFields","extension","type","originalName","filename","isEmptyObject","obj","visited","Set","Array","isArray","Object","keys","has","add","key","validatorOptions","v","optional","fields","_objectSpread","allowPath","path","allowURL","url","imageWithSizeAndVariants","size","width","default","height","variants","list","clean"],"sources":["../../src/iso/fileValidator.js"],"sourcesContent":["import schema from '@openagenda/validators/schema/index.js';\nimport textValidator from '@openagenda/validators/text.js';\nimport linkValidator from '@openagenda/validators/link.js';\n\nconst requiredError = (field = null) => [\n  {\n    code: 'required',\n    message: 'A value is required',\n    field,\n  },\n];\n\nschema.register({\n  text: textValidator,\n  link: linkValidator,\n});\n\nconst baseFields = {\n  extension: {\n    type: 'text',\n  },\n  originalName: {\n    type: 'text',\n  },\n  filename: {\n    type: 'text',\n  },\n};\n\nfunction isEmptyObject(obj, visited = new Set()) {\n  if (obj === null || typeof obj === 'undefined') {\n    return true;\n  }\n\n  if (Array.isArray(obj) && obj.length === 0) {\n    return true;\n  }\n\n  if (typeof obj === 'object' && Object.keys(obj).length === 0) {\n    return true;\n  }\n\n  if (typeof obj !== 'object') {\n    return !obj;\n  }\n\n  if (visited.has(obj)) {\n    return true;\n  }\n\n  visited.add(obj);\n\n  for (const key in obj) {\n    if (!isEmptyObject(obj[key], visited)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default (validatorOptions = {}) =>\n  (v) => {\n    const optional = validatorOptions?.optional === undefined\n      ? true\n      : validatorOptions?.optional;\n\n    if (!optional && !v) {\n      throw requiredError(validatorOptions?.field);\n    }\n\n    if (!v) {\n      return null;\n    }\n\n    const fields = {\n      ...baseFields,\n    };\n\n    if (validatorOptions?.allowPath && v?.path) {\n      fields.path = { type: 'text' };\n    } else if (validatorOptions?.allowURL && v?.url) {\n      fields.url = { type: 'link' };\n    }\n\n    if (validatorOptions?.imageWithSizeAndVariants) {\n      fields.size = {\n        width: {\n          type: 'integer',\n          default: null,\n        },\n        height: {\n          type: 'integer',\n          default: null,\n        },\n      };\n\n      fields.variants = {\n        list: true,\n        fields: {\n          type: { type: 'text' },\n          filename: { type: 'text' },\n          size: { ...fields.size },\n        },\n      };\n    }\n\n    const clean = schema(fields)(v);\n\n    if (isEmptyObject(clean)) {\n      return null;\n    }\n\n    return clean;\n  };\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,aAAa,MAAM,gCAAgC;AAE1D,MAAMC,aAAa,GAAG,SAAAA,CAAA;EAAA,IAACC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,OAAK,CACtC;IACEG,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE,qBAAqB;IAC9BL;EACF,CAAC,CACF;AAAA;AAEDJ,MAAM,CAACU,QAAQ,CAAC;EACdC,IAAI,EAAEV,aAAa;EACnBW,IAAI,EAAEV;AACR,CAAC,CAAC;AAEF,MAAMW,UAAU,GAAG;EACjBC,SAAS,EAAE;IACTC,IAAI,EAAE;EACR,CAAC;EACDC,YAAY,EAAE;IACZD,IAAI,EAAE;EACR,CAAC;EACDE,QAAQ,EAAE;IACRF,IAAI,EAAE;EACR;AACF,CAAC;AAED,SAASG,aAAaA,CAACC,GAAG,EAAuB;EAAA,IAArBC,OAAO,GAAAf,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAIgB,GAAG,CAAC,CAAC;EAC7C,IAAIF,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,WAAW,EAAE;IAC9C,OAAO,IAAI;EACb;EAEA,IAAIG,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC,IAAIA,GAAG,CAACb,MAAM,KAAK,CAAC,EAAE;IAC1C,OAAO,IAAI;EACb;EAEA,IAAI,OAAOa,GAAG,KAAK,QAAQ,IAAIK,MAAM,CAACC,IAAI,CAACN,GAAG,CAAC,CAACb,MAAM,KAAK,CAAC,EAAE;IAC5D,OAAO,IAAI;EACb;EAEA,IAAI,OAAOa,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAO,CAACA,GAAG;EACb;EAEA,IAAIC,OAAO,CAACM,GAAG,CAACP,GAAG,CAAC,EAAE;IACpB,OAAO,IAAI;EACb;EAEAC,OAAO,CAACO,GAAG,CAACR,GAAG,CAAC;EAEhB,KAAK,MAAMS,GAAG,IAAIT,GAAG,EAAE;IACrB,IAAI,CAACD,aAAa,CAACC,GAAG,CAACS,GAAG,CAAC,EAAER,OAAO,CAAC,EAAE;MACrC,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb;AAEA,gBAAe;EAAA,IAACS,gBAAgB,GAAAxB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OAClCyB,CAAC,IAAK;IACL,MAAMC,QAAQ,GAAG,CAAAF,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEE,QAAQ,MAAKxB,SAAS,GACrD,IAAI,GACJsB,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEE,QAAQ;IAE9B,IAAI,CAACA,QAAQ,IAAI,CAACD,CAAC,EAAE;MACnB,MAAM3B,aAAa,CAAC0B,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEzB,KAAK,CAAC;IAC9C;IAEA,IAAI,CAAC0B,CAAC,EAAE;MACN,OAAO,IAAI;IACb;IAEA,MAAME,MAAM,GAAAC,aAAA,KACPpB,UAAU,CACd;IAED,IAAIgB,gBAAgB,aAAhBA,gBAAgB,eAAhBA,gBAAgB,CAAEK,SAAS,IAAIJ,CAAC,aAADA,CAAC,eAADA,CAAC,CAAEK,IAAI,EAAE;MAC1CH,MAAM,CAACG,IAAI,GAAG;QAAEpB,IAAI,EAAE;MAAO,CAAC;IAChC,CAAC,MAAM,IAAIc,gBAAgB,aAAhBA,gBAAgB,eAAhBA,gBAAgB,CAAEO,QAAQ,IAAIN,CAAC,aAADA,CAAC,eAADA,CAAC,CAAEO,GAAG,EAAE;MAC/CL,MAAM,CAACK,GAAG,GAAG;QAAEtB,IAAI,EAAE;MAAO,CAAC;IAC/B;IAEA,IAAIc,gBAAgB,aAAhBA,gBAAgB,eAAhBA,gBAAgB,CAAES,wBAAwB,EAAE;MAC9CN,MAAM,CAACO,IAAI,GAAG;QACZC,KAAK,EAAE;UACLzB,IAAI,EAAE,SAAS;UACf0B,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE;UACN3B,IAAI,EAAE,SAAS;UACf0B,OAAO,EAAE;QACX;MACF,CAAC;MAEDT,MAAM,CAACW,QAAQ,GAAG;QAChBC,IAAI,EAAE,IAAI;QACVZ,MAAM,EAAE;UACNjB,IAAI,EAAE;YAAEA,IAAI,EAAE;UAAO,CAAC;UACtBE,QAAQ,EAAE;YAAEF,IAAI,EAAE;UAAO,CAAC;UAC1BwB,IAAI,EAAAN,aAAA,KAAOD,MAAM,CAACO,IAAI;QACxB;MACF,CAAC;IACH;IAEA,MAAMM,KAAK,GAAG7C,MAAM,CAACgC,MAAM,CAAC,CAACF,CAAC,CAAC;IAE/B,IAAIZ,aAAa,CAAC2B,KAAK,CAAC,EAAE;MACxB,OAAO,IAAI;IACb;IAEA,OAAOA,KAAK;EACd,CAAC;AAAA","ignoreList":[]}