{"version":3,"file":"getValidatorFromField.js","names":["schema","choice","text","boolean","link","email","number","date","multilingual","integer","phone","register","validators","appendMinMax","validatorOptions","fieldOptions","filter","f","_context","_includesInstanceProperty","undefined","call","forEach","convertToChoice","preset","Object","assign","options","map","o","id","convertToMultilingual","_pick","convertTo","languages","convertToFile","_objectSpread","field","parser","bind","unique","type","test","arguments","length","customValidators","_get","draft","matchingMapItem","_head","mapItem","_context2","concat","fieldType","_assign","optional","Error"],"sources":["../../src/iso/getValidatorFromField.js"],"sourcesContent":["import _ from 'lodash';\nimport schema from '@openagenda/validators/schema/index.js';\nimport choice from '@openagenda/validators/choice.js';\nimport text from '@openagenda/validators/text.js';\nimport boolean from '@openagenda/validators/boolean.js';\nimport link from '@openagenda/validators/link.js';\nimport email from '@openagenda/validators/email.js';\nimport number from '@openagenda/validators/number.js';\nimport date from '@openagenda/validators/date.js';\nimport multilingual from '@openagenda/validators/multilingual.js';\nimport integer from '@openagenda/validators/integer.js';\nimport phone from '@openagenda/validators/phone.js';\n\nschema.register({\n  choice,\n});\n\nconst validators = {\n  text,\n  boolean,\n  link,\n  email,\n  number,\n  date,\n  multilingual,\n  integer,\n  choice,\n  phone,\n};\n\nfunction appendMinMax(validatorOptions, fieldOptions) {\n  ['min', 'max']\n    .filter((f) => ![undefined, null].includes(fieldOptions[f]))\n    .forEach((f) => {\n      validatorOptions[f] = fieldOptions[f];\n    });\n}\n\nfunction convertToChoice(preset, validatorOptions, fieldOptions) {\n  Object.assign(validatorOptions, preset, {\n    options: fieldOptions.options.map((o) => o.id),\n  });\n\n  appendMinMax(validatorOptions, fieldOptions);\n}\n\nfunction convertToMultilingual(validatorOptions, fieldOptions) {\n  Object.assign(validatorOptions, _.pick(fieldOptions, 'languages'));\n\n  appendMinMax(validatorOptions, fieldOptions);\n}\n\nfunction convertTo(validatorOptions, fieldOptions) {\n  if (fieldOptions.languages) {\n    Object.assign(validatorOptions, _.pick(fieldOptions, 'languages'));\n  }\n  appendMinMax(validatorOptions, fieldOptions);\n}\n\nfunction convertToFile(validatorOptions, fieldOptions) {\n  return { ...validatorOptions, ...fieldOptions };\n}\n\nconst map = [\n  {\n    field: ['radio', 'select'],\n    parser: convertToChoice.bind(null, { unique: true }),\n    type: 'choice',\n  },\n  {\n    field: ['text', 'textarea', 'markdown', 'html', 'slate'],\n    test: (f) => f.languages,\n    parser: convertToMultilingual,\n    type: 'multilingual',\n  },\n  {\n    field: 'date',\n    parser: convertTo,\n    type: 'date',\n  },\n  {\n    field: 'boolean',\n    type: 'boolean',\n  },\n  {\n    field: ['checkbox', 'multiselect'],\n    parser: convertToChoice.bind(null, { unique: false }),\n    type: 'choice',\n  },\n  {\n    field: ['textarea', 'markdown', 'html', 'pass'],\n    parser: convertTo,\n    type: 'text',\n  },\n  {\n    field: 'slate',\n    parser: convertTo,\n    type: 'pass',\n  },\n  {\n    field: ['image', 'file'],\n    parser: convertToFile,\n    type: 'file',\n  },\n];\n\nexport default (field, options = {}) => {\n  const customValidators = _.get(options, 'custom', {});\n\n  const draft = _.get(options, 'draft', false);\n\n  const matchingMapItem = _.head(\n    map.filter((mapItem) => {\n      // field type must match given field\n      if (![].concat(mapItem.field).includes(field.fieldType)) return false;\n\n      // if fieldOptions are set, they must all match\n      if (mapItem.test) {\n        return mapItem.test(field);\n      }\n\n      return true;\n    }),\n  );\n\n  const type = _.get(matchingMapItem, 'type', field.fieldType);\n\n  const validatorOptions = _.assign(\n    _.pick(field, [\n      'field',\n      'optional',\n      'optionalWith',\n      'enableWith',\n      'allowNull',\n      'allowURL',\n      'imageWithSizeAndVariants',\n      'allowPath',\n      'allowObject',\n      'default',\n    ]),\n    draft ? { optional: true, type } : { type },\n  );\n\n  if (!matchingMapItem) {\n    if (\n      !_.get(customValidators, field.fieldType)\n      && !validators[field.fieldType]\n    ) {\n      throw new Error(\n        `Unknown field type ${field.fieldType} for field ${field.field}`,\n      );\n    }\n\n    convertTo(validatorOptions, field);\n  } else if (matchingMapItem.parser) {\n    matchingMapItem.parser(validatorOptions, field);\n  }\n\n  return validatorOptions;\n};\n"],"mappings":";;;;;;;AACA,OAAOA,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,KAAK,MAAM,iCAAiC;AAEnDV,MAAM,CAACW,QAAQ,CAAC;EACdV;AACF,CAAC,CAAC;AAEF,MAAMW,UAAU,GAAG;EACjBV,IAAI;EACJC,OAAO;EACPC,IAAI;EACJC,KAAK;EACLC,MAAM;EACNC,IAAI;EACJC,YAAY;EACZC,OAAO;EACPR,MAAM;EACNS;AACF,CAAC;AAED,SAASG,YAAYA,CAACC,gBAAgB,EAAEC,YAAY,EAAE;EACpD,CAAC,KAAK,EAAE,KAAK,CAAC,CACXC,MAAM,CAAEC,CAAC;IAAA,IAAAC,QAAA;IAAA,OAAK,CAACC,yBAAA,CAAAD,QAAA,IAACE,SAAS,EAAE,IAAI,CAAC,EAAAC,IAAA,CAAAH,QAAA,EAAUH,YAAY,CAACE,CAAC,CAAC,CAAC;EAAA,EAAC,CAC3DK,OAAO,CAAEL,CAAC,IAAK;IACdH,gBAAgB,CAACG,CAAC,CAAC,GAAGF,YAAY,CAACE,CAAC,CAAC;EACvC,CAAC,CAAC;AACN;AAEA,SAASM,eAAeA,CAACC,MAAM,EAAEV,gBAAgB,EAAEC,YAAY,EAAE;EAC/DU,MAAM,CAACC,MAAM,CAACZ,gBAAgB,EAAEU,MAAM,EAAE;IACtCG,OAAO,EAAEZ,YAAY,CAACY,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE;EAC/C,CAAC,CAAC;EAEFjB,YAAY,CAACC,gBAAgB,EAAEC,YAAY,CAAC;AAC9C;AAEA,SAASgB,qBAAqBA,CAACjB,gBAAgB,EAAEC,YAAY,EAAE;EAC7DU,MAAM,CAACC,MAAM,CAACZ,gBAAgB,EAAEkB,KAAA,CAAOjB,YAAY,EAAE,WAAW,CAAC,CAAC;EAElEF,YAAY,CAACC,gBAAgB,EAAEC,YAAY,CAAC;AAC9C;AAEA,SAASkB,SAASA,CAACnB,gBAAgB,EAAEC,YAAY,EAAE;EACjD,IAAIA,YAAY,CAACmB,SAAS,EAAE;IAC1BT,MAAM,CAACC,MAAM,CAACZ,gBAAgB,EAAEkB,KAAA,CAAOjB,YAAY,EAAE,WAAW,CAAC,CAAC;EACpE;EACAF,YAAY,CAACC,gBAAgB,EAAEC,YAAY,CAAC;AAC9C;AAEA,SAASoB,aAAaA,CAACrB,gBAAgB,EAAEC,YAAY,EAAE;EACrD,OAAAqB,aAAA,CAAAA,aAAA,KAAYtB,gBAAgB,GAAKC,YAAY;AAC/C;AAEA,MAAMa,GAAG,GAAG,CACV;EACES,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;EAC1BC,MAAM,EAAEf,eAAe,CAACgB,IAAI,CAAC,IAAI,EAAE;IAAEC,MAAM,EAAE;EAAK,CAAC,CAAC;EACpDC,IAAI,EAAE;AACR,CAAC,EACD;EACEJ,KAAK,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC;EACxDK,IAAI,EAAGzB,CAAC,IAAKA,CAAC,CAACiB,SAAS;EACxBI,MAAM,EAAEP,qBAAqB;EAC7BU,IAAI,EAAE;AACR,CAAC,EACD;EACEJ,KAAK,EAAE,MAAM;EACbC,MAAM,EAAEL,SAAS;EACjBQ,IAAI,EAAE;AACR,CAAC,EACD;EACEJ,KAAK,EAAE,SAAS;EAChBI,IAAI,EAAE;AACR,CAAC,EACD;EACEJ,KAAK,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC;EAClCC,MAAM,EAAEf,eAAe,CAACgB,IAAI,CAAC,IAAI,EAAE;IAAEC,MAAM,EAAE;EAAM,CAAC,CAAC;EACrDC,IAAI,EAAE;AACR,CAAC,EACD;EACEJ,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC;EAC/CC,MAAM,EAAEL,SAAS;EACjBQ,IAAI,EAAE;AACR,CAAC,EACD;EACEJ,KAAK,EAAE,OAAO;EACdC,MAAM,EAAEL,SAAS;EACjBQ,IAAI,EAAE;AACR,CAAC,EACD;EACEJ,KAAK,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;EACxBC,MAAM,EAAEH,aAAa;EACrBM,IAAI,EAAE;AACR,CAAC,CACF;AAED,gBAAe,UAACJ,KAAK,EAAmB;EAAA,IAAjBV,OAAO,GAAAgB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAvB,SAAA,GAAAuB,SAAA,MAAG,CAAC,CAAC;EACjC,MAAME,gBAAgB,GAAGC,IAAA,CAAMnB,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;EAErD,MAAMoB,KAAK,GAAGD,IAAA,CAAMnB,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;EAE5C,MAAMqB,eAAe,GAAGC,KAAA,CACtBrB,GAAG,CAACZ,MAAM,CAAEkC,OAAO,IAAK;IAAA,IAAAC,SAAA;IACtB;IACA,IAAI,CAAChC,yBAAA,CAAAgC,SAAA,KAAE,CAACC,MAAM,CAACF,OAAO,CAACb,KAAK,CAAC,EAAAhB,IAAA,CAAA8B,SAAA,EAAUd,KAAK,CAACgB,SAAS,CAAC,EAAE,OAAO,KAAK;;IAErE;IACA,IAAIH,OAAO,CAACR,IAAI,EAAE;MAChB,OAAOQ,OAAO,CAACR,IAAI,CAACL,KAAK,CAAC;IAC5B;IAEA,OAAO,IAAI;EACb,CAAC,CACH,CAAC;EAED,MAAMI,IAAI,GAAGK,IAAA,CAAME,eAAe,EAAE,MAAM,EAAEX,KAAK,CAACgB,SAAS,CAAC;EAE5D,MAAMvC,gBAAgB,GAAGwC,OAAA,CACvBtB,KAAA,CAAOK,KAAK,EAAE,CACZ,OAAO,EACP,UAAU,EACV,cAAc,EACd,YAAY,EACZ,WAAW,EACX,UAAU,EACV,0BAA0B,EAC1B,WAAW,EACX,aAAa,EACb,SAAS,CACV,CAAC,EACFU,KAAK,GAAG;IAAEQ,QAAQ,EAAE,IAAI;IAAEd;EAAK,CAAC,GAAG;IAAEA;EAAK,CAC5C,CAAC;EAED,IAAI,CAACO,eAAe,EAAE;IACpB,IACE,CAACF,IAAA,CAAMD,gBAAgB,EAAER,KAAK,CAACgB,SAAS,CAAC,IACtC,CAACzC,UAAU,CAACyB,KAAK,CAACgB,SAAS,CAAC,EAC/B;MACA,MAAM,IAAIG,KAAK,uBAAAJ,MAAA,CACSf,KAAK,CAACgB,SAAS,iBAAAD,MAAA,CAAcf,KAAK,CAACA,KAAK,CAChE,CAAC;IACH;IAEAJ,SAAS,CAACnB,gBAAgB,EAAEuB,KAAK,CAAC;EACpC,CAAC,MAAM,IAAIW,eAAe,CAACV,MAAM,EAAE;IACjCU,eAAe,CAACV,MAAM,CAACxB,gBAAgB,EAAEuB,KAAK,CAAC;EACjD;EAEA,OAAOvB,gBAAgB;AACzB,CAAC","ignoreList":[]}