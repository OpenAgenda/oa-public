{"version":3,"file":"merge.js","names":["ih","getIsAbstract","_ref","fieldType","type","assignSchemaValuesToNonAbstractFields","schema","custom","fields","map","f","isAbstract","_objectSpread","schemaId","id","schemaType","mergeRelated","relateds","_context","_reduceInstanceProperty","related","Array","isArray","other","call","merged","Object","keys","forEach","relatedKey","_merged$relatedKey","_uniq","concat","mergeField","field","mergeWithField","_context2","protectedKeys","update","_keys","filter","k","_includesInstanceProperty","undefined","c","_set","$set","optional","_get","options","o","_context3","allowedOptions","$unset","length","reduceFields","mergedIn","mergeWith","_context4","_field$slug","index","_f$slug","slug","indexOf","push","mergeAll","_context5","access","_len","arguments","args","_key","_first","_last","assign","pop","slice","accessTypes","accessType","_context6"],"sources":["../../src/iso/merge.js"],"sourcesContent":["import _ from 'lodash';\nimport ih from 'immutability-helper';\n\nconst getIsAbstract = ({ fieldType, type }) => {\n  if (type === 'abstract') {\n    return true;\n  }\n  return (fieldType ?? 'abstract') === 'abstract';\n};\n\nconst assignSchemaValuesToNonAbstractFields = (schema) => ({\n  custom: schema?.custom || {},\n  fields: (schema?.fields || []).map((f) => {\n    const isAbstract = getIsAbstract(f);\n    return {\n      ...f,\n      schemaId: isAbstract ? null : schema.id || null,\n      schemaType: isAbstract ? null : schema.type || null,\n    };\n  }),\n});\n\nfunction mergeRelated(relateds) {\n  return relateds\n    .map((related) => (Array.isArray(related) ? { other: related } : related))\n    .reduce((merged, related) => {\n      if (!related) {\n        return merged;\n      }\n      Object.keys(related).forEach((relatedKey) => {\n        merged[relatedKey] = _.uniq(merged[relatedKey] ?? []).concat(\n          related[relatedKey],\n        );\n      });\n\n      return merged;\n    }, {});\n}\n\nfunction mergeField(field, mergeWithField) {\n  if (!mergeWithField) return field;\n\n  const protectedKeys = ['field', 'fieldType', 'origin', 'type', 'slug'];\n\n  const update = _.keys(mergeWithField)\n    .filter((k) => !protectedKeys.includes(k))\n    .filter((f) => mergeWithField[f] !== undefined)\n    .reduce((c, f) => _.set(c, f, { $set: mergeWithField[f] }), {});\n\n  if (field.optional && mergeWithField.optional === false) {\n    update.optional = { $set: false };\n  }\n\n  if (_.get(mergeWithField, 'allowedOptions')) {\n    update.options = {\n      $set: _.get(field, 'options').filter((o) =>\n        mergeWithField.allowedOptions.includes(o.id)),\n    };\n\n    update.$unset = ['allowedOptions'];\n  }\n\n  if (field.schemaId) {\n    update.schemaId = { $set: field.schemaId };\n  }\n\n  if (field.schemaType) {\n    update.schemaType = { $set: field.schemaType };\n  }\n\n  if (field.related || mergeWithField.related) {\n    update.related = {\n      $set: mergeRelated([field.related, mergeWithField.related]),\n    };\n  }\n\n  if (!_.keys(update).length) return field;\n\n  return ih(field, update);\n}\n\nfunction reduceFields(mergedIn, mergeWith) {\n  if (!_.get(mergeWith, 'fields')) {\n    return mergedIn;\n  }\n\n  if (!_.get(mergedIn, 'fields')) {\n    return mergeWith;\n  }\n\n  return {\n    ...mergedIn,\n    fields: assignSchemaValuesToNonAbstractFields(mergeWith)\n      .fields.concat(mergedIn.fields)\n      .reduce((fields, field) => {\n        const index = fields\n          .map((f) => f.slug ?? f.field)\n          .indexOf(field.slug ?? field.field);\n\n        if (index === -1) {\n          fields.push(field);\n        } else {\n          fields[index] = mergeField(field, fields[index]);\n        }\n\n        return fields;\n      }, []),\n  };\n}\n\nfunction mergeAll(...args) {\n  const options = {\n    access: null,\n  };\n\n  if (args.length === 1) return _.first(args);\n\n  if (_.last(args) && _.last(args).access !== undefined) {\n    Object.assign(options, args.pop());\n  }\n\n  const merged = args\n    .slice(1)\n    .reduce(reduceFields, assignSchemaValuesToNonAbstractFields(args[0]));\n\n  if (!options.access) return merged;\n\n  const accessTypes = Object.keys(options.access);\n\n  return {\n    ...merged,\n    fields: merged.fields.filter(\n      (f) =>\n        accessTypes.length\n        === accessTypes.filter(\n          (accessType) =>\n            !f[accessType]\n            || f[accessType].includes(options.access[accessType]),\n        ).length,\n    ),\n  };\n}\n\nexport default mergeAll;\n"],"mappings":";;;;;;;;;AACA,OAAOA,EAAE,MAAM,qBAAqB;AAEpC,MAAMC,aAAa,GAAGC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACxC,IAAIE,IAAI,KAAK,UAAU,EAAE;IACvB,OAAO,IAAI;EACb;EACA,OAAO,CAACD,SAAS,aAATA,SAAS,cAATA,SAAS,GAAI,UAAU,MAAM,UAAU;AACjD,CAAC;AAED,MAAME,qCAAqC,GAAIC,MAAM,KAAM;EACzDC,MAAM,EAAE,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,MAAM,KAAI,CAAC,CAAC;EAC5BC,MAAM,EAAE,CAAC,CAAAF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,MAAM,KAAI,EAAE,EAAEC,GAAG,CAAEC,CAAC,IAAK;IACxC,MAAMC,UAAU,GAAGV,aAAa,CAACS,CAAC,CAAC;IACnC,OAAAE,aAAA,CAAAA,aAAA,KACKF,CAAC;MACJG,QAAQ,EAAEF,UAAU,GAAG,IAAI,GAAGL,MAAM,CAACQ,EAAE,IAAI,IAAI;MAC/CC,UAAU,EAAEJ,UAAU,GAAG,IAAI,GAAGL,MAAM,CAACF,IAAI,IAAI;IAAI;EAEvD,CAAC;AACH,CAAC,CAAC;AAEF,SAASY,YAAYA,CAACC,QAAQ,EAAE;EAAA,IAAAC,QAAA;EAC9B,OAAOC,uBAAA,CAAAD,QAAA,GAAAD,QAAQ,CACZR,GAAG,CAAEW,OAAO,IAAMC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,GAAG;IAAEG,KAAK,EAAEH;EAAQ,CAAC,GAAGA,OAAQ,CAAC,EAAAI,IAAA,CAAAN,QAAA,EAClE,CAACO,MAAM,EAAEL,OAAO,KAAK;IAC3B,IAAI,CAACA,OAAO,EAAE;MACZ,OAAOK,MAAM;IACf;IACAC,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAACQ,OAAO,CAAEC,UAAU,IAAK;MAAA,IAAAC,kBAAA;MAC3CL,MAAM,CAACI,UAAU,CAAC,GAAGE,KAAA,EAAAD,kBAAA,GAAOL,MAAM,CAACI,UAAU,CAAC,cAAAC,kBAAA,cAAAA,kBAAA,GAAI,EAAE,CAAC,CAACE,MAAM,CAC1DZ,OAAO,CAACS,UAAU,CACpB,CAAC;IACH,CAAC,CAAC;IAEF,OAAOJ,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AAEA,SAASQ,UAAUA,CAACC,KAAK,EAAEC,cAAc,EAAE;EAAA,IAAAC,SAAA;EACzC,IAAI,CAACD,cAAc,EAAE,OAAOD,KAAK;EAEjC,MAAMG,aAAa,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC;EAEtE,MAAMC,MAAM,GAAGnB,uBAAA,CAAAiB,SAAA,GAAAG,KAAA,CAAOJ,cAAc,CAAC,CAClCK,MAAM,CAAEC,CAAC,IAAK,CAACC,yBAAA,CAAAL,aAAa,EAAAb,IAAA,CAAba,aAAa,EAAUI,CAAC,CAAC,CAAC,CACzCD,MAAM,CAAE9B,CAAC,IAAKyB,cAAc,CAACzB,CAAC,CAAC,KAAKiC,SAAS,CAAC,EAAAnB,IAAA,CAAAY,SAAA,EACvC,CAACQ,CAAC,EAAElC,CAAC,KAAKmC,IAAA,CAAMD,CAAC,EAAElC,CAAC,EAAE;IAAEoC,IAAI,EAAEX,cAAc,CAACzB,CAAC;EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAEjE,IAAIwB,KAAK,CAACa,QAAQ,IAAIZ,cAAc,CAACY,QAAQ,KAAK,KAAK,EAAE;IACvDT,MAAM,CAACS,QAAQ,GAAG;MAAED,IAAI,EAAE;IAAM,CAAC;EACnC;EAEA,IAAIE,IAAA,CAAMb,cAAc,EAAE,gBAAgB,CAAC,EAAE;IAC3CG,MAAM,CAACW,OAAO,GAAG;MACfH,IAAI,EAAEE,IAAA,CAAMd,KAAK,EAAE,SAAS,CAAC,CAACM,MAAM,CAAEU,CAAC;QAAA,IAAAC,SAAA;QAAA,OACrCT,yBAAA,CAAAS,SAAA,GAAAhB,cAAc,CAACiB,cAAc,EAAA5B,IAAA,CAAA2B,SAAA,EAAUD,CAAC,CAACpC,EAAE,CAAC;MAAA;IAChD,CAAC;IAEDwB,MAAM,CAACe,MAAM,GAAG,CAAC,gBAAgB,CAAC;EACpC;EAEA,IAAInB,KAAK,CAACrB,QAAQ,EAAE;IAClByB,MAAM,CAACzB,QAAQ,GAAG;MAAEiC,IAAI,EAAEZ,KAAK,CAACrB;IAAS,CAAC;EAC5C;EAEA,IAAIqB,KAAK,CAACnB,UAAU,EAAE;IACpBuB,MAAM,CAACvB,UAAU,GAAG;MAAE+B,IAAI,EAAEZ,KAAK,CAACnB;IAAW,CAAC;EAChD;EAEA,IAAImB,KAAK,CAACd,OAAO,IAAIe,cAAc,CAACf,OAAO,EAAE;IAC3CkB,MAAM,CAAClB,OAAO,GAAG;MACf0B,IAAI,EAAE9B,YAAY,CAAC,CAACkB,KAAK,CAACd,OAAO,EAAEe,cAAc,CAACf,OAAO,CAAC;IAC5D,CAAC;EACH;EAEA,IAAI,CAACmB,KAAA,CAAOD,MAAM,CAAC,CAACgB,MAAM,EAAE,OAAOpB,KAAK;EAExC,OAAOlC,EAAE,CAACkC,KAAK,EAAEI,MAAM,CAAC;AAC1B;AAEA,SAASiB,YAAYA,CAACC,QAAQ,EAAEC,SAAS,EAAE;EAAA,IAAAC,SAAA;EACzC,IAAI,CAACV,IAAA,CAAMS,SAAS,EAAE,QAAQ,CAAC,EAAE;IAC/B,OAAOD,QAAQ;EACjB;EAEA,IAAI,CAACR,IAAA,CAAMQ,QAAQ,EAAE,QAAQ,CAAC,EAAE;IAC9B,OAAOC,SAAS;EAClB;EAEA,OAAA7C,aAAA,CAAAA,aAAA,KACK4C,QAAQ;IACXhD,MAAM,EAAEW,uBAAA,CAAAuC,SAAA,GAAArD,qCAAqC,CAACoD,SAAS,CAAC,CACrDjD,MAAM,CAACwB,MAAM,CAACwB,QAAQ,CAAChD,MAAM,CAAC,EAAAgB,IAAA,CAAAkC,SAAA,EACvB,CAAClD,MAAM,EAAE0B,KAAK,KAAK;MAAA,IAAAyB,WAAA;MACzB,MAAMC,KAAK,GAAGpD,MAAM,CACjBC,GAAG,CAAEC,CAAC;QAAA,IAAAmD,OAAA;QAAA,QAAAA,OAAA,GAAKnD,CAAC,CAACoD,IAAI,cAAAD,OAAA,cAAAA,OAAA,GAAInD,CAAC,CAACwB,KAAK;MAAA,EAAC,CAC7B6B,OAAO,EAAAJ,WAAA,GAACzB,KAAK,CAAC4B,IAAI,cAAAH,WAAA,cAAAA,WAAA,GAAIzB,KAAK,CAACA,KAAK,CAAC;MAErC,IAAI0B,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBpD,MAAM,CAACwD,IAAI,CAAC9B,KAAK,CAAC;MACpB,CAAC,MAAM;QACL1B,MAAM,CAACoD,KAAK,CAAC,GAAG3B,UAAU,CAACC,KAAK,EAAE1B,MAAM,CAACoD,KAAK,CAAC,CAAC;MAClD;MAEA,OAAOpD,MAAM;IACf,CAAC,EAAE,EAAE;EAAC;AAEZ;AAEA,SAASyD,QAAQA,CAAA,EAAU;EAAA,IAAAC,SAAA;EACzB,MAAMjB,OAAO,GAAG;IACdkB,MAAM,EAAE;EACV,CAAC;EAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAf,MAAA,EAHiBgB,IAAI,OAAAjD,KAAA,CAAA+C,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;IAAJD,IAAI,CAAAC,IAAA,IAAAF,SAAA,CAAAE,IAAA;EAAA;EAKvB,IAAID,IAAI,CAAChB,MAAM,KAAK,CAAC,EAAE,OAAOkB,MAAA,CAAQF,IAAI,CAAC;EAE3C,IAAIG,KAAA,CAAOH,IAAI,CAAC,IAAIG,KAAA,CAAOH,IAAI,CAAC,CAACH,MAAM,KAAKxB,SAAS,EAAE;IACrDjB,MAAM,CAACgD,MAAM,CAACzB,OAAO,EAAEqB,IAAI,CAACK,GAAG,CAAC,CAAC,CAAC;EACpC;EAEA,MAAMlD,MAAM,GAAGN,uBAAA,CAAA+C,SAAA,GAAAI,IAAI,CAChBM,KAAK,CAAC,CAAC,CAAC,EAAApD,IAAA,CAAA0C,SAAA,EACDX,YAAY,EAAElD,qCAAqC,CAACiE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAEvE,IAAI,CAACrB,OAAO,CAACkB,MAAM,EAAE,OAAO1C,MAAM;EAElC,MAAMoD,WAAW,GAAGnD,MAAM,CAACC,IAAI,CAACsB,OAAO,CAACkB,MAAM,CAAC;EAE/C,OAAAvD,aAAA,CAAAA,aAAA,KACKa,MAAM;IACTjB,MAAM,EAAEiB,MAAM,CAACjB,MAAM,CAACgC,MAAM,CACzB9B,CAAC,IACAmE,WAAW,CAACvB,MAAM,KACduB,WAAW,CAACrC,MAAM,CACnBsC,UAAU;MAAA,IAAAC,SAAA;MAAA,OACT,CAACrE,CAAC,CAACoE,UAAU,CAAC,IACXpC,yBAAA,CAAAqC,SAAA,GAAArE,CAAC,CAACoE,UAAU,CAAC,EAAAtD,IAAA,CAAAuD,SAAA,EAAU9B,OAAO,CAACkB,MAAM,CAACW,UAAU,CAAC,CAAC;IAAA,CACzD,CAAC,CAACxB,MACN;EAAC;AAEL;AAEA,eAAeW,QAAQ","ignoreList":[]}