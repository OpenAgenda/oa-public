{"version":3,"file":"flattenSchema.js","names":["getFieldSlug","field","_field$slug","slug","getPath","parentPath","length","concat","extractLanguages","label","Object","keys","uniq","items","_reduceInstanceProperty","call","deduped","item","_includesInstanceProperty","getLabel","lang","shift","getMergedLabel","fieldLabel","parentLabel","_context","undefined","join","_objectSpread","getFlattenedSchemaFields","schema","_context2","options","arguments","path","prefixedLabels","parent","fields","fieldPath","flattenedField","push","getFlattenedSchema","params","assign"],"sources":["../../src/iso/flattenSchema.js"],"sourcesContent":["const getFieldSlug = (field) => field.slug ?? field.field;\nconst getPath = (parentPath, slug) =>\n  ((parentPath ?? '').length ? `${parentPath}.${slug}` : slug);\n\nconst extractLanguages = (label) =>\n  (typeof label === 'string' || !label ? [] : Object.keys(label));\nconst uniq = (items) =>\n  items.reduce(\n    (deduped, item) =>\n      (deduped.includes(item) ? deduped : deduped.concat(item)),\n    [],\n  );\n\nconst getLabel = (label, lang) => {\n  if (!label) return label;\n  if (typeof label === 'string') return label;\n  if (label[lang]) return label[lang];\n  return label[Object.keys(label).shift()];\n};\n\nconst getMergedLabel = (fieldLabel, parentLabel) => {\n  if (fieldLabel === undefined) {\n    return fieldLabel;\n  }\n\n  if (typeof fieldLabel === 'string' && typeof parentLabel === 'string') {\n    return [parentLabel, fieldLabel].join(': ');\n  }\n\n  return uniq(\n    extractLanguages(fieldLabel).concat(extractLanguages(parentLabel)),\n  ).reduce(\n    (label, lang) => ({\n      ...label,\n      [lang]: getMergedLabel(\n        getLabel(fieldLabel, lang),\n        getLabel(parentLabel, lang),\n      ),\n    }),\n    {},\n  );\n};\n\nfunction getFlattenedSchemaFields(schema, options = {}) {\n  const { path, prefixedLabels, parent } = options;\n\n  return schema.fields.reduce((fields, field) => {\n    const fieldPath = getPath(path, getFieldSlug(field));\n\n    if (field.schema) {\n      return fields.concat(\n        getFlattenedSchemaFields(field.schema, {\n          ...options,\n          parent: field,\n          path: getPath(path, fieldPath),\n        }),\n      );\n    }\n    const flattenedField = {\n      ...field,\n      field: fieldPath,\n    };\n\n    const label = prefixedLabels && parent\n      ? getMergedLabel(field.label, parent.label)\n      : field.label;\n\n    if (label) {\n      flattenedField.label = label;\n    }\n\n    fields.push(flattenedField);\n    return fields;\n  }, []);\n}\n\nexport default function getFlattenedSchema(schema, options = {}) {\n  const params = {\n    path: '',\n    prefixedLabels: false,\n    parent: null,\n  };\n  if (typeof options === 'string') {\n    params.path = options;\n  } else {\n    Object.assign(params, options);\n  }\n\n  return {\n    ...schema,\n    fields: getFlattenedSchemaFields(schema, options),\n  };\n}\n"],"mappings":"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","ignoreList":[]}