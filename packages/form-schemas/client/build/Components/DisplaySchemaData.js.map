{"version":3,"file":"DisplaySchemaData.js","names":["useState","useEffect","Spinner","flatten","jsxDEV","_jsxDEV","DisplaySchemaData","_ref","schema","schemaFromProps","data","dataFromProps","lang","res","isLoading","setIsLoading","setSchema","setData","fetch","then","response","json","_ref2","schemaFromRes","dataFromRes","fileName","_jsxFileName","lineNumber","columnNumber","className","children","fields","map","field","label","value","fieldType","rel","href","target","concat"],"sources":["../../src/Components/DisplaySchemaData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Spinner } from '@openagenda/react-shared';\n\nimport flatten from '../lib/flatten.js';\n\nexport default function DisplaySchemaData({\n  schema: schemaFromProps,\n  data: dataFromProps,\n  lang = 'en',\n  res,\n}) {\n  const [isLoading, setIsLoading] = useState(!!res);\n  const [schema, setSchema] = useState(res ? null : schemaFromProps);\n  const [data, setData] = useState(res ? null : dataFromProps);\n\n  useEffect(() => {\n    if (!res) return;\n\n    fetch(res).then((response) => {\n      response.json().then(({ schema: schemaFromRes, data: dataFromRes }) => {\n        setSchema(schemaFromRes);\n        setData(dataFromRes);\n        setIsLoading(false);\n      });\n    });\n  }, [res]);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <ul className=\"list-unstyled\">\n      {schema.fields.map((field) => {\n        const { label } = flatten(field, lang);\n        const value = data?.[field.field];\n\n        if (field.fieldType === 'link') {\n          return (\n            <li className=\"margin-bottom-xs\" key={`value-${field.field}`}>\n              <a rel=\"noreferrer\" href={value} target=\"_blank\">\n                {label}\n              </a>\n            </li>\n          );\n        }\n\n        return (\n          <li className=\"margin-bottom-xs\" key={`value-${field.field}`}>\n            <strong>{label}</strong>\n            <div>{value}</div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"],"mappings":"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","ignoreList":[]}