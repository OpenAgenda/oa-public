{"version":3,"file":"rules.js","names":["abilityPkg","config","AbilityBuilder","joinIfArray","value","delimiter","arguments","length","undefined","Array","isArray","join","splitIfNeeded","_includesInstanceProperty","call","split","format","r","map","id","entity_name","entityName","identifier","actions","action","subject","inverted","conditions","JSON","stringify","fields","reason","parse","list","_isString","TypeError","_isNumber","_every","request","knex","schemas","rule","select","where","whereIn","rules","_map","row","_mapKeys","v","k","_camelCase","getDefaultFor","defaultForFn","interfaces","defaultFor","builder","extract","wrapper","func","_len","args","_key","result","Object","assign","_last","can","_wrap","bind","cannot"],"sources":["../../src/service/rules.js"],"sourcesContent":["import _ from 'lodash';\nimport abilityPkg from '@casl/ability';\nimport config from './config.js';\n\nconst { AbilityBuilder } = abilityPkg;\n\nconst joinIfArray = (value, delimiter = '|') =>\n  (Array.isArray(value) ? value.join(delimiter) : value);\nconst splitIfNeeded = (value, delimiter = '|') => {\n  if (typeof value === 'string' && value.includes(delimiter)) {\n    return value.split(delimiter);\n  }\n\n  if (Array.isArray(value) && value.length === 1) {\n    return value[0];\n  }\n\n  return value;\n};\n\nexport function format(r) {\n  return Array.isArray(r)\n    ? r.map(format)\n    : {\n      id: r.id || null,\n      entity_name: r.entityName || null,\n      identifier: r.identifier || null,\n      actions: joinIfArray(r.actions || r.action),\n      subject: joinIfArray(r.subject),\n      inverted: r.inverted || false,\n      conditions: r.conditions ? JSON.stringify(r.conditions) : null,\n      fields: joinIfArray(r.fields) || null,\n      reason: r.reason || null,\n    };\n}\n\nexport function parse(r) {\n  return Array.isArray(r)\n    ? r.map(parse)\n    : {\n      id: r.id || null,\n      entityName: r.entityName || null,\n      identifier: r.identifier || null,\n      actions: splitIfNeeded(r.actions || r.action),\n      subject: splitIfNeeded(r.subject),\n      inverted: !!r.inverted,\n      conditions:\n          typeof r.conditions === 'string'\n            ? JSON.parse(r.conditions)\n            : r.conditions || null,\n      fields: splitIfNeeded(r.fields) || null,\n      reason: r.reason || null,\n    };\n}\n\nexport async function list(entityName, identifier) {\n  if (!_.isString(entityName)) {\n    throw new TypeError('`entityName` should be a string');\n  }\n\n  if (\n    !(\n      _.isNumber(identifier)\n      || (Array.isArray(identifier) && _.every(identifier, _.isNumber))\n    )\n  ) {\n    throw new TypeError(\n      '`identifier` should be a number or an array of numbers',\n    );\n  }\n\n  const request = config\n    .knex(config.schemas.rule)\n    .select()\n    .where('entity_name', entityName);\n\n  if (Array.isArray(identifier)) {\n    request.whereIn('identifier', identifier);\n  } else {\n    request.where('identifier', identifier);\n  }\n\n  const rules = _.map(await request, (row) =>\n    _.mapKeys(row, (v, k) => _.camelCase(k)));\n\n  return parse(rules);\n}\n\nexport function getDefaultFor(entityName) {\n  const defaultForFn = config.interfaces\n    && config.interfaces.defaultFor\n    && config.interfaces.defaultFor[entityName];\n  const builder = AbilityBuilder.extract();\n\n  function wrapper(func, ...args) {\n    const result = func(...args);\n\n    Object.assign(_.last(this.rules), { entityName, identifier: null });\n\n    return result;\n  }\n\n  builder.can = _.wrap(builder.can, wrapper).bind(builder);\n  builder.cannot = _.wrap(builder.cannot, wrapper).bind(builder);\n\n  return defaultForFn ? parse(defaultForFn(builder)) : [];\n}\n"],"mappings":"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","ignoreList":[]}