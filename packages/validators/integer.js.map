{"version":3,"file":"integer.js","names":["_omit","_interopRequireDefault","require","_number","_params","_errors","_listify","_default","exports","default","config","arguments","length","undefined","params","cleanParams","error","code","message","validateNumber","numberValidator","omit","validate","value","_context","clean","numberErrors","map","e","_objectSpread2","replace","_includes","call","parseInt","parseFloat","errors","type","field","list","listify","module"],"sources":["src/integer.js"],"sourcesContent":["import omit from 'lodash/omit';\nimport numberValidator from './number';\nimport cleanParams from './lib/params';\nimport errors from './lib/errors';\n\nimport listify from './listify';\n\nexport default (config = {}) => {\n  const params = cleanParams('integer', config, {\n    error: {\n      code: 'integer.invalid',\n      message: 'value is not an integer',\n    },\n  });\n\n  const validateNumber = numberValidator(omit(params, ['list']));\n\n  const validate = (value) => {\n    let clean;\n\n    try {\n      clean = validateNumber(value);\n    } catch (numberErrors) {\n      throw numberErrors.map((e) => ({\n        ...e,\n        code: e.code.replace('number', 'integer'),\n        message: e.message.replace('number', 'integer').replace(' a ', ' an '),\n      }));\n    }\n\n    if ([undefined, null].includes(clean)) {\n      return clean;\n    }\n\n    if (parseInt(clean, 10) !== parseFloat(clean)) {\n      throw errors(\n        params,\n        value,\n        'integer.invalid',\n        'not an integer',\n      );\n    }\n\n    return clean;\n  };\n\n  validate.type = 'integer';\n  validate.field = params.field;\n\n  return params.list ? listify(validate, params) : validate;\n};\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,OAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAEA,IAAAI,QAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAgC,IAAAK,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEjB,SAAAF,SAAA,EAAiB;EAAA,IAAhBG,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzB,MAAMG,MAAM,GAAG,IAAAC,eAAW,EAAC,SAAS,EAAEL,MAAM,EAAE;IAC5CM,KAAK,EAAE;MACLC,IAAI,EAAE,iBAAiB;MACvBC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,IAAAC,eAAe,EAAC,IAAAC,aAAI,EAACP,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;EAE9D,MAAMQ,QAAQ,GAAIC,KAAK,IAAK;IAAA,IAAAC,QAAA;IAC1B,IAAIC,KAAK;IAET,IAAI;MACFA,KAAK,GAAGN,cAAc,CAACI,KAAK,CAAC;IAC/B,CAAC,CAAC,OAAOG,YAAY,EAAE;MACrB,MAAMA,YAAY,CAACC,GAAG,CAAEC,CAAC,QAAAC,cAAA,CAAApB,OAAA,MAAAoB,cAAA,CAAApB,OAAA,MACpBmB,CAAC;QACJX,IAAI,EAAEW,CAAC,CAACX,IAAI,CAACa,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC;QACzCZ,OAAO,EAAEU,CAAC,CAACV,OAAO,CAACY,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,MAAM;MAAC,EACtE,CAAC;IACL;IAEA,IAAI,IAAAC,SAAA,CAAAtB,OAAA,EAAAe,QAAA,IAACX,SAAS,EAAE,IAAI,CAAC,EAAAmB,IAAA,CAAAR,QAAA,EAAUC,KAAK,CAAC,EAAE;MACrC,OAAOA,KAAK;IACd;IAEA,IAAIQ,QAAQ,CAACR,KAAK,EAAE,EAAE,CAAC,KAAKS,UAAU,CAACT,KAAK,CAAC,EAAE;MAC7C,MAAM,IAAAU,eAAM,EACVrB,MAAM,EACNS,KAAK,EACL,iBAAiB,EACjB,gBACF,CAAC;IACH;IAEA,OAAOE,KAAK;EACd,CAAC;EAEDH,QAAQ,CAACc,IAAI,GAAG,SAAS;EACzBd,QAAQ,CAACe,KAAK,GAAGvB,MAAM,CAACuB,KAAK;EAE7B,OAAOvB,MAAM,CAACwB,IAAI,GAAG,IAAAC,gBAAO,EAACjB,QAAQ,EAAER,MAAM,CAAC,GAAGQ,QAAQ;AAC3D,CAAC;AAAAkB,MAAA,CAAAhC,OAAA,GAAAA,OAAA,CAAAC,OAAA","ignoreList":[]}