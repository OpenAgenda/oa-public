{"version":3,"file":"index.js","names":["_listify","_interopRequireDefault","require","_utils","_clean","_withFieldValueMatches","defaults","fields","schema","options","Error","params","_objectSpread2","default","field","list","root","Object","assign","cleanSchema","defaultValue","schemaUtils","getDefault","validate","value","flattened","mapValuesToValidators","errors","clean","forEach","flat","isEnabled","validator","errs","_isArray2","concat","map","e","length","parts","paths","p","_set2","part","_get2","err","push","path","contextValues","Array","isArray","_isObject2","schemaFields","_keys2","filter","_includes","call","cursor","branches","split","leaf","pop","b","type","code","message","enableWith","withFieldValueMatches","registeredValidators","_assign2","listify","struct","register","v","keys","k","registerValidators","_default","exports","module"],"sources":["../src/schema/index.js"],"sourcesContent":["import _ from 'lodash';\nimport listify from '../listify';\nimport schemaUtils from './utils';\nimport cleanSchema from './clean';\nimport withFieldValueMatches from './withFieldValueMatches';\n\nconst defaults = {\n  fields: {}\n};\n\nfunction schema(options) {\n  if (!options) {\n    throw new Error('schema params missing at creation');\n  }\n\n  const params = {\n    field: null,\n    list: false,\n    ...defaults,\n    ...(options.fields ? options : { fields: options, root: true })\n  };\n\n  if (params.root) {\n    Object.assign(params, cleanSchema(params.fields));\n  }\n\n  const defaultValue = schemaUtils.getDefault(params.fields);\n\n  function validate(value) {\n    const flattened = schemaUtils.mapValuesToValidators(params.fields, value, defaultValue);\n\n    let errors = [];\n    const clean = {};\n\n    flattened.forEach(flat => {\n      try {\n        clean[flat.field] = flat.isEnabled ? flat.validator(flat.value) : null;\n      } catch (errs) {\n        if (!_.isArray(errs)) throw errs;\n\n        errors = errors.concat(errs.map(e => (\n          params.field ? { ...e, field: `${params.field}.${e.field}` } : e\n        )));\n      }\n    });\n\n    if (errors.length) {\n      throw errors;\n    }\n\n    return clean;\n  }\n\n  function parts(paths, value) {\n    const clean = {};\n    const errors = [];\n\n    paths.forEach(p => {\n      try {\n        _.set(clean, p, part(p, _.get(value, p), value));\n      } catch (errs) {\n        [].concat(errs).forEach(err => errors.push(err));\n      }\n    });\n\n    if (errors.length) throw errors;\n\n    return clean;\n  }\n\n  function part(path, value, contextValues) {\n    if (Array.isArray(path)) {\n      return parts(path, value);\n    }\n\n    // only the values to be evaluated are provided\n    if (_.isObject(path)) {\n      const schemaFields = _.keys(params.fields);\n\n      return parts(_.keys(path).filter(field => schemaFields.includes(field)), path);\n    }\n\n    let cursor = params.fields;\n\n    const branches = path.split('.');\n\n    const leaf = branches.pop();\n\n    // dig down\n    branches.forEach(b => {\n      cursor = cursor[b].fields;\n    });\n\n    cursor = cursor[leaf];\n\n    const type = cursor && cursor.type;\n\n    if (!type) {\n      throw {\n        code: 'field.notdefined',\n        message: 'field isn\\'t defined',\n        field: leaf\n      };\n    }\n\n    if (cursor.enableWith && !withFieldValueMatches(cursor, 'enableWith', contextValues, params.fields)) {\n      return null;\n    }\n\n    const validator = registeredValidators[type](cursor);\n\n    return validator(value);\n  }\n\n  if (params.field) {\n    Object.assign(validate, { field: params.field });\n  }\n\n  /**\n   * exposed endpoints\n   */\n  return _.assign(params.list ? listify(validate, params) : validate, {\n    part,\n    defaultValue, // .default is not tolerated by ie8\n    default: defaultValue,\n    fields: params.fields,\n    type: 'schema',\n    struct: params.root ? options : params.fields, // legacy\n  });\n}\n\nconst registeredValidators = { schema };\n\nfunction register(v) {\n  Object.keys(v).forEach(k => {\n    registeredValidators[k] = v[k];\n  });\n\n  schemaUtils.registerValidators(registeredValidators);\n}\n\nexport default Object.assign(schema, { register });\n"],"mappings":"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","ignoreList":[]}