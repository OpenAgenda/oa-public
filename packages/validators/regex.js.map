{"version":3,"file":"regex.js","names":["_errors","_interopRequireDefault","require","_default","exports","default","config","arguments","length","undefined","params","_objectSpread2","optional","field","regex","error","code","message","clean","trim","type","min","max","validator","value","concat","errors","_trim","call","test","match","module"],"sources":["src/regex.js"],"sourcesContent":["import errors from './lib/errors';\n\nexport default (config = {}) => {\n  const params = {\n    optional: false,\n    field: false, // required\n    regex: false, // required\n    error: { // replace with something more specific\n      code: 'regex.mismatch',\n      message: 'regex does not match',\n    },\n    clean: false, // if true result of regex is clean value\n    trim: true,\n    type: false,\n    min: null,\n    max: null,\n    ...config,\n  };\n\n  const validator = value => {\n    let clean = value ? `${value}` : value;\n\n    if (params.optional && (!clean || !clean.length)) {\n      return 'default' in params ? params.default : clean;\n    }\n\n    if (!params.optional && !clean) {\n      throw errors(\n        params,\n        value,\n        'required',\n        'value must not be empty',\n      );\n    }\n\n    if (typeof clean === 'string' && params.trim) {\n      clean = clean.trim();\n    }\n\n    if (params.min !== null && clean.length < params.min) {\n      throw errors(\n        params,\n        value,\n        'tooshort',\n        'value is too short',\n      );\n    }\n\n    if (params.max !== null && clean.length > params.max) {\n      throw errors(\n        params,\n        value,\n        'toolong',\n        'value is too long',\n      );\n    }\n\n    if (!params.regex.test(clean)) {\n      throw errors(params, value, params.error.code, params.error.message);\n    }\n\n    return params.clean ? clean.match(params.regex)[0] : clean;\n  };\n\n  if (params.type) {\n    validator.type = params.type;\n  }\n\n  if (params.field) {\n    validator.field = params.field;\n  }\n\n  return validator;\n};\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAkC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEnB,SAAAF,SAAA,EAAiB;EAAA,IAAhBG,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzB,MAAMG,MAAM,OAAAC,cAAA,CAAAN,OAAA;IACVO,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,KAAK;IAAE;IACdC,KAAK,EAAE,KAAK;IAAE;IACdC,KAAK,EAAE;MAAE;MACPC,IAAI,EAAE,gBAAgB;MACtBC,OAAO,EAAE;IACX,CAAC;IACDC,KAAK,EAAE,KAAK;IAAE;IACdC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,KAAK;IACXC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAE;EAAI,GACNhB,MAAM,CACV;EAED,MAAMiB,SAAS,GAAGC,KAAK,IAAI;IACzB,IAAIN,KAAK,GAAGM,KAAK,MAAAC,MAAA,CAAMD,KAAK,IAAKA,KAAK;IAEtC,IAAId,MAAM,CAACE,QAAQ,KAAK,CAACM,KAAK,IAAI,CAACA,KAAK,CAACV,MAAM,CAAC,EAAE;MAChD,OAAO,SAAS,IAAIE,MAAM,GAAGA,MAAM,CAACL,OAAO,GAAGa,KAAK;IACrD;IAEA,IAAI,CAACR,MAAM,CAACE,QAAQ,IAAI,CAACM,KAAK,EAAE;MAC9B,MAAM,IAAAQ,eAAM,EACVhB,MAAM,EACNc,KAAK,EACL,UAAU,EACV,yBACF,CAAC;IACH;IAEA,IAAI,OAAON,KAAK,KAAK,QAAQ,QAAAS,KAAA,CAAAtB,OAAA,EAAIK,MAAM,CAAK,EAAE;MAC5CQ,KAAK,GAAG,IAAAS,KAAA,CAAAtB,OAAA,EAAAa,KAAK,EAAAU,IAAA,CAALV,KAAW,CAAC;IACtB;IAEA,IAAIR,MAAM,CAACW,GAAG,KAAK,IAAI,IAAIH,KAAK,CAACV,MAAM,GAAGE,MAAM,CAACW,GAAG,EAAE;MACpD,MAAM,IAAAK,eAAM,EACVhB,MAAM,EACNc,KAAK,EACL,UAAU,EACV,oBACF,CAAC;IACH;IAEA,IAAId,MAAM,CAACY,GAAG,KAAK,IAAI,IAAIJ,KAAK,CAACV,MAAM,GAAGE,MAAM,CAACY,GAAG,EAAE;MACpD,MAAM,IAAAI,eAAM,EACVhB,MAAM,EACNc,KAAK,EACL,SAAS,EACT,mBACF,CAAC;IACH;IAEA,IAAI,CAACd,MAAM,CAACI,KAAK,CAACe,IAAI,CAACX,KAAK,CAAC,EAAE;MAC7B,MAAM,IAAAQ,eAAM,EAAChB,MAAM,EAAEc,KAAK,EAAEd,MAAM,CAACK,KAAK,CAACC,IAAI,EAAEN,MAAM,CAACK,KAAK,CAACE,OAAO,CAAC;IACtE;IAEA,OAAOP,MAAM,CAACQ,KAAK,GAAGA,KAAK,CAACY,KAAK,CAACpB,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGI,KAAK;EAC5D,CAAC;EAED,IAAIR,MAAM,CAACU,IAAI,EAAE;IACfG,SAAS,CAACH,IAAI,GAAGV,MAAM,CAACU,IAAI;EAC9B;EAEA,IAAIV,MAAM,CAACG,KAAK,EAAE;IAChBU,SAAS,CAACV,KAAK,GAAGH,MAAM,CAACG,KAAK;EAChC;EAEA,OAAOU,SAAS;AAClB,CAAC;AAAAQ,MAAA,CAAA3B,OAAA,GAAAA,OAAA,CAAAC,OAAA","ignoreList":[]}